package lotr.common.init;

import java.util.Random;
import java.util.function.ToIntFunction;

import lotr.common.block.*;
import lotr.common.block.trees.AppleTree;
import lotr.common.block.trees.AspenTree;
import lotr.common.block.trees.BeechTree;
import lotr.common.block.trees.CedarTree;
import lotr.common.block.trees.CherryTree;
import lotr.common.block.trees.CulumaldaTree;
import lotr.common.block.trees.CypressTree;
import lotr.common.block.trees.FirTree;
import lotr.common.block.trees.GreenOakTree;
import lotr.common.block.trees.HollyTree;
import lotr.common.block.trees.LairelosseTree;
import lotr.common.block.trees.LarchTree;
import lotr.common.block.trees.LebethronTree;
import lotr.common.block.trees.MallornTree;
import lotr.common.block.trees.MapleTree;
import lotr.common.block.trees.MirkOakTree;
import lotr.common.block.trees.PearTree;
import lotr.common.block.trees.PineTree;
import lotr.common.block.trees.RedOakTree;
import lotr.common.world.biome.LOTRBiomeFeatures;
import net.minecraft.block.AbstractBlock.Properties;
import net.minecraft.block.Block;
import net.minecraft.block.BlockState;
import net.minecraft.block.Blocks;
import net.minecraft.block.SoundType;
import net.minecraft.block.material.Material;
import net.minecraft.block.material.MaterialColor;
import net.minecraft.entity.EntityType;
import net.minecraft.item.DyeColor;
import net.minecraft.particles.ParticleTypes;
import net.minecraft.potion.Effects;
import net.minecraft.util.SoundEvents;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.IBlockReader;
import net.minecraftforge.eventbus.api.IEventBus;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;

public class LOTRBlocks {
	public static DeferredRegister<Block> BLOCKS;
	public static int MISC_STEEL_HARVEST_LVL = 1;
	public static int COPPER_HARVEST_LVL = 1;
	public static int TIN_HARVEST_LVL = 1;
	public static int BRONZE_HARVEST_LVL = 1;
	public static int SILVER_HARVEST_LVL = 2;
	public static int MITHRIL_HARVEST_LVL = 2;
	public static int MORGUL_IRON_HARVEST_LVL = 1;
	public static int DURNOR_HARVEST_LVL = 0;
	public static int EDHELVIR_HARVEST_LVL = 2;
	public static int GULDURIL_HARVEST_LVL = 2;
	public static int GLOWSTONE_HARVEST_LVL = 1;
	public static int GEM_HARVEST_LVL = 2;
	public static int SALT_HARVEST_LVL = 0;
	public static int SULFUR_HARVEST_LVL = 0;
	public static int NITER_HARVEST_LVL = 0;
	public static int PALANTIR_HARVEST_LVL = 2;
	public static SoundType SOUND_CERAMIC;
	public static SoundType SOUND_TREASURE;
	public static RegistryObject<Block> GONDOR_ROCK;
	public static RegistryObject<Block> GONDOR_BRICK;
	public static RegistryObject<Block> MORDOR_ROCK;
	public static RegistryObject<Block> MORDOR_BRICK;
	public static RegistryObject<Block> ROHAN_ROCK;
	public static RegistryObject<Block> ROHAN_BRICK;
	public static RegistryObject<Block> BLUE_ROCK;
	public static RegistryObject<Block> BLUE_BRICK;
	public static RegistryObject<Block> RED_ROCK;
	public static RegistryObject<Block> RED_BRICK;
	public static RegistryObject<Block> SIMBELMYNE;
	public static RegistryObject<Block> SHIRE_HEATHER;
	public static RegistryObject<Block> COPPER_ORE;
	public static RegistryObject<Block> TIN_ORE;
	public static RegistryObject<Block> SILVER_ORE;
	public static RegistryObject<Block> MITHRIL_ORE;
	public static RegistryObject<Block> COPPER_BLOCK;
	public static RegistryObject<Block> TIN_BLOCK;
	public static RegistryObject<Block> SILVER_BLOCK;
	public static RegistryObject<Block> MITHRIL_BLOCK;
	public static RegistryObject<Block> BRONZE_BLOCK;
	public static RegistryObject<Block> POTTED_SIMBELMYNE;
	public static RegistryObject<Block> POTTED_SHIRE_HEATHER;
	public static RegistryObject<Block> GONDOR_ROCK_SLAB;
	public static RegistryObject<Block> GONDOR_ROCK_STAIRS;
	public static RegistryObject<Block> GONDOR_ROCK_WALL;
	public static RegistryObject<Block> GONDOR_CRAFTING_TABLE;
	public static RegistryObject<Block> MORDOR_CRAFTING_TABLE;
	public static RegistryObject<Block> ROHAN_CRAFTING_TABLE;
	public static RegistryObject<Block> PINE_LOG;
	public static RegistryObject<Block> PINE_WOOD;
	public static RegistryObject<Block> PINE_PLANKS;
	public static RegistryObject<Block> PINE_LEAVES;
	public static RegistryObject<Block> PINE_SAPLING;
	public static RegistryObject<Block> POTTED_PINE_SAPLING;
	public static RegistryObject<Block> PINE_SLAB;
	public static RegistryObject<Block> PINE_STAIRS;
	public static RegistryObject<Block> PINE_FENCE;
	public static RegistryObject<Block> PINE_FENCE_GATE;
	public static RegistryObject<Block> PINE_DOOR;
	public static RegistryObject<Block> PINE_TRAPDOOR;
	public static RegistryObject<Block> PINE_PRESSURE_PLATE;
	public static RegistryObject<Block> PINE_BUTTON;
	public static RegistryObject<Block> STRIPPED_PINE_LOG;
	public static RegistryObject<Block> STRIPPED_PINE_WOOD;
	public static RegistryObject<Block> PINE_BEAM;
	public static RegistryObject<Block> PINE_SIGN;
	public static RegistryObject<Block> PINE_WALL_SIGN;
	public static RegistryObject<Block> MALLORN_LOG;
	public static RegistryObject<Block> MALLORN_WOOD;
	public static RegistryObject<Block> MALLORN_PLANKS;
	public static RegistryObject<Block> MALLORN_LEAVES;
	public static RegistryObject<Block> MALLORN_SAPLING;
	public static RegistryObject<Block> POTTED_MALLORN_SAPLING;
	public static RegistryObject<Block> MALLORN_SLAB;
	public static RegistryObject<Block> MALLORN_STAIRS;
	public static RegistryObject<Block> MALLORN_FENCE;
	public static RegistryObject<Block> MALLORN_FENCE_GATE;
	public static RegistryObject<Block> MALLORN_DOOR;
	public static RegistryObject<Block> MALLORN_TRAPDOOR;
	public static RegistryObject<Block> MALLORN_PRESSURE_PLATE;
	public static RegistryObject<Block> MALLORN_BUTTON;
	public static RegistryObject<Block> STRIPPED_MALLORN_LOG;
	public static RegistryObject<Block> STRIPPED_MALLORN_WOOD;
	public static RegistryObject<Block> MALLORN_BEAM;
	public static RegistryObject<Block> MALLORN_SIGN;
	public static RegistryObject<Block> MALLORN_WALL_SIGN;
	public static RegistryObject<Block> DWARVEN_BRICK;
	public static RegistryObject<Block> HIGH_ELVEN_BRICK;
	public static RegistryObject<Block> GALADHRIM_BRICK;
	public static RegistryObject<Block> WOOD_ELVEN_BRICK;
	public static RegistryObject<Block> DWARVEN_CRAFTING_TABLE;
	public static RegistryObject<Block> LINDON_CRAFTING_TABLE;
	public static RegistryObject<Block> RIVENDELL_CRAFTING_TABLE;
	public static RegistryObject<Block> GALADHRIM_CRAFTING_TABLE;
	public static RegistryObject<Block> WOOD_ELVEN_CRAFTING_TABLE;
	public static RegistryObject<Block> APPLE_CRUMBLE;
	public static RegistryObject<Block> SALT_ORE;
	public static RegistryObject<Block> SULFUR_ORE;
	public static RegistryObject<Block> NITER_ORE;
	public static RegistryObject<Block> SALT_BLOCK;
	public static RegistryObject<Block> SULFUR_BLOCK;
	public static RegistryObject<Block> NITER_BLOCK;
	public static RegistryObject<Block> MORGUL_IRON_ORE_MORDOR;
	public static RegistryObject<Block> MORGUL_IRON_ORE_STONE;
	public static RegistryObject<Block> DURNOR_ORE;
	public static RegistryObject<Block> ORC_STEEL_BLOCK;
	public static RegistryObject<Block> DURNOR_BLOCK;
	public static RegistryObject<Block> HARAD_BRICK;
	public static RegistryObject<Block> RED_HARAD_BRICK;
	public static RegistryObject<Block> HARAD_CRAFTING_TABLE;
	public static RegistryObject<Block> GONDOR_BRICK_SLAB;
	public static RegistryObject<Block> GONDOR_BRICK_STAIRS;
	public static RegistryObject<Block> GONDOR_BRICK_WALL;
	public static RegistryObject<Block> MORDOR_ROCK_SLAB;
	public static RegistryObject<Block> MORDOR_ROCK_STAIRS;
	public static RegistryObject<Block> MORDOR_ROCK_WALL;
	public static RegistryObject<Block> MORDOR_BRICK_SLAB;
	public static RegistryObject<Block> MORDOR_BRICK_STAIRS;
	public static RegistryObject<Block> MORDOR_BRICK_WALL;
	public static RegistryObject<Block> ROHAN_ROCK_SLAB;
	public static RegistryObject<Block> ROHAN_ROCK_STAIRS;
	public static RegistryObject<Block> ROHAN_ROCK_WALL;
	public static RegistryObject<Block> ROHAN_BRICK_SLAB;
	public static RegistryObject<Block> ROHAN_BRICK_STAIRS;
	public static RegistryObject<Block> ROHAN_BRICK_WALL;
	public static RegistryObject<Block> BLUE_ROCK_SLAB;
	public static RegistryObject<Block> BLUE_ROCK_STAIRS;
	public static RegistryObject<Block> BLUE_ROCK_WALL;
	public static RegistryObject<Block> BLUE_BRICK_SLAB;
	public static RegistryObject<Block> BLUE_BRICK_STAIRS;
	public static RegistryObject<Block> BLUE_BRICK_WALL;
	public static RegistryObject<Block> RED_ROCK_SLAB;
	public static RegistryObject<Block> RED_ROCK_STAIRS;
	public static RegistryObject<Block> RED_ROCK_WALL;
	public static RegistryObject<Block> RED_BRICK_SLAB;
	public static RegistryObject<Block> RED_BRICK_STAIRS;
	public static RegistryObject<Block> RED_BRICK_WALL;
	public static RegistryObject<Block> DWARVEN_BRICK_SLAB;
	public static RegistryObject<Block> DWARVEN_BRICK_STAIRS;
	public static RegistryObject<Block> DWARVEN_BRICK_WALL;
	public static RegistryObject<Block> HIGH_ELVEN_BRICK_SLAB;
	public static RegistryObject<Block> HIGH_ELVEN_BRICK_STAIRS;
	public static RegistryObject<Block> HIGH_ELVEN_BRICK_WALL;
	public static RegistryObject<Block> GALADHRIM_BRICK_SLAB;
	public static RegistryObject<Block> GALADHRIM_BRICK_STAIRS;
	public static RegistryObject<Block> GALADHRIM_BRICK_WALL;
	public static RegistryObject<Block> WOOD_ELVEN_BRICK_SLAB;
	public static RegistryObject<Block> WOOD_ELVEN_BRICK_STAIRS;
	public static RegistryObject<Block> WOOD_ELVEN_BRICK_WALL;
	public static RegistryObject<Block> HARAD_BRICK_SLAB;
	public static RegistryObject<Block> HARAD_BRICK_STAIRS;
	public static RegistryObject<Block> HARAD_BRICK_WALL;
	public static RegistryObject<Block> RED_HARAD_BRICK_SLAB;
	public static RegistryObject<Block> RED_HARAD_BRICK_STAIRS;
	public static RegistryObject<Block> RED_HARAD_BRICK_WALL;
	public static RegistryObject<Block> DWARVEN_STEEL_BLOCK;
	public static RegistryObject<Block> ELVEN_STEEL_BLOCK;
	public static RegistryObject<Block> MIRK_OAK_LOG;
	public static RegistryObject<Block> MIRK_OAK_WOOD;
	public static RegistryObject<Block> MIRK_OAK_PLANKS;
	public static RegistryObject<Block> MIRK_OAK_LEAVES;
	public static RegistryObject<Block> MIRK_OAK_SAPLING;
	public static RegistryObject<Block> POTTED_MIRK_OAK_SAPLING;
	public static RegistryObject<Block> MIRK_OAK_SLAB;
	public static RegistryObject<Block> MIRK_OAK_STAIRS;
	public static RegistryObject<Block> MIRK_OAK_FENCE;
	public static RegistryObject<Block> MIRK_OAK_FENCE_GATE;
	public static RegistryObject<Block> MIRK_OAK_DOOR;
	public static RegistryObject<Block> MIRK_OAK_TRAPDOOR;
	public static RegistryObject<Block> MIRK_OAK_PRESSURE_PLATE;
	public static RegistryObject<Block> MIRK_OAK_BUTTON;
	public static RegistryObject<Block> STRIPPED_MIRK_OAK_LOG;
	public static RegistryObject<Block> STRIPPED_MIRK_OAK_WOOD;
	public static RegistryObject<Block> MIRK_OAK_BEAM;
	public static RegistryObject<Block> MIRK_OAK_SIGN;
	public static RegistryObject<Block> MIRK_OAK_WALL_SIGN;
	public static RegistryObject<Block> CHARRED_LOG;
	public static RegistryObject<Block> CHARRED_WOOD;
	public static RegistryObject<Block> CHARRED_PLANKS;
	public static RegistryObject<Block> CHARRED_SLAB;
	public static RegistryObject<Block> CHARRED_STAIRS;
	public static RegistryObject<Block> CHARRED_FENCE;
	public static RegistryObject<Block> CHARRED_FENCE_GATE;
	public static RegistryObject<Block> CHARRED_DOOR;
	public static RegistryObject<Block> CHARRED_TRAPDOOR;
	public static RegistryObject<Block> CHARRED_PRESSURE_PLATE;
	public static RegistryObject<Block> CHARRED_BUTTON;
	public static RegistryObject<Block> STRIPPED_CHARRED_LOG;
	public static RegistryObject<Block> STRIPPED_CHARRED_WOOD;
	public static RegistryObject<Block> CHARRED_BEAM;
	public static RegistryObject<Block> CHARRED_SIGN;
	public static RegistryObject<Block> CHARRED_WALL_SIGN;
	public static RegistryObject<Block> APPLE_LOG;
	public static RegistryObject<Block> APPLE_WOOD;
	public static RegistryObject<Block> APPLE_PLANKS;
	public static RegistryObject<Block> APPLE_LEAVES;
	public static RegistryObject<Block> APPLE_LEAVES_RED;
	public static RegistryObject<Block> APPLE_LEAVES_GREEN;
	public static RegistryObject<Block> APPLE_SAPLING;
	public static RegistryObject<Block> POTTED_APPLE_SAPLING;
	public static RegistryObject<Block> APPLE_SLAB;
	public static RegistryObject<Block> APPLE_STAIRS;
	public static RegistryObject<Block> APPLE_FENCE;
	public static RegistryObject<Block> APPLE_FENCE_GATE;
	public static RegistryObject<Block> APPLE_DOOR;
	public static RegistryObject<Block> APPLE_TRAPDOOR;
	public static RegistryObject<Block> APPLE_PRESSURE_PLATE;
	public static RegistryObject<Block> APPLE_BUTTON;
	public static RegistryObject<Block> STRIPPED_APPLE_LOG;
	public static RegistryObject<Block> STRIPPED_APPLE_WOOD;
	public static RegistryObject<Block> APPLE_BEAM;
	public static RegistryObject<Block> APPLE_SIGN;
	public static RegistryObject<Block> APPLE_WALL_SIGN;
	public static RegistryObject<Block> PEAR_LOG;
	public static RegistryObject<Block> PEAR_WOOD;
	public static RegistryObject<Block> PEAR_PLANKS;
	public static RegistryObject<Block> PEAR_LEAVES;
	public static RegistryObject<Block> PEAR_LEAVES_FRUIT;
	public static RegistryObject<Block> PEAR_SAPLING;
	public static RegistryObject<Block> POTTED_PEAR_SAPLING;
	public static RegistryObject<Block> PEAR_SLAB;
	public static RegistryObject<Block> PEAR_STAIRS;
	public static RegistryObject<Block> PEAR_FENCE;
	public static RegistryObject<Block> PEAR_FENCE_GATE;
	public static RegistryObject<Block> PEAR_DOOR;
	public static RegistryObject<Block> PEAR_TRAPDOOR;
	public static RegistryObject<Block> PEAR_PRESSURE_PLATE;
	public static RegistryObject<Block> PEAR_BUTTON;
	public static RegistryObject<Block> STRIPPED_PEAR_LOG;
	public static RegistryObject<Block> STRIPPED_PEAR_WOOD;
	public static RegistryObject<Block> PEAR_BEAM;
	public static RegistryObject<Block> PEAR_SIGN;
	public static RegistryObject<Block> PEAR_WALL_SIGN;
	public static RegistryObject<Block> CHERRY_LOG;
	public static RegistryObject<Block> CHERRY_WOOD;
	public static RegistryObject<Block> CHERRY_PLANKS;
	public static RegistryObject<Block> CHERRY_LEAVES;
	public static RegistryObject<Block> CHERRY_LEAVES_FRUIT;
	public static RegistryObject<Block> CHERRY_SAPLING;
	public static RegistryObject<Block> POTTED_CHERRY_SAPLING;
	public static RegistryObject<Block> CHERRY_SLAB;
	public static RegistryObject<Block> CHERRY_STAIRS;
	public static RegistryObject<Block> CHERRY_FENCE;
	public static RegistryObject<Block> CHERRY_FENCE_GATE;
	public static RegistryObject<Block> CHERRY_DOOR;
	public static RegistryObject<Block> CHERRY_TRAPDOOR;
	public static RegistryObject<Block> CHERRY_PRESSURE_PLATE;
	public static RegistryObject<Block> CHERRY_BUTTON;
	public static RegistryObject<Block> STRIPPED_CHERRY_LOG;
	public static RegistryObject<Block> STRIPPED_CHERRY_WOOD;
	public static RegistryObject<Block> CHERRY_BEAM;
	public static RegistryObject<Block> CHERRY_SIGN;
	public static RegistryObject<Block> CHERRY_WALL_SIGN;
	public static RegistryObject<Block> LEBETHRON_LOG;
	public static RegistryObject<Block> LEBETHRON_WOOD;
	public static RegistryObject<Block> LEBETHRON_PLANKS;
	public static RegistryObject<Block> LEBETHRON_LEAVES;
	public static RegistryObject<Block> LEBETHRON_SAPLING;
	public static RegistryObject<Block> POTTED_LEBETHRON_SAPLING;
	public static RegistryObject<Block> LEBETHRON_SLAB;
	public static RegistryObject<Block> LEBETHRON_STAIRS;
	public static RegistryObject<Block> LEBETHRON_FENCE;
	public static RegistryObject<Block> LEBETHRON_FENCE_GATE;
	public static RegistryObject<Block> LEBETHRON_DOOR;
	public static RegistryObject<Block> LEBETHRON_TRAPDOOR;
	public static RegistryObject<Block> LEBETHRON_PRESSURE_PLATE;
	public static RegistryObject<Block> LEBETHRON_BUTTON;
	public static RegistryObject<Block> STRIPPED_LEBETHRON_LOG;
	public static RegistryObject<Block> STRIPPED_LEBETHRON_WOOD;
	public static RegistryObject<Block> LEBETHRON_BEAM;
	public static RegistryObject<Block> LEBETHRON_SIGN;
	public static RegistryObject<Block> LEBETHRON_WALL_SIGN;
	public static RegistryObject<Block> BEECH_LOG;
	public static RegistryObject<Block> BEECH_WOOD;
	public static RegistryObject<Block> BEECH_PLANKS;
	public static RegistryObject<Block> BEECH_LEAVES;
	public static RegistryObject<Block> BEECH_SAPLING;
	public static RegistryObject<Block> POTTED_BEECH_SAPLING;
	public static RegistryObject<Block> BEECH_SLAB;
	public static RegistryObject<Block> BEECH_STAIRS;
	public static RegistryObject<Block> BEECH_FENCE;
	public static RegistryObject<Block> BEECH_FENCE_GATE;
	public static RegistryObject<Block> BEECH_DOOR;
	public static RegistryObject<Block> BEECH_TRAPDOOR;
	public static RegistryObject<Block> BEECH_PRESSURE_PLATE;
	public static RegistryObject<Block> BEECH_BUTTON;
	public static RegistryObject<Block> STRIPPED_BEECH_LOG;
	public static RegistryObject<Block> STRIPPED_BEECH_WOOD;
	public static RegistryObject<Block> BEECH_BEAM;
	public static RegistryObject<Block> BEECH_SIGN;
	public static RegistryObject<Block> BEECH_WALL_SIGN;
	public static RegistryObject<Block> CHERRY_PIE;
	public static RegistryObject<Block> HEARTH_BLOCK;
	public static RegistryObject<Block> MALLORN_LADDER;
	public static RegistryObject<Block> ELANOR;
	public static RegistryObject<Block> NIPHREDIL;
	public static RegistryObject<Block> POTTED_ELANOR;
	public static RegistryObject<Block> POTTED_NIPHREDIL;
	public static RegistryObject<Block> BLUEBELL;
	public static RegistryObject<Block> MARIGOLD;
	public static RegistryObject<Block> ASPHODEL;
	public static RegistryObject<Block> LAVENDER;
	public static RegistryObject<Block> POTTED_BLUEBELL;
	public static RegistryObject<Block> POTTED_MARIGOLD;
	public static RegistryObject<Block> POTTED_ASPHODEL;
	public static RegistryObject<Block> POTTED_LAVENDER;
	public static RegistryObject<Block> MORDOR_GRAVEL;
	public static RegistryObject<Block> MORDOR_DIRT;
	public static RegistryObject<Block> MORDOR_MOSS;
	public static RegistryObject<Block> MORDOR_GRASS;
	public static RegistryObject<Block> MORDOR_THORN;
	public static RegistryObject<Block> POTTED_MORDOR_THORN;
	public static RegistryObject<Block> DWARVEN_PILLAR;
	public static RegistryObject<Block> DWARVEN_PILLAR_SLAB;
	public static RegistryObject<Block> STONE_PILLAR;
	public static RegistryObject<Block> STONE_PILLAR_SLAB;
	public static RegistryObject<Block> GONDOR_PILLAR;
	public static RegistryObject<Block> GONDOR_PILLAR_SLAB;
	public static RegistryObject<Block> GLOWSTONE_ORE;
	public static RegistryObject<Block> GLOWING_DWARVEN_BRICK;
	public static RegistryObject<Block> MORDOR_PILLAR;
	public static RegistryObject<Block> MORDOR_PILLAR_SLAB;
	public static RegistryObject<Block> ROHAN_PILLAR;
	public static RegistryObject<Block> ROHAN_PILLAR_SLAB;
	public static RegistryObject<Block> BLUE_PILLAR;
	public static RegistryObject<Block> BLUE_PILLAR_SLAB;
	public static RegistryObject<Block> RED_PILLAR;
	public static RegistryObject<Block> RED_PILLAR_SLAB;
	public static RegistryObject<Block> HIGH_ELVEN_PILLAR;
	public static RegistryObject<Block> HIGH_ELVEN_PILLAR_SLAB;
	public static RegistryObject<Block> GALADHRIM_PILLAR;
	public static RegistryObject<Block> GALADHRIM_PILLAR_SLAB;
	public static RegistryObject<Block> WOOD_ELVEN_PILLAR;
	public static RegistryObject<Block> WOOD_ELVEN_PILLAR_SLAB;
	public static RegistryObject<Block> HARAD_PILLAR;
	public static RegistryObject<Block> HARAD_PILLAR_SLAB;
	public static RegistryObject<Block> RED_HARAD_PILLAR;
	public static RegistryObject<Block> RED_HARAD_PILLAR_SLAB;
	public static RegistryObject<Block> UMBAR_BRICK;
	public static RegistryObject<Block> UMBAR_BRICK_SLAB;
	public static RegistryObject<Block> UMBAR_BRICK_STAIRS;
	public static RegistryObject<Block> UMBAR_BRICK_WALL;
	public static RegistryObject<Block> UMBAR_CRAFTING_TABLE;
	public static RegistryObject<Block> UMBAR_PILLAR;
	public static RegistryObject<Block> UMBAR_PILLAR_SLAB;
	public static RegistryObject<Block> DRIPSTONE;
	public static RegistryObject<Block> MORDOR_DRIPSTONE;
	public static RegistryObject<Block> OBSIDIAN_DRIPSTONE;
	public static RegistryObject<Block> ICE_DRIPSTONE;
	public static RegistryObject<Block> GONDOR_DRIPSTONE;
	public static RegistryObject<Block> ROHAN_DRIPSTONE;
	public static RegistryObject<Block> BLUE_DRIPSTONE;
	public static RegistryObject<Block> RED_DRIPSTONE;
	public static RegistryObject<Block> ANDESITE_DRIPSTONE;
	public static RegistryObject<Block> DIORITE_DRIPSTONE;
	public static RegistryObject<Block> GRANITE_DRIPSTONE;
	public static RegistryObject<Block> OAK_BEAM;
	public static RegistryObject<Block> SPRUCE_BEAM;
	public static RegistryObject<Block> BIRCH_BEAM;
	public static RegistryObject<Block> JUNGLE_BEAM;
	public static RegistryObject<Block> ACACIA_BEAM;
	public static RegistryObject<Block> DARK_OAK_BEAM;
	public static RegistryObject<Block> ORC_TORCH;
	public static RegistryObject<Block> ORC_BARS;
	public static RegistryObject<Block> DWARVEN_BARS;
	public static RegistryObject<Block> BRONZE_BARS;
	public static RegistryObject<Block> SILVER_BARS;
	public static RegistryObject<Block> GOLD_BARS;
	public static RegistryObject<Block> MITHRIL_BARS;
	public static RegistryObject<Block> HIGH_ELVEN_BARS;
	public static RegistryObject<Block> GALADHRIM_BARS;
	public static RegistryObject<Block> WOOD_ELVEN_BARS;
	public static RegistryObject<Block> HIGH_ELVEN_WOOD_BARS;
	public static RegistryObject<Block> GALADHRIM_WOOD_BARS;
	public static RegistryObject<Block> WOOD_ELVEN_WOOD_BARS;
	public static RegistryObject<Block> CRACKED_STONE_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_STONE_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_STONE_BRICK_WALL;
	public static RegistryObject<Block> CLOVER;
	public static RegistryObject<Block> FOUR_LEAF_CLOVER;
	public static RegistryObject<Block> POTTED_CLOVER;
	public static RegistryObject<Block> POTTED_FOUR_LEAF_CLOVER;
	public static RegistryObject<Block> SHORT_GRASS;
	public static RegistryObject<Block> WHEATGRASS;
	public static RegistryObject<Block> FLOWERY_GRASS;
	public static RegistryObject<Block> MAPLE_LOG;
	public static RegistryObject<Block> MAPLE_WOOD;
	public static RegistryObject<Block> MAPLE_PLANKS;
	public static RegistryObject<Block> MAPLE_LEAVES;
	public static RegistryObject<Block> MAPLE_SAPLING;
	public static RegistryObject<Block> POTTED_MAPLE_SAPLING;
	public static RegistryObject<Block> MAPLE_SLAB;
	public static RegistryObject<Block> MAPLE_STAIRS;
	public static RegistryObject<Block> MAPLE_FENCE;
	public static RegistryObject<Block> MAPLE_FENCE_GATE;
	public static RegistryObject<Block> MAPLE_DOOR;
	public static RegistryObject<Block> MAPLE_TRAPDOOR;
	public static RegistryObject<Block> MAPLE_PRESSURE_PLATE;
	public static RegistryObject<Block> MAPLE_BUTTON;
	public static RegistryObject<Block> STRIPPED_MAPLE_LOG;
	public static RegistryObject<Block> STRIPPED_MAPLE_WOOD;
	public static RegistryObject<Block> MAPLE_BEAM;
	public static RegistryObject<Block> MAPLE_SIGN;
	public static RegistryObject<Block> MAPLE_WALL_SIGN;
	public static RegistryObject<Block> THISTLE;
	public static RegistryObject<Block> NETTLES;
	public static RegistryObject<Block> FERNSPROUT;
	public static RegistryObject<Block> CANDLE;
	public static RegistryObject<Block> GOLD_CHANDELIER;
	public static RegistryObject<Block> IRON_CHANDELIER;
	public static RegistryObject<Block> BRONZE_CHANDELIER;
	public static RegistryObject<Block> SILVER_CHANDELIER;
	public static RegistryObject<Block> MITHRIL_CHANDELIER;
	public static RegistryObject<Block> ATHELAS;
	public static RegistryObject<Block> DWARFWORT;
	public static RegistryObject<Block> WILD_PIPEWEED;
	public static RegistryObject<Block> WILD_FLAX;
	public static RegistryObject<Block> POTTED_ATHELAS;
	public static RegistryObject<Block> POTTED_DWARFWORT;
	public static RegistryObject<Block> POTTED_WILD_PIPEWEED;
	public static RegistryObject<Block> POTTED_WILD_FLAX;
	public static RegistryObject<Block> POTTED_THISTLE;
	public static RegistryObject<Block> POTTED_NETTLES;
	public static RegistryObject<Block> POTTED_FERNSPROUT;
	public static RegistryObject<Block> ASPEN_LOG;
	public static RegistryObject<Block> ASPEN_WOOD;
	public static RegistryObject<Block> ASPEN_PLANKS;
	public static RegistryObject<Block> ASPEN_LEAVES;
	public static RegistryObject<Block> ASPEN_SAPLING;
	public static RegistryObject<Block> POTTED_ASPEN_SAPLING;
	public static RegistryObject<Block> ASPEN_SLAB;
	public static RegistryObject<Block> ASPEN_STAIRS;
	public static RegistryObject<Block> ASPEN_FENCE;
	public static RegistryObject<Block> ASPEN_FENCE_GATE;
	public static RegistryObject<Block> ASPEN_DOOR;
	public static RegistryObject<Block> ASPEN_TRAPDOOR;
	public static RegistryObject<Block> ASPEN_PRESSURE_PLATE;
	public static RegistryObject<Block> ASPEN_BUTTON;
	public static RegistryObject<Block> STRIPPED_ASPEN_LOG;
	public static RegistryObject<Block> STRIPPED_ASPEN_WOOD;
	public static RegistryObject<Block> ASPEN_BEAM;
	public static RegistryObject<Block> ASPEN_SIGN;
	public static RegistryObject<Block> ASPEN_WALL_SIGN;
	public static RegistryObject<Block> LAIRELOSSE_LOG;
	public static RegistryObject<Block> LAIRELOSSE_WOOD;
	public static RegistryObject<Block> LAIRELOSSE_PLANKS;
	public static RegistryObject<Block> LAIRELOSSE_LEAVES;
	public static RegistryObject<Block> LAIRELOSSE_SAPLING;
	public static RegistryObject<Block> POTTED_LAIRELOSSE_SAPLING;
	public static RegistryObject<Block> LAIRELOSSE_SLAB;
	public static RegistryObject<Block> LAIRELOSSE_STAIRS;
	public static RegistryObject<Block> LAIRELOSSE_FENCE;
	public static RegistryObject<Block> LAIRELOSSE_FENCE_GATE;
	public static RegistryObject<Block> LAIRELOSSE_DOOR;
	public static RegistryObject<Block> LAIRELOSSE_TRAPDOOR;
	public static RegistryObject<Block> LAIRELOSSE_PRESSURE_PLATE;
	public static RegistryObject<Block> LAIRELOSSE_BUTTON;
	public static RegistryObject<Block> STRIPPED_LAIRELOSSE_LOG;
	public static RegistryObject<Block> STRIPPED_LAIRELOSSE_WOOD;
	public static RegistryObject<Block> LAIRELOSSE_BEAM;
	public static RegistryObject<Block> LAIRELOSSE_SIGN;
	public static RegistryObject<Block> LAIRELOSSE_WALL_SIGN;
	public static RegistryObject<Block> CEDAR_LOG;
	public static RegistryObject<Block> CEDAR_WOOD;
	public static RegistryObject<Block> CEDAR_PLANKS;
	public static RegistryObject<Block> CEDAR_LEAVES;
	public static RegistryObject<Block> CEDAR_SAPLING;
	public static RegistryObject<Block> POTTED_CEDAR_SAPLING;
	public static RegistryObject<Block> CEDAR_SLAB;
	public static RegistryObject<Block> CEDAR_STAIRS;
	public static RegistryObject<Block> CEDAR_FENCE;
	public static RegistryObject<Block> CEDAR_FENCE_GATE;
	public static RegistryObject<Block> CEDAR_DOOR;
	public static RegistryObject<Block> CEDAR_TRAPDOOR;
	public static RegistryObject<Block> CEDAR_PRESSURE_PLATE;
	public static RegistryObject<Block> CEDAR_BUTTON;
	public static RegistryObject<Block> STRIPPED_CEDAR_LOG;
	public static RegistryObject<Block> STRIPPED_CEDAR_WOOD;
	public static RegistryObject<Block> CEDAR_BEAM;
	public static RegistryObject<Block> CEDAR_SIGN;
	public static RegistryObject<Block> CEDAR_WALL_SIGN;
	public static RegistryObject<Block> PIPEWEED_CROP;
	public static RegistryObject<Block> FLAX_CROP;
	public static RegistryObject<Block> LETTUCE;
	public static RegistryObject<Block> BLUE_MALLORN_TORCH;
	public static RegistryObject<Block> BLUE_MALLORN_WALL_TORCH;
	public static RegistryObject<Block> GREEN_MALLORN_TORCH;
	public static RegistryObject<Block> GREEN_MALLORN_WALL_TORCH;
	public static RegistryObject<Block> GOLD_MALLORN_TORCH;
	public static RegistryObject<Block> GOLD_MALLORN_WALL_TORCH;
	public static RegistryObject<Block> SILVER_MALLORN_TORCH;
	public static RegistryObject<Block> SILVER_MALLORN_WALL_TORCH;
	public static RegistryObject<Block> SANDSTONE_DRIPSTONE;
	public static RegistryObject<Block> RED_SANDSTONE_DRIPSTONE;
	public static RegistryObject<Block> EDHELVIR_ORE;
	public static RegistryObject<Block> EDHELVIR_BLOCK;
	public static RegistryObject<Block> HIGH_ELVEN_TORCH;
	public static RegistryObject<Block> HIGH_ELVEN_WALL_TORCH;
	public static RegistryObject<Block> STONE_WALL;
	public static RegistryObject<Block> RED_SAND_GEM;
	public static RegistryObject<Block> YELLOW_SAND_GEM;
	public static RegistryObject<Block> HARAD_DAISY;
	public static RegistryObject<Block> SOUTHBELL;
	public static RegistryObject<Block> POTTED_RED_SAND_GEM;
	public static RegistryObject<Block> POTTED_YELLOW_SAND_GEM;
	public static RegistryObject<Block> POTTED_HARAD_DAISY;
	public static RegistryObject<Block> POTTED_SOUTHBELL;
	public static RegistryObject<Block> HIBISCUS;
	public static RegistryObject<Block> FLAME_OF_HARAD;
	public static RegistryObject<Block> GULDURIL_ORE_MORDOR;
	public static RegistryObject<Block> GULDURIL_ORE_STONE;
	public static RegistryObject<Block> GULDURIL_BLOCK;
	public static RegistryObject<Block> EDHELVIR_CRYSTAL;
	public static RegistryObject<Block> GULDURIL_CRYSTAL;
	public static RegistryObject<Block> GLOWSTONE_CRYSTAL;
	public static RegistryObject<Block> NUMENOREAN_BRICK;
	public static RegistryObject<Block> NUMENOREAN_BRICK_SLAB;
	public static RegistryObject<Block> NUMENOREAN_BRICK_STAIRS;
	public static RegistryObject<Block> NUMENOREAN_BRICK_WALL;
	public static RegistryObject<Block> NUMENOREAN_PILLAR;
	public static RegistryObject<Block> NUMENOREAN_PILLAR_SLAB;
	public static RegistryObject<Block> ALLOY_FORGE;
	public static RegistryObject<Block> DWARVEN_FORGE;
	public static RegistryObject<Block> ELVEN_FORGE;
	public static RegistryObject<Block> ORC_FORGE;
	public static RegistryObject<Block> URUK_BRICK;
	public static RegistryObject<Block> URUK_BRICK_SLAB;
	public static RegistryObject<Block> URUK_BRICK_STAIRS;
	public static RegistryObject<Block> URUK_BRICK_WALL;
	public static RegistryObject<Block> URUK_PILLAR;
	public static RegistryObject<Block> URUK_PILLAR_SLAB;
	public static RegistryObject<Block> URUK_CRAFTING_TABLE;
	public static RegistryObject<Block> URUK_STEEL_BLOCK;
	public static RegistryObject<Block> URUK_BARS;
	public static RegistryObject<Block> HOBBIT_CRAFTING_TABLE;
	public static RegistryObject<Block> BRICK_PILLAR;
	public static RegistryObject<Block> BRICK_PILLAR_SLAB;
	public static RegistryObject<Block> SHIRE_PINE_DOOR;
	public static RegistryObject<Block> SHIRE_PINE_TRAPDOOR;
	public static RegistryObject<Block> FIR_LOG;
	public static RegistryObject<Block> FIR_WOOD;
	public static RegistryObject<Block> FIR_PLANKS;
	public static RegistryObject<Block> FIR_LEAVES;
	public static RegistryObject<Block> FIR_SAPLING;
	public static RegistryObject<Block> POTTED_FIR_SAPLING;
	public static RegistryObject<Block> FIR_SLAB;
	public static RegistryObject<Block> FIR_STAIRS;
	public static RegistryObject<Block> FIR_FENCE;
	public static RegistryObject<Block> FIR_FENCE_GATE;
	public static RegistryObject<Block> FIR_DOOR;
	public static RegistryObject<Block> FIR_TRAPDOOR;
	public static RegistryObject<Block> FIR_PRESSURE_PLATE;
	public static RegistryObject<Block> FIR_BUTTON;
	public static RegistryObject<Block> STRIPPED_FIR_LOG;
	public static RegistryObject<Block> STRIPPED_FIR_WOOD;
	public static RegistryObject<Block> FIR_BEAM;
	public static RegistryObject<Block> FIR_SIGN;
	public static RegistryObject<Block> FIR_WALL_SIGN;
	public static RegistryObject<Block> LARCH_LOG;
	public static RegistryObject<Block> LARCH_WOOD;
	public static RegistryObject<Block> LARCH_PLANKS;
	public static RegistryObject<Block> LARCH_LEAVES;
	public static RegistryObject<Block> LARCH_SAPLING;
	public static RegistryObject<Block> POTTED_LARCH_SAPLING;
	public static RegistryObject<Block> LARCH_SLAB;
	public static RegistryObject<Block> LARCH_STAIRS;
	public static RegistryObject<Block> LARCH_FENCE;
	public static RegistryObject<Block> LARCH_FENCE_GATE;
	public static RegistryObject<Block> LARCH_DOOR;
	public static RegistryObject<Block> LARCH_TRAPDOOR;
	public static RegistryObject<Block> LARCH_PRESSURE_PLATE;
	public static RegistryObject<Block> LARCH_BUTTON;
	public static RegistryObject<Block> STRIPPED_LARCH_LOG;
	public static RegistryObject<Block> STRIPPED_LARCH_WOOD;
	public static RegistryObject<Block> LARCH_BEAM;
	public static RegistryObject<Block> LARCH_SIGN;
	public static RegistryObject<Block> LARCH_WALL_SIGN;
	public static RegistryObject<Block> HOBBIT_OVEN;
	public static RegistryObject<Block> FINE_PLATE;
	public static RegistryObject<Block> STONEWARE_PLATE;
	public static RegistryObject<Block> WOODEN_PLATE;
	public static RegistryObject<Block> MOSSY_GONDOR_BRICK;
	public static RegistryObject<Block> MOSSY_GONDOR_BRICK_SLAB;
	public static RegistryObject<Block> MOSSY_GONDOR_BRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_GONDOR_BRICK_WALL;
	public static RegistryObject<Block> CRACKED_GONDOR_BRICK;
	public static RegistryObject<Block> CRACKED_GONDOR_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_GONDOR_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_GONDOR_BRICK_WALL;
	public static RegistryObject<Block> CARVED_GONDOR_BRICK;
	public static RegistryObject<Block> MOSSY_HIGH_ELVEN_BRICK;
	public static RegistryObject<Block> MOSSY_HIGH_ELVEN_BRICK_SLAB;
	public static RegistryObject<Block> MOSSY_HIGH_ELVEN_BRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_HIGH_ELVEN_BRICK_WALL;
	public static RegistryObject<Block> CRACKED_HIGH_ELVEN_BRICK;
	public static RegistryObject<Block> CRACKED_HIGH_ELVEN_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_HIGH_ELVEN_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_HIGH_ELVEN_BRICK_WALL;
	public static RegistryObject<Block> CARVED_HIGH_ELVEN_BRICK;
	public static RegistryObject<Block> THATCH;
	public static RegistryObject<Block> THATCH_SLAB;
	public static RegistryObject<Block> THATCH_STAIRS;
	public static RegistryObject<Block> DRYSTONE;
	public static RegistryObject<Block> WATTLE_AND_DAUB;
	public static RegistryObject<Block> WATTLE_AND_DAUB_PILLAR;
	public static RegistryObject<Block> MOSSY_MORDOR_BRICK;
	public static RegistryObject<Block> MOSSY_MORDOR_BRICK_SLAB;
	public static RegistryObject<Block> MOSSY_MORDOR_BRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_MORDOR_BRICK_WALL;
	public static RegistryObject<Block> CRACKED_MORDOR_BRICK;
	public static RegistryObject<Block> CRACKED_MORDOR_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_MORDOR_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_MORDOR_BRICK_WALL;
	public static RegistryObject<Block> CARVED_MORDOR_BRICK;
	public static RegistryObject<Block> MOSSY_ROHAN_BRICK;
	public static RegistryObject<Block> MOSSY_ROHAN_BRICK_SLAB;
	public static RegistryObject<Block> MOSSY_ROHAN_BRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_ROHAN_BRICK_WALL;
	public static RegistryObject<Block> CRACKED_ROHAN_BRICK;
	public static RegistryObject<Block> CRACKED_ROHAN_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_ROHAN_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_ROHAN_BRICK_WALL;
	public static RegistryObject<Block> CARVED_ROHAN_BRICK;
	public static RegistryObject<Block> GOLD_TRIMMED_DWARVEN_BRICK;
	public static RegistryObject<Block> SILVER_TRIMMED_DWARVEN_BRICK;
	public static RegistryObject<Block> MITHRIL_TRIMMED_DWARVEN_BRICK;
	public static RegistryObject<Block> MOSSY_NUMENOREAN_BRICK;
	public static RegistryObject<Block> MOSSY_NUMENOREAN_BRICK_SLAB;
	public static RegistryObject<Block> MOSSY_NUMENOREAN_BRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_NUMENOREAN_BRICK_WALL;
	public static RegistryObject<Block> CRACKED_NUMENOREAN_BRICK;
	public static RegistryObject<Block> CRACKED_NUMENOREAN_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_NUMENOREAN_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_NUMENOREAN_BRICK_WALL;
	public static RegistryObject<Block> KEG;
	public static RegistryObject<Block> MORGUL_SHROOM;
	public static RegistryObject<Block> POTTED_MORGUL_SHROOM;
	public static RegistryObject<Block> MOSSY_BLUE_BRICK;
	public static RegistryObject<Block> MOSSY_BLUE_BRICK_SLAB;
	public static RegistryObject<Block> MOSSY_BLUE_BRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_BLUE_BRICK_WALL;
	public static RegistryObject<Block> CRACKED_BLUE_BRICK;
	public static RegistryObject<Block> CRACKED_BLUE_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_BLUE_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_BLUE_BRICK_WALL;
	public static RegistryObject<Block> CARVED_BLUE_BRICK;
	public static RegistryObject<Block> MOSSY_RED_BRICK;
	public static RegistryObject<Block> MOSSY_RED_BRICK_SLAB;
	public static RegistryObject<Block> MOSSY_RED_BRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_RED_BRICK_WALL;
	public static RegistryObject<Block> CRACKED_RED_BRICK;
	public static RegistryObject<Block> CRACKED_RED_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_RED_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_RED_BRICK_WALL;
	public static RegistryObject<Block> CARVED_RED_BRICK;
	public static RegistryObject<Block> SMOOTH_BLUE_ROCK;
	public static RegistryObject<Block> SMOOTH_BLUE_ROCK_SLAB;
	public static RegistryObject<Block> SMOOTH_RED_ROCK;
	public static RegistryObject<Block> SMOOTH_RED_ROCK_SLAB;
	public static RegistryObject<Block> SMOOTH_MORDOR_ROCK;
	public static RegistryObject<Block> SMOOTH_MORDOR_ROCK_SLAB;
	public static RegistryObject<Block> SMOOTH_GONDOR_ROCK;
	public static RegistryObject<Block> SMOOTH_GONDOR_ROCK_SLAB;
	public static RegistryObject<Block> SMOOTH_ROHAN_ROCK;
	public static RegistryObject<Block> SMOOTH_ROHAN_ROCK_SLAB;
	public static RegistryObject<Block> BLUE_MOUNTAINS_CRAFTING_TABLE;
	public static RegistryObject<Block> BLUE_DWARVEN_BARS;
	public static RegistryObject<Block> GOLD_TREASURE_PILE;
	public static RegistryObject<Block> SILVER_TREASURE_PILE;
	public static RegistryObject<Block> COPPER_TREASURE_PILE;
	public static RegistryObject<Block> HOLLY_LOG;
	public static RegistryObject<Block> HOLLY_WOOD;
	public static RegistryObject<Block> HOLLY_PLANKS;
	public static RegistryObject<Block> HOLLY_LEAVES;
	public static RegistryObject<Block> HOLLY_SAPLING;
	public static RegistryObject<Block> POTTED_HOLLY_SAPLING;
	public static RegistryObject<Block> HOLLY_SLAB;
	public static RegistryObject<Block> HOLLY_STAIRS;
	public static RegistryObject<Block> HOLLY_FENCE;
	public static RegistryObject<Block> HOLLY_FENCE_GATE;
	public static RegistryObject<Block> HOLLY_DOOR;
	public static RegistryObject<Block> HOLLY_TRAPDOOR;
	public static RegistryObject<Block> HOLLY_PRESSURE_PLATE;
	public static RegistryObject<Block> HOLLY_BUTTON;
	public static RegistryObject<Block> STRIPPED_HOLLY_LOG;
	public static RegistryObject<Block> STRIPPED_HOLLY_WOOD;
	public static RegistryObject<Block> HOLLY_BEAM;
	public static RegistryObject<Block> HOLLY_SIGN;
	public static RegistryObject<Block> HOLLY_WALL_SIGN;
	public static RegistryObject<Block> MIRK_SHROOM;
	public static RegistryObject<Block> POTTED_MIRK_SHROOM;
	public static RegistryObject<Block> GREEN_OAK_LOG;
	public static RegistryObject<Block> GREEN_OAK_WOOD;
	public static RegistryObject<Block> GREEN_OAK_PLANKS;
	public static RegistryObject<Block> GREEN_OAK_LEAVES;
	public static RegistryObject<Block> GREEN_OAK_SAPLING;
	public static RegistryObject<Block> POTTED_GREEN_OAK_SAPLING;
	public static RegistryObject<Block> GREEN_OAK_SLAB;
	public static RegistryObject<Block> GREEN_OAK_STAIRS;
	public static RegistryObject<Block> GREEN_OAK_FENCE;
	public static RegistryObject<Block> GREEN_OAK_FENCE_GATE;
	public static RegistryObject<Block> GREEN_OAK_DOOR;
	public static RegistryObject<Block> GREEN_OAK_TRAPDOOR;
	public static RegistryObject<Block> GREEN_OAK_PRESSURE_PLATE;
	public static RegistryObject<Block> GREEN_OAK_BUTTON;
	public static RegistryObject<Block> STRIPPED_GREEN_OAK_LOG;
	public static RegistryObject<Block> STRIPPED_GREEN_OAK_WOOD;
	public static RegistryObject<Block> GREEN_OAK_BEAM;
	public static RegistryObject<Block> GREEN_OAK_SIGN;
	public static RegistryObject<Block> GREEN_OAK_WALL_SIGN;
	public static RegistryObject<Block> RED_OAK_LEAVES;
	public static RegistryObject<Block> RED_OAK_SAPLING;
	public static RegistryObject<Block> POTTED_RED_OAK_SAPLING;
	public static RegistryObject<Block> MOSSY_GALADHRIM_BRICK;
	public static RegistryObject<Block> MOSSY_GALADHRIM_BRICK_SLAB;
	public static RegistryObject<Block> MOSSY_GALADHRIM_BRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_GALADHRIM_BRICK_WALL;
	public static RegistryObject<Block> CRACKED_GALADHRIM_BRICK;
	public static RegistryObject<Block> CRACKED_GALADHRIM_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_GALADHRIM_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_GALADHRIM_BRICK_WALL;
	public static RegistryObject<Block> CARVED_GALADHRIM_BRICK;
	public static RegistryObject<Block> HANGING_WEB;
	public static RegistryObject<Block> ARID_GRASS;
	public static RegistryObject<Block> WHITE_CHRYSANTHEMUM;
	public static RegistryObject<Block> YELLOW_CHRYSANTHEMUM;
	public static RegistryObject<Block> PINK_CHRYSANTHEMUM;
	public static RegistryObject<Block> RED_CHRYSANTHEMUM;
	public static RegistryObject<Block> ORANGE_CHRYSANTHEMUM;
	public static RegistryObject<Block> POTTED_WHITE_CHRYSANTHEMUM;
	public static RegistryObject<Block> POTTED_YELLOW_CHRYSANTHEMUM;
	public static RegistryObject<Block> POTTED_PINK_CHRYSANTHEMUM;
	public static RegistryObject<Block> POTTED_RED_CHRYSANTHEMUM;
	public static RegistryObject<Block> POTTED_ORANGE_CHRYSANTHEMUM;
	public static RegistryObject<Block> BRONZE_LANTERN;
	public static RegistryObject<Block> MOSSY_DWARVEN_BRICK;
	public static RegistryObject<Block> MOSSY_DWARVEN_BRICK_SLAB;
	public static RegistryObject<Block> MOSSY_DWARVEN_BRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_DWARVEN_BRICK_WALL;
	public static RegistryObject<Block> CRACKED_DWARVEN_BRICK;
	public static RegistryObject<Block> CRACKED_DWARVEN_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_DWARVEN_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_DWARVEN_BRICK_WALL;
	public static RegistryObject<Block> SNOWY_DWARVEN_BRICK;
	public static RegistryObject<Block> SNOWY_DWARVEN_BRICK_SLAB;
	public static RegistryObject<Block> SNOWY_DWARVEN_BRICK_STAIRS;
	public static RegistryObject<Block> SNOWY_DWARVEN_BRICK_WALL;
	public static RegistryObject<Block> CARVED_DWARVEN_BRICK;
	public static RegistryObject<Block> MOSSY_WOOD_ELVEN_BRICK;
	public static RegistryObject<Block> MOSSY_WOOD_ELVEN_BRICK_SLAB;
	public static RegistryObject<Block> MOSSY_WOOD_ELVEN_BRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_WOOD_ELVEN_BRICK_WALL;
	public static RegistryObject<Block> CRACKED_WOOD_ELVEN_BRICK;
	public static RegistryObject<Block> CRACKED_WOOD_ELVEN_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_WOOD_ELVEN_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_WOOD_ELVEN_BRICK_WALL;
	public static RegistryObject<Block> CARVED_WOOD_ELVEN_BRICK;
	public static RegistryObject<Block> ARNOR_BRICK;
	public static RegistryObject<Block> ARNOR_BRICK_SLAB;
	public static RegistryObject<Block> ARNOR_BRICK_STAIRS;
	public static RegistryObject<Block> ARNOR_BRICK_WALL;
	public static RegistryObject<Block> MOSSY_ARNOR_BRICK;
	public static RegistryObject<Block> MOSSY_ARNOR_BRICK_SLAB;
	public static RegistryObject<Block> MOSSY_ARNOR_BRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_ARNOR_BRICK_WALL;
	public static RegistryObject<Block> CRACKED_ARNOR_BRICK;
	public static RegistryObject<Block> CRACKED_ARNOR_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_ARNOR_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_ARNOR_BRICK_WALL;
	public static RegistryObject<Block> CARVED_ARNOR_BRICK;
	public static RegistryObject<Block> ARNOR_PILLAR;
	public static RegistryObject<Block> ARNOR_PILLAR_SLAB;
	public static RegistryObject<Block> RANGER_CRAFTING_TABLE;
	public static RegistryObject<Block> GONDOR_COBBLEBRICK;
	public static RegistryObject<Block> GONDOR_COBBLEBRICK_SLAB;
	public static RegistryObject<Block> GONDOR_COBBLEBRICK_STAIRS;
	public static RegistryObject<Block> GONDOR_COBBLEBRICK_WALL;
	public static RegistryObject<Block> MOSSY_GONDOR_COBBLEBRICK;
	public static RegistryObject<Block> MOSSY_GONDOR_COBBLEBRICK_SLAB;
	public static RegistryObject<Block> MOSSY_GONDOR_COBBLEBRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_GONDOR_COBBLEBRICK_WALL;
	public static RegistryObject<Block> CRACKED_GONDOR_COBBLEBRICK;
	public static RegistryObject<Block> CRACKED_GONDOR_COBBLEBRICK_SLAB;
	public static RegistryObject<Block> CRACKED_GONDOR_COBBLEBRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_GONDOR_COBBLEBRICK_WALL;
	public static RegistryObject<Block> DOL_AMROTH_BRICK;
	public static RegistryObject<Block> DOL_AMROTH_BRICK_SLAB;
	public static RegistryObject<Block> DOL_AMROTH_BRICK_STAIRS;
	public static RegistryObject<Block> DOL_AMROTH_BRICK_WALL;
	public static RegistryObject<Block> MOSSY_DOL_AMROTH_BRICK;
	public static RegistryObject<Block> MOSSY_DOL_AMROTH_BRICK_SLAB;
	public static RegistryObject<Block> MOSSY_DOL_AMROTH_BRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_DOL_AMROTH_BRICK_WALL;
	public static RegistryObject<Block> CRACKED_DOL_AMROTH_BRICK;
	public static RegistryObject<Block> CRACKED_DOL_AMROTH_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_DOL_AMROTH_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_DOL_AMROTH_BRICK_WALL;
	public static RegistryObject<Block> DOL_AMROTH_CRAFTING_TABLE;
	public static RegistryObject<Block> CLAY_TILING;
	public static RegistryObject<Block> WHITE_CLAY_TILING;
	public static RegistryObject<Block> ORANGE_CLAY_TILING;
	public static RegistryObject<Block> MAGENTA_CLAY_TILING;
	public static RegistryObject<Block> LIGHT_BLUE_CLAY_TILING;
	public static RegistryObject<Block> YELLOW_CLAY_TILING;
	public static RegistryObject<Block> LIME_CLAY_TILING;
	public static RegistryObject<Block> PINK_CLAY_TILING;
	public static RegistryObject<Block> GRAY_CLAY_TILING;
	public static RegistryObject<Block> LIGHT_GRAY_CLAY_TILING;
	public static RegistryObject<Block> CYAN_CLAY_TILING;
	public static RegistryObject<Block> PURPLE_CLAY_TILING;
	public static RegistryObject<Block> BLUE_CLAY_TILING;
	public static RegistryObject<Block> BROWN_CLAY_TILING;
	public static RegistryObject<Block> GREEN_CLAY_TILING;
	public static RegistryObject<Block> RED_CLAY_TILING;
	public static RegistryObject<Block> BLACK_CLAY_TILING;
	public static RegistryObject<Block> CLAY_TILING_SLAB;
	public static RegistryObject<Block> WHITE_CLAY_TILING_SLAB;
	public static RegistryObject<Block> ORANGE_CLAY_TILING_SLAB;
	public static RegistryObject<Block> MAGENTA_CLAY_TILING_SLAB;
	public static RegistryObject<Block> LIGHT_BLUE_CLAY_TILING_SLAB;
	public static RegistryObject<Block> YELLOW_CLAY_TILING_SLAB;
	public static RegistryObject<Block> LIME_CLAY_TILING_SLAB;
	public static RegistryObject<Block> PINK_CLAY_TILING_SLAB;
	public static RegistryObject<Block> GRAY_CLAY_TILING_SLAB;
	public static RegistryObject<Block> LIGHT_GRAY_CLAY_TILING_SLAB;
	public static RegistryObject<Block> CYAN_CLAY_TILING_SLAB;
	public static RegistryObject<Block> PURPLE_CLAY_TILING_SLAB;
	public static RegistryObject<Block> BLUE_CLAY_TILING_SLAB;
	public static RegistryObject<Block> BROWN_CLAY_TILING_SLAB;
	public static RegistryObject<Block> GREEN_CLAY_TILING_SLAB;
	public static RegistryObject<Block> RED_CLAY_TILING_SLAB;
	public static RegistryObject<Block> BLACK_CLAY_TILING_SLAB;
	public static RegistryObject<Block> CLAY_TILING_STAIRS;
	public static RegistryObject<Block> WHITE_CLAY_TILING_STAIRS;
	public static RegistryObject<Block> ORANGE_CLAY_TILING_STAIRS;
	public static RegistryObject<Block> MAGENTA_CLAY_TILING_STAIRS;
	public static RegistryObject<Block> LIGHT_BLUE_CLAY_TILING_STAIRS;
	public static RegistryObject<Block> YELLOW_CLAY_TILING_STAIRS;
	public static RegistryObject<Block> LIME_CLAY_TILING_STAIRS;
	public static RegistryObject<Block> PINK_CLAY_TILING_STAIRS;
	public static RegistryObject<Block> GRAY_CLAY_TILING_STAIRS;
	public static RegistryObject<Block> LIGHT_GRAY_CLAY_TILING_STAIRS;
	public static RegistryObject<Block> CYAN_CLAY_TILING_STAIRS;
	public static RegistryObject<Block> PURPLE_CLAY_TILING_STAIRS;
	public static RegistryObject<Block> BLUE_CLAY_TILING_STAIRS;
	public static RegistryObject<Block> BROWN_CLAY_TILING_STAIRS;
	public static RegistryObject<Block> GREEN_CLAY_TILING_STAIRS;
	public static RegistryObject<Block> RED_CLAY_TILING_STAIRS;
	public static RegistryObject<Block> BLACK_CLAY_TILING_STAIRS;
	public static RegistryObject<Block> CLAY_TILING_WALL;
	public static RegistryObject<Block> WHITE_CLAY_TILING_WALL;
	public static RegistryObject<Block> ORANGE_CLAY_TILING_WALL;
	public static RegistryObject<Block> MAGENTA_CLAY_TILING_WALL;
	public static RegistryObject<Block> LIGHT_BLUE_CLAY_TILING_WALL;
	public static RegistryObject<Block> YELLOW_CLAY_TILING_WALL;
	public static RegistryObject<Block> LIME_CLAY_TILING_WALL;
	public static RegistryObject<Block> PINK_CLAY_TILING_WALL;
	public static RegistryObject<Block> GRAY_CLAY_TILING_WALL;
	public static RegistryObject<Block> LIGHT_GRAY_CLAY_TILING_WALL;
	public static RegistryObject<Block> CYAN_CLAY_TILING_WALL;
	public static RegistryObject<Block> PURPLE_CLAY_TILING_WALL;
	public static RegistryObject<Block> BLUE_CLAY_TILING_WALL;
	public static RegistryObject<Block> BROWN_CLAY_TILING_WALL;
	public static RegistryObject<Block> GREEN_CLAY_TILING_WALL;
	public static RegistryObject<Block> RED_CLAY_TILING_WALL;
	public static RegistryObject<Block> BLACK_CLAY_TILING_WALL;
	public static RegistryObject<Block> FINE_GLASS;
	public static RegistryObject<Block> WHITE_FINE_GLASS;
	public static RegistryObject<Block> ORANGE_FINE_GLASS;
	public static RegistryObject<Block> MAGENTA_FINE_GLASS;
	public static RegistryObject<Block> LIGHT_BLUE_FINE_GLASS;
	public static RegistryObject<Block> YELLOW_FINE_GLASS;
	public static RegistryObject<Block> LIME_FINE_GLASS;
	public static RegistryObject<Block> PINK_FINE_GLASS;
	public static RegistryObject<Block> GRAY_FINE_GLASS;
	public static RegistryObject<Block> LIGHT_GRAY_FINE_GLASS;
	public static RegistryObject<Block> CYAN_FINE_GLASS;
	public static RegistryObject<Block> PURPLE_FINE_GLASS;
	public static RegistryObject<Block> BLUE_FINE_GLASS;
	public static RegistryObject<Block> BROWN_FINE_GLASS;
	public static RegistryObject<Block> GREEN_FINE_GLASS;
	public static RegistryObject<Block> RED_FINE_GLASS;
	public static RegistryObject<Block> BLACK_FINE_GLASS;
	public static RegistryObject<Block> FINE_GLASS_PANE;
	public static RegistryObject<Block> WHITE_FINE_GLASS_PANE;
	public static RegistryObject<Block> ORANGE_FINE_GLASS_PANE;
	public static RegistryObject<Block> MAGENTA_FINE_GLASS_PANE;
	public static RegistryObject<Block> LIGHT_BLUE_FINE_GLASS_PANE;
	public static RegistryObject<Block> YELLOW_FINE_GLASS_PANE;
	public static RegistryObject<Block> LIME_FINE_GLASS_PANE;
	public static RegistryObject<Block> PINK_FINE_GLASS_PANE;
	public static RegistryObject<Block> GRAY_FINE_GLASS_PANE;
	public static RegistryObject<Block> LIGHT_GRAY_FINE_GLASS_PANE;
	public static RegistryObject<Block> CYAN_FINE_GLASS_PANE;
	public static RegistryObject<Block> PURPLE_FINE_GLASS_PANE;
	public static RegistryObject<Block> BLUE_FINE_GLASS_PANE;
	public static RegistryObject<Block> BROWN_FINE_GLASS_PANE;
	public static RegistryObject<Block> GREEN_FINE_GLASS_PANE;
	public static RegistryObject<Block> RED_FINE_GLASS_PANE;
	public static RegistryObject<Block> BLACK_FINE_GLASS_PANE;
	public static RegistryObject<Block> ORC_PLATING;
	public static RegistryObject<Block> RUSTED_ORC_PLATING;
	public static RegistryObject<Block> CARVED_NUMENOREAN_BRICK;
	public static RegistryObject<Block> MOSSY_UMBAR_BRICK;
	public static RegistryObject<Block> MOSSY_UMBAR_BRICK_SLAB;
	public static RegistryObject<Block> MOSSY_UMBAR_BRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_UMBAR_BRICK_WALL;
	public static RegistryObject<Block> CRACKED_UMBAR_BRICK;
	public static RegistryObject<Block> CRACKED_UMBAR_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_UMBAR_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_UMBAR_BRICK_WALL;
	public static RegistryObject<Block> CARVED_BRICK;
	public static RegistryObject<Block> ORC_PLATING_SLAB;
	public static RegistryObject<Block> ORC_PLATING_STAIRS;
	public static RegistryObject<Block> RUSTED_ORC_PLATING_SLAB;
	public static RegistryObject<Block> RUSTED_ORC_PLATING_STAIRS;
	public static RegistryObject<Block> WHITE_WOOL_SLAB;
	public static RegistryObject<Block> ORANGE_WOOL_SLAB;
	public static RegistryObject<Block> MAGENTA_WOOL_SLAB;
	public static RegistryObject<Block> LIGHT_BLUE_WOOL_SLAB;
	public static RegistryObject<Block> YELLOW_WOOL_SLAB;
	public static RegistryObject<Block> LIME_WOOL_SLAB;
	public static RegistryObject<Block> PINK_WOOL_SLAB;
	public static RegistryObject<Block> GRAY_WOOL_SLAB;
	public static RegistryObject<Block> LIGHT_GRAY_WOOL_SLAB;
	public static RegistryObject<Block> CYAN_WOOL_SLAB;
	public static RegistryObject<Block> PURPLE_WOOL_SLAB;
	public static RegistryObject<Block> BLUE_WOOL_SLAB;
	public static RegistryObject<Block> BROWN_WOOL_SLAB;
	public static RegistryObject<Block> GREEN_WOOL_SLAB;
	public static RegistryObject<Block> RED_WOOL_SLAB;
	public static RegistryObject<Block> BLACK_WOOL_SLAB;
	public static RegistryObject<Block> WHITE_WOOL_STAIRS;
	public static RegistryObject<Block> ORANGE_WOOL_STAIRS;
	public static RegistryObject<Block> MAGENTA_WOOL_STAIRS;
	public static RegistryObject<Block> LIGHT_BLUE_WOOL_STAIRS;
	public static RegistryObject<Block> YELLOW_WOOL_STAIRS;
	public static RegistryObject<Block> LIME_WOOL_STAIRS;
	public static RegistryObject<Block> PINK_WOOL_STAIRS;
	public static RegistryObject<Block> GRAY_WOOL_STAIRS;
	public static RegistryObject<Block> LIGHT_GRAY_WOOL_STAIRS;
	public static RegistryObject<Block> CYAN_WOOL_STAIRS;
	public static RegistryObject<Block> PURPLE_WOOL_STAIRS;
	public static RegistryObject<Block> BLUE_WOOL_STAIRS;
	public static RegistryObject<Block> BROWN_WOOL_STAIRS;
	public static RegistryObject<Block> GREEN_WOOL_STAIRS;
	public static RegistryObject<Block> RED_WOOL_STAIRS;
	public static RegistryObject<Block> BLACK_WOOL_STAIRS;
	public static RegistryObject<Block> ANGMAR_BRICK;
	public static RegistryObject<Block> ANGMAR_BRICK_SLAB;
	public static RegistryObject<Block> ANGMAR_BRICK_STAIRS;
	public static RegistryObject<Block> ANGMAR_BRICK_WALL;
	public static RegistryObject<Block> ANGMAR_CRAFTING_TABLE;
	public static RegistryObject<Block> MOSSY_ANGMAR_BRICK;
	public static RegistryObject<Block> MOSSY_ANGMAR_BRICK_SLAB;
	public static RegistryObject<Block> MOSSY_ANGMAR_BRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_ANGMAR_BRICK_WALL;
	public static RegistryObject<Block> CRACKED_ANGMAR_BRICK;
	public static RegistryObject<Block> CRACKED_ANGMAR_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_ANGMAR_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_ANGMAR_BRICK_WALL;
	public static RegistryObject<Block> SNOWY_ANGMAR_BRICK;
	public static RegistryObject<Block> SNOWY_ANGMAR_BRICK_SLAB;
	public static RegistryObject<Block> SNOWY_ANGMAR_BRICK_STAIRS;
	public static RegistryObject<Block> SNOWY_ANGMAR_BRICK_WALL;
	public static RegistryObject<Block> PURPLE_MOOR_GRASS;
	public static RegistryObject<Block> RED_MOOR_GRASS;
	public static RegistryObject<Block> TALL_WHEATGRASS;
	public static RegistryObject<Block> TALL_ARID_GRASS;
	public static RegistryObject<Block> CARVED_ANGMAR_BRICK;
	public static RegistryObject<Block> ANGMAR_PILLAR;
	public static RegistryObject<Block> ANGMAR_PILLAR_SLAB;
	public static RegistryObject<Block> CHALK;
	public static RegistryObject<Block> CHALK_SLAB;
	public static RegistryObject<Block> CHALK_STAIRS;
	public static RegistryObject<Block> CHALK_WALL;
	public static RegistryObject<Block> CHALK_BRICK;
	public static RegistryObject<Block> CHALK_BRICK_SLAB;
	public static RegistryObject<Block> CHALK_BRICK_STAIRS;
	public static RegistryObject<Block> CHALK_BRICK_WALL;
	public static RegistryObject<Block> CHALK_PILLAR;
	public static RegistryObject<Block> CHALK_PILLAR_SLAB;
	public static RegistryObject<Block> CHALK_DRIPSTONE;
	public static RegistryObject<Block> GONDOR_ROCK_PRESSURE_PLATE;
	public static RegistryObject<Block> MORDOR_ROCK_PRESSURE_PLATE;
	public static RegistryObject<Block> ROHAN_ROCK_PRESSURE_PLATE;
	public static RegistryObject<Block> BLUE_ROCK_PRESSURE_PLATE;
	public static RegistryObject<Block> RED_ROCK_PRESSURE_PLATE;
	public static RegistryObject<Block> CHALK_PRESSURE_PLATE;
	public static RegistryObject<Block> GONDOR_ROCK_BUTTON;
	public static RegistryObject<Block> MORDOR_ROCK_BUTTON;
	public static RegistryObject<Block> ROHAN_ROCK_BUTTON;
	public static RegistryObject<Block> BLUE_ROCK_BUTTON;
	public static RegistryObject<Block> RED_ROCK_BUTTON;
	public static RegistryObject<Block> CHALK_BUTTON;
	public static RegistryObject<Block> POLISHED_CHALK;
	public static RegistryObject<Block> POLISHED_CHALK_SLAB;
	public static RegistryObject<Block> POLISHED_CHALK_STAIRS;
	public static RegistryObject<Block> POLISHED_CHALK_WALL;
	public static RegistryObject<Block> DIRTY_CHALK;
	public static RegistryObject<Block> DORWINION_BRICK;
	public static RegistryObject<Block> DORWINION_BRICK_SLAB;
	public static RegistryObject<Block> DORWINION_BRICK_STAIRS;
	public static RegistryObject<Block> DORWINION_BRICK_WALL;
	public static RegistryObject<Block> DORWINION_CRAFTING_TABLE;
	public static RegistryObject<Block> MOSSY_DORWINION_BRICK;
	public static RegistryObject<Block> MOSSY_DORWINION_BRICK_SLAB;
	public static RegistryObject<Block> MOSSY_DORWINION_BRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_DORWINION_BRICK_WALL;
	public static RegistryObject<Block> CRACKED_DORWINION_BRICK;
	public static RegistryObject<Block> CRACKED_DORWINION_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_DORWINION_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_DORWINION_BRICK_WALL;
	public static RegistryObject<Block> RED_DORWINION_BRICK;
	public static RegistryObject<Block> RED_DORWINION_BRICK_SLAB;
	public static RegistryObject<Block> RED_DORWINION_BRICK_STAIRS;
	public static RegistryObject<Block> RED_DORWINION_BRICK_WALL;
	public static RegistryObject<Block> MOSSY_RED_DORWINION_BRICK;
	public static RegistryObject<Block> MOSSY_RED_DORWINION_BRICK_SLAB;
	public static RegistryObject<Block> MOSSY_RED_DORWINION_BRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_RED_DORWINION_BRICK_WALL;
	public static RegistryObject<Block> CRACKED_RED_DORWINION_BRICK;
	public static RegistryObject<Block> CRACKED_RED_DORWINION_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_RED_DORWINION_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_RED_DORWINION_BRICK_WALL;
	public static RegistryObject<Block> DORWINION_PILLAR;
	public static RegistryObject<Block> DORWINION_PILLAR_SLAB;
	public static RegistryObject<Block> WHITE_SAND;
	public static RegistryObject<Block> WHITE_SANDSTONE;
	public static RegistryObject<Block> WHITE_SANDSTONE_SLAB;
	public static RegistryObject<Block> WHITE_SANDSTONE_STAIRS;
	public static RegistryObject<Block> WHITE_SANDSTONE_WALL;
	public static RegistryObject<Block> WHITE_SANDSTONE_DRIPSTONE;
	public static RegistryObject<Block> CUT_WHITE_SANDSTONE;
	public static RegistryObject<Block> CUT_WHITE_SANDSTONE_SLAB;
	public static RegistryObject<Block> CHISELED_WHITE_SANDSTONE;
	public static RegistryObject<Block> SMOOTH_WHITE_SANDSTONE;
	public static RegistryObject<Block> SMOOTH_WHITE_SANDSTONE_SLAB;
	public static RegistryObject<Block> SMOOTH_WHITE_SANDSTONE_STAIRS;
	public static RegistryObject<Block> CYPRESS_LOG;
	public static RegistryObject<Block> CYPRESS_WOOD;
	public static RegistryObject<Block> CYPRESS_PLANKS;
	public static RegistryObject<Block> CYPRESS_LEAVES;
	public static RegistryObject<Block> CYPRESS_SAPLING;
	public static RegistryObject<Block> POTTED_CYPRESS_SAPLING;
	public static RegistryObject<Block> CYPRESS_SLAB;
	public static RegistryObject<Block> CYPRESS_STAIRS;
	public static RegistryObject<Block> CYPRESS_FENCE;
	public static RegistryObject<Block> CYPRESS_FENCE_GATE;
	public static RegistryObject<Block> CYPRESS_DOOR;
	public static RegistryObject<Block> CYPRESS_TRAPDOOR;
	public static RegistryObject<Block> CYPRESS_PRESSURE_PLATE;
	public static RegistryObject<Block> CYPRESS_BUTTON;
	public static RegistryObject<Block> STRIPPED_CYPRESS_LOG;
	public static RegistryObject<Block> STRIPPED_CYPRESS_WOOD;
	public static RegistryObject<Block> CYPRESS_BEAM;
	public static RegistryObject<Block> CYPRESS_SIGN;
	public static RegistryObject<Block> CYPRESS_WALL_SIGN;
	public static RegistryObject<Block> DALE_BRICK;
	public static RegistryObject<Block> DALE_BRICK_SLAB;
	public static RegistryObject<Block> DALE_BRICK_STAIRS;
	public static RegistryObject<Block> DALE_BRICK_WALL;
	public static RegistryObject<Block> MOSSY_DALE_BRICK;
	public static RegistryObject<Block> MOSSY_DALE_BRICK_SLAB;
	public static RegistryObject<Block> MOSSY_DALE_BRICK_STAIRS;
	public static RegistryObject<Block> MOSSY_DALE_BRICK_WALL;
	public static RegistryObject<Block> CRACKED_DALE_BRICK;
	public static RegistryObject<Block> CRACKED_DALE_BRICK_SLAB;
	public static RegistryObject<Block> CRACKED_DALE_BRICK_STAIRS;
	public static RegistryObject<Block> CRACKED_DALE_BRICK_WALL;
	public static RegistryObject<Block> DALE_CRAFTING_TABLE;
	public static RegistryObject<Block> DALE_PILLAR;
	public static RegistryObject<Block> DALE_PILLAR_SLAB;
	public static RegistryObject<Block> CARVED_DALE_BRICK;
	public static RegistryObject<Block> BLACKROOT;
	public static RegistryObject<Block> POTTED_BLACKROOT;
	public static RegistryObject<Block> DALE_PAVING;
	public static RegistryObject<Block> DALE_PAVING_SLAB;
	public static RegistryObject<Block> DALE_PAVING_STAIRS;
	public static RegistryObject<Block> MOSSY_DALE_PAVING;
	public static RegistryObject<Block> MOSSY_DALE_PAVING_SLAB;
	public static RegistryObject<Block> MOSSY_DALE_PAVING_STAIRS;
	public static RegistryObject<Block> YELLOW_IRIS;
	public static RegistryObject<Block> QUAGMIRE;
	public static RegistryObject<Block> MALLOS;
	public static RegistryObject<Block> POTTED_MALLOS;
	public static RegistryObject<Block> ROTTEN_LOG;
	public static RegistryObject<Block> ROTTEN_WOOD;
	public static RegistryObject<Block> ROTTEN_PLANKS;
	public static RegistryObject<Block> ROTTEN_SLAB;
	public static RegistryObject<Block> ROTTEN_STAIRS;
	public static RegistryObject<Block> ROTTEN_FENCE;
	public static RegistryObject<Block> ROTTEN_FENCE_GATE;
	public static RegistryObject<Block> ROTTEN_DOOR;
	public static RegistryObject<Block> ROTTEN_TRAPDOOR;
	public static RegistryObject<Block> ROTTEN_PRESSURE_PLATE;
	public static RegistryObject<Block> ROTTEN_BUTTON;
	public static RegistryObject<Block> STRIPPED_ROTTEN_LOG;
	public static RegistryObject<Block> STRIPPED_ROTTEN_WOOD;
	public static RegistryObject<Block> ROTTEN_BEAM;
	public static RegistryObject<Block> ROTTEN_SIGN;
	public static RegistryObject<Block> ROTTEN_WALL_SIGN;
	public static RegistryObject<Block> REEDS;
	public static RegistryObject<Block> PAPYRUS;
	public static RegistryObject<Block> RUSHES;
	public static RegistryObject<Block> DRIED_REEDS;
	public static RegistryObject<Block> REED_THATCH;
	public static RegistryObject<Block> REED_THATCH_SLAB;
	public static RegistryObject<Block> REED_THATCH_STAIRS;
	public static RegistryObject<Block> WHITE_WATER_LILY;
	public static RegistryObject<Block> YELLOW_WATER_LILY;
	public static RegistryObject<Block> PURPLE_WATER_LILY;
	public static RegistryObject<Block> PINK_WATER_LILY;
	public static RegistryObject<Block> OAK_LOG_SLAB;
	public static RegistryObject<Block> OAK_WOOD_SLAB;
	public static RegistryObject<Block> OAK_WOOD_STAIRS;
	public static RegistryObject<Block> OAK_BRANCH;
	public static RegistryObject<Block> STRIPPED_OAK_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_OAK_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_OAK_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_OAK_BRANCH;
	public static RegistryObject<Block> OAK_BEAM_SLAB;
	public static RegistryObject<Block> SPRUCE_LOG_SLAB;
	public static RegistryObject<Block> SPRUCE_WOOD_SLAB;
	public static RegistryObject<Block> SPRUCE_WOOD_STAIRS;
	public static RegistryObject<Block> SPRUCE_BRANCH;
	public static RegistryObject<Block> STRIPPED_SPRUCE_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_SPRUCE_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_SPRUCE_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_SPRUCE_BRANCH;
	public static RegistryObject<Block> SPRUCE_BEAM_SLAB;
	public static RegistryObject<Block> BIRCH_LOG_SLAB;
	public static RegistryObject<Block> BIRCH_WOOD_SLAB;
	public static RegistryObject<Block> BIRCH_WOOD_STAIRS;
	public static RegistryObject<Block> BIRCH_BRANCH;
	public static RegistryObject<Block> STRIPPED_BIRCH_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_BIRCH_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_BIRCH_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_BIRCH_BRANCH;
	public static RegistryObject<Block> BIRCH_BEAM_SLAB;
	public static RegistryObject<Block> JUNGLE_LOG_SLAB;
	public static RegistryObject<Block> JUNGLE_WOOD_SLAB;
	public static RegistryObject<Block> JUNGLE_WOOD_STAIRS;
	public static RegistryObject<Block> JUNGLE_BRANCH;
	public static RegistryObject<Block> STRIPPED_JUNGLE_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_JUNGLE_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_JUNGLE_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_JUNGLE_BRANCH;
	public static RegistryObject<Block> JUNGLE_BEAM_SLAB;
	public static RegistryObject<Block> ACACIA_LOG_SLAB;
	public static RegistryObject<Block> ACACIA_WOOD_SLAB;
	public static RegistryObject<Block> ACACIA_WOOD_STAIRS;
	public static RegistryObject<Block> ACACIA_BRANCH;
	public static RegistryObject<Block> STRIPPED_ACACIA_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_ACACIA_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_ACACIA_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_ACACIA_BRANCH;
	public static RegistryObject<Block> ACACIA_BEAM_SLAB;
	public static RegistryObject<Block> DARK_OAK_LOG_SLAB;
	public static RegistryObject<Block> DARK_OAK_WOOD_SLAB;
	public static RegistryObject<Block> DARK_OAK_WOOD_STAIRS;
	public static RegistryObject<Block> DARK_OAK_BRANCH;
	public static RegistryObject<Block> STRIPPED_DARK_OAK_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_DARK_OAK_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_DARK_OAK_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_DARK_OAK_BRANCH;
	public static RegistryObject<Block> DARK_OAK_BEAM_SLAB;
	public static RegistryObject<Block> PINE_LOG_SLAB;
	public static RegistryObject<Block> PINE_WOOD_SLAB;
	public static RegistryObject<Block> PINE_WOOD_STAIRS;
	public static RegistryObject<Block> PINE_BRANCH;
	public static RegistryObject<Block> STRIPPED_PINE_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_PINE_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_PINE_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_PINE_BRANCH;
	public static RegistryObject<Block> PINE_BEAM_SLAB;
	public static RegistryObject<Block> MALLORN_LOG_SLAB;
	public static RegistryObject<Block> MALLORN_WOOD_SLAB;
	public static RegistryObject<Block> MALLORN_WOOD_STAIRS;
	public static RegistryObject<Block> MALLORN_BRANCH;
	public static RegistryObject<Block> STRIPPED_MALLORN_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_MALLORN_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_MALLORN_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_MALLORN_BRANCH;
	public static RegistryObject<Block> MALLORN_BEAM_SLAB;
	public static RegistryObject<Block> MIRK_OAK_LOG_SLAB;
	public static RegistryObject<Block> MIRK_OAK_WOOD_SLAB;
	public static RegistryObject<Block> MIRK_OAK_WOOD_STAIRS;
	public static RegistryObject<Block> MIRK_OAK_BRANCH;
	public static RegistryObject<Block> STRIPPED_MIRK_OAK_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_MIRK_OAK_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_MIRK_OAK_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_MIRK_OAK_BRANCH;
	public static RegistryObject<Block> MIRK_OAK_BEAM_SLAB;
	public static RegistryObject<Block> CHARRED_LOG_SLAB;
	public static RegistryObject<Block> CHARRED_WOOD_SLAB;
	public static RegistryObject<Block> CHARRED_WOOD_STAIRS;
	public static RegistryObject<Block> CHARRED_BRANCH;
	public static RegistryObject<Block> STRIPPED_CHARRED_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_CHARRED_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_CHARRED_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_CHARRED_BRANCH;
	public static RegistryObject<Block> CHARRED_BEAM_SLAB;
	public static RegistryObject<Block> APPLE_LOG_SLAB;
	public static RegistryObject<Block> APPLE_WOOD_SLAB;
	public static RegistryObject<Block> APPLE_WOOD_STAIRS;
	public static RegistryObject<Block> APPLE_BRANCH;
	public static RegistryObject<Block> STRIPPED_APPLE_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_APPLE_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_APPLE_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_APPLE_BRANCH;
	public static RegistryObject<Block> APPLE_BEAM_SLAB;
	public static RegistryObject<Block> PEAR_LOG_SLAB;
	public static RegistryObject<Block> PEAR_WOOD_SLAB;
	public static RegistryObject<Block> PEAR_WOOD_STAIRS;
	public static RegistryObject<Block> PEAR_BRANCH;
	public static RegistryObject<Block> STRIPPED_PEAR_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_PEAR_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_PEAR_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_PEAR_BRANCH;
	public static RegistryObject<Block> PEAR_BEAM_SLAB;
	public static RegistryObject<Block> CHERRY_LOG_SLAB;
	public static RegistryObject<Block> CHERRY_WOOD_SLAB;
	public static RegistryObject<Block> CHERRY_WOOD_STAIRS;
	public static RegistryObject<Block> CHERRY_BRANCH;
	public static RegistryObject<Block> STRIPPED_CHERRY_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_CHERRY_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_CHERRY_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_CHERRY_BRANCH;
	public static RegistryObject<Block> CHERRY_BEAM_SLAB;
	public static RegistryObject<Block> LEBETHRON_LOG_SLAB;
	public static RegistryObject<Block> LEBETHRON_WOOD_SLAB;
	public static RegistryObject<Block> LEBETHRON_WOOD_STAIRS;
	public static RegistryObject<Block> LEBETHRON_BRANCH;
	public static RegistryObject<Block> STRIPPED_LEBETHRON_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_LEBETHRON_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_LEBETHRON_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_LEBETHRON_BRANCH;
	public static RegistryObject<Block> LEBETHRON_BEAM_SLAB;
	public static RegistryObject<Block> BEECH_LOG_SLAB;
	public static RegistryObject<Block> BEECH_WOOD_SLAB;
	public static RegistryObject<Block> BEECH_WOOD_STAIRS;
	public static RegistryObject<Block> BEECH_BRANCH;
	public static RegistryObject<Block> STRIPPED_BEECH_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_BEECH_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_BEECH_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_BEECH_BRANCH;
	public static RegistryObject<Block> BEECH_BEAM_SLAB;
	public static RegistryObject<Block> MAPLE_LOG_SLAB;
	public static RegistryObject<Block> MAPLE_WOOD_SLAB;
	public static RegistryObject<Block> MAPLE_WOOD_STAIRS;
	public static RegistryObject<Block> MAPLE_BRANCH;
	public static RegistryObject<Block> STRIPPED_MAPLE_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_MAPLE_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_MAPLE_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_MAPLE_BRANCH;
	public static RegistryObject<Block> MAPLE_BEAM_SLAB;
	public static RegistryObject<Block> ASPEN_LOG_SLAB;
	public static RegistryObject<Block> ASPEN_WOOD_SLAB;
	public static RegistryObject<Block> ASPEN_WOOD_STAIRS;
	public static RegistryObject<Block> ASPEN_BRANCH;
	public static RegistryObject<Block> STRIPPED_ASPEN_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_ASPEN_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_ASPEN_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_ASPEN_BRANCH;
	public static RegistryObject<Block> ASPEN_BEAM_SLAB;
	public static RegistryObject<Block> LAIRELOSSE_LOG_SLAB;
	public static RegistryObject<Block> LAIRELOSSE_WOOD_SLAB;
	public static RegistryObject<Block> LAIRELOSSE_WOOD_STAIRS;
	public static RegistryObject<Block> LAIRELOSSE_BRANCH;
	public static RegistryObject<Block> STRIPPED_LAIRELOSSE_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_LAIRELOSSE_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_LAIRELOSSE_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_LAIRELOSSE_BRANCH;
	public static RegistryObject<Block> LAIRELOSSE_BEAM_SLAB;
	public static RegistryObject<Block> CEDAR_LOG_SLAB;
	public static RegistryObject<Block> CEDAR_WOOD_SLAB;
	public static RegistryObject<Block> CEDAR_WOOD_STAIRS;
	public static RegistryObject<Block> CEDAR_BRANCH;
	public static RegistryObject<Block> STRIPPED_CEDAR_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_CEDAR_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_CEDAR_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_CEDAR_BRANCH;
	public static RegistryObject<Block> CEDAR_BEAM_SLAB;
	public static RegistryObject<Block> FIR_LOG_SLAB;
	public static RegistryObject<Block> FIR_WOOD_SLAB;
	public static RegistryObject<Block> FIR_WOOD_STAIRS;
	public static RegistryObject<Block> FIR_BRANCH;
	public static RegistryObject<Block> STRIPPED_FIR_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_FIR_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_FIR_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_FIR_BRANCH;
	public static RegistryObject<Block> FIR_BEAM_SLAB;
	public static RegistryObject<Block> LARCH_LOG_SLAB;
	public static RegistryObject<Block> LARCH_WOOD_SLAB;
	public static RegistryObject<Block> LARCH_WOOD_STAIRS;
	public static RegistryObject<Block> LARCH_BRANCH;
	public static RegistryObject<Block> STRIPPED_LARCH_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_LARCH_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_LARCH_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_LARCH_BRANCH;
	public static RegistryObject<Block> LARCH_BEAM_SLAB;
	public static RegistryObject<Block> HOLLY_LOG_SLAB;
	public static RegistryObject<Block> HOLLY_WOOD_SLAB;
	public static RegistryObject<Block> HOLLY_WOOD_STAIRS;
	public static RegistryObject<Block> HOLLY_BRANCH;
	public static RegistryObject<Block> STRIPPED_HOLLY_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_HOLLY_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_HOLLY_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_HOLLY_BRANCH;
	public static RegistryObject<Block> HOLLY_BEAM_SLAB;
	public static RegistryObject<Block> GREEN_OAK_LOG_SLAB;
	public static RegistryObject<Block> GREEN_OAK_WOOD_SLAB;
	public static RegistryObject<Block> GREEN_OAK_WOOD_STAIRS;
	public static RegistryObject<Block> GREEN_OAK_BRANCH;
	public static RegistryObject<Block> STRIPPED_GREEN_OAK_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_GREEN_OAK_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_GREEN_OAK_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_GREEN_OAK_BRANCH;
	public static RegistryObject<Block> GREEN_OAK_BEAM_SLAB;
	public static RegistryObject<Block> CYPRESS_LOG_SLAB;
	public static RegistryObject<Block> CYPRESS_WOOD_SLAB;
	public static RegistryObject<Block> CYPRESS_WOOD_STAIRS;
	public static RegistryObject<Block> CYPRESS_BRANCH;
	public static RegistryObject<Block> STRIPPED_CYPRESS_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_CYPRESS_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_CYPRESS_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_CYPRESS_BRANCH;
	public static RegistryObject<Block> CYPRESS_BEAM_SLAB;
	public static RegistryObject<Block> ROTTEN_LOG_SLAB;
	public static RegistryObject<Block> ROTTEN_WOOD_SLAB;
	public static RegistryObject<Block> ROTTEN_WOOD_STAIRS;
	public static RegistryObject<Block> ROTTEN_BRANCH;
	public static RegistryObject<Block> STRIPPED_ROTTEN_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_ROTTEN_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_ROTTEN_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_ROTTEN_BRANCH;
	public static RegistryObject<Block> ROTTEN_BEAM_SLAB;
	public static RegistryObject<Block> LAPIS_TRIMMED_BLUE_BRICK;
	public static RegistryObject<Block> DWARVEN_TORCH;
	public static RegistryObject<Block> DWARVEN_WALL_TORCH;
	public static RegistryObject<Block> SNOW_BRICK;
	public static RegistryObject<Block> SNOW_BRICK_SLAB;
	public static RegistryObject<Block> SNOW_BRICK_STAIRS;
	public static RegistryObject<Block> SNOW_BRICK_WALL;
	public static RegistryObject<Block> LOSSOTH_CRAFTING_TABLE;
	public static RegistryObject<Block> ICE_BRICK;
	public static RegistryObject<Block> ICE_BRICK_SLAB;
	public static RegistryObject<Block> ICE_BRICK_STAIRS;
	public static RegistryObject<Block> ICE_BRICK_WALL;
	public static RegistryObject<Block> SNOW_PATH;
	public static RegistryObject<Block> FUR_BUNDLE;
	public static RegistryObject<Block> LEATHER_BUNDLE;
	public static RegistryObject<Block> BLUBBER_TORCH;
	public static RegistryObject<Block> BLUBBER_WALL_TORCH;
	public static RegistryObject<Block> CUSTOM_WAYPOINT_MARKER;
	public static RegistryObject<Block> DUNLENDING_CRAFTING_TABLE;
	public static RegistryObject<Block> CARVED_CHALK_BRICK;
	public static RegistryObject<Block> GONDOR_BEACON;
	public static RegistryObject<Block> FALLEN_OAK_LEAVES;
	public static RegistryObject<Block> FALLEN_SPRUCE_LEAVES;
	public static RegistryObject<Block> FALLEN_BIRCH_LEAVES;
	public static RegistryObject<Block> FALLEN_JUNGLE_LEAVES;
	public static RegistryObject<Block> FALLEN_ACACIA_LEAVES;
	public static RegistryObject<Block> FALLEN_DARK_OAK_LEAVES;
	public static RegistryObject<Block> FALLEN_PINE_LEAVES;
	public static RegistryObject<Block> FALLEN_MALLORN_LEAVES;
	public static RegistryObject<Block> FALLEN_MIRK_OAK_LEAVES;
	public static RegistryObject<Block> FALLEN_APPLE_LEAVES;
	public static RegistryObject<Block> FALLEN_PEAR_LEAVES;
	public static RegistryObject<Block> FALLEN_CHERRY_LEAVES;
	public static RegistryObject<Block> FALLEN_LEBETHRON_LEAVES;
	public static RegistryObject<Block> FALLEN_BEECH_LEAVES;
	public static RegistryObject<Block> FALLEN_MAPLE_LEAVES;
	public static RegistryObject<Block> FALLEN_ASPEN_LEAVES;
	public static RegistryObject<Block> FALLEN_LAIRELOSSE_LEAVES;
	public static RegistryObject<Block> FALLEN_CEDAR_LEAVES;
	public static RegistryObject<Block> FALLEN_FIR_LEAVES;
	public static RegistryObject<Block> FALLEN_LARCH_LEAVES;
	public static RegistryObject<Block> FALLEN_HOLLY_LEAVES;
	public static RegistryObject<Block> FALLEN_GREEN_OAK_LEAVES;
	public static RegistryObject<Block> FALLEN_RED_OAK_LEAVES;
	public static RegistryObject<Block> FALLEN_CYPRESS_LEAVES;
	public static RegistryObject<Block> THATCH_FLOORING;
	public static RegistryObject<Block> WOODEN_MUG;
	public static RegistryObject<Block> CERAMIC_MUG;
	public static RegistryObject<Block> GOLDEN_GOBLET;
	public static RegistryObject<Block> SILVER_GOBLET;
	public static RegistryObject<Block> COPPER_GOBLET;
	public static RegistryObject<Block> WOODEN_CUP;
	public static RegistryObject<Block> ALE_HORN;
	public static RegistryObject<Block> GOLDEN_ALE_HORN;
	public static RegistryObject<Block> MORDOR_BASALT_BRICK;
	public static RegistryObject<Block> MORDOR_BASALT_BRICK_SLAB;
	public static RegistryObject<Block> MORDOR_BASALT_BRICK_STAIRS;
	public static RegistryObject<Block> MORDOR_BASALT_BRICK_WALL;
	public static RegistryObject<Block> CARVED_MORDOR_BASALT_BRICK;
	public static RegistryObject<Block> SOUL_FIRE_HEARTH_BLOCK;
	public static RegistryObject<Block> WOODEN_GATE;
	public static RegistryObject<Block> WOODEN_PORTCULLIS;
	public static RegistryObject<Block> IRON_PORTCULLIS;
	public static RegistryObject<Block> BRONZE_PORTCULLIS;
	public static RegistryObject<Block> SILVER_GATE;
	public static RegistryObject<Block> GOLDEN_GATE;
	public static RegistryObject<Block> MITHRIL_GATE;
	public static RegistryObject<Block> DWARVEN_GATE;
	public static RegistryObject<Block> ORC_GATE;
	public static RegistryObject<Block> GONDOR_GATE;
	public static RegistryObject<Block> DOL_AMROTH_GATE;
	public static RegistryObject<Block> ROHAN_GATE;
	public static RegistryObject<Block> HIGH_ELVEN_GATE;
	public static RegistryObject<Block> GALADHRIM_GATE;
	public static RegistryObject<Block> WOOD_ELVEN_GATE;
	public static RegistryObject<Block> HARAD_GATE;
	public static RegistryObject<Block> URUK_GATE;
	public static RegistryObject<Block> WICKER_FENCE;
	public static RegistryObject<Block> RED_HOBBIT_GATE;
	public static RegistryObject<Block> YELLOW_HOBBIT_GATE;
	public static RegistryObject<Block> GREEN_HOBBIT_GATE;
	public static RegistryObject<Block> BLUE_HOBBIT_GATE;
	public static RegistryObject<Block> MORGUL_FLOWER;
	public static RegistryObject<Block> POTTED_MORGUL_FLOWER;
	public static RegistryObject<Block> REED_BALE;
	public static RegistryObject<Block> FLAX_BALE;
	public static RegistryObject<Block> WICKER_BARS;
	public static RegistryObject<Block> WICKER_FENCE_GATE;
	public static RegistryObject<Block> CULUMALDA_LOG;
	public static RegistryObject<Block> CULUMALDA_WOOD;
	public static RegistryObject<Block> CULUMALDA_PLANKS;
	public static RegistryObject<Block> CULUMALDA_LEAVES;
	public static RegistryObject<Block> CULUMALDA_SAPLING;
	public static RegistryObject<Block> POTTED_CULUMALDA_SAPLING;
	public static RegistryObject<Block> CULUMALDA_SLAB;
	public static RegistryObject<Block> CULUMALDA_STAIRS;
	public static RegistryObject<Block> CULUMALDA_FENCE;
	public static RegistryObject<Block> CULUMALDA_FENCE_GATE;
	public static RegistryObject<Block> CULUMALDA_DOOR;
	public static RegistryObject<Block> CULUMALDA_TRAPDOOR;
	public static RegistryObject<Block> CULUMALDA_PRESSURE_PLATE;
	public static RegistryObject<Block> CULUMALDA_BUTTON;
	public static RegistryObject<Block> STRIPPED_CULUMALDA_LOG;
	public static RegistryObject<Block> STRIPPED_CULUMALDA_WOOD;
	public static RegistryObject<Block> CULUMALDA_BEAM;
	public static RegistryObject<Block> CULUMALDA_SIGN;
	public static RegistryObject<Block> CULUMALDA_WALL_SIGN;
	public static RegistryObject<Block> CULUMALDA_LOG_SLAB;
	public static RegistryObject<Block> CULUMALDA_WOOD_SLAB;
	public static RegistryObject<Block> CULUMALDA_WOOD_STAIRS;
	public static RegistryObject<Block> CULUMALDA_BRANCH;
	public static RegistryObject<Block> STRIPPED_CULUMALDA_LOG_SLAB;
	public static RegistryObject<Block> STRIPPED_CULUMALDA_WOOD_SLAB;
	public static RegistryObject<Block> STRIPPED_CULUMALDA_WOOD_STAIRS;
	public static RegistryObject<Block> STRIPPED_CULUMALDA_BRANCH;
	public static RegistryObject<Block> CULUMALDA_BEAM_SLAB;
	public static RegistryObject<Block> FALLEN_CULUMALDA_LEAVES;
	public static RegistryObject<Block> BREE_CRAFTING_TABLE;
	public static RegistryObject<Block> PALANTIR;
	public static RegistryObject<Block> MORDOR_DIRT_PATH;
	public static RegistryObject<Block> CHALK_PATH;
	public static RegistryObject<Block> OAK_VERTICAL_SLAB;
	public static RegistryObject<Block> SPRUCE_VERTICAL_SLAB;
	public static RegistryObject<Block> BIRCH_VERTICAL_SLAB;
	public static RegistryObject<Block> JUNGLE_VERTICAL_SLAB;
	public static RegistryObject<Block> ACACIA_VERTICAL_SLAB;
	public static RegistryObject<Block> DARK_OAK_VERTICAL_SLAB;
	public static RegistryObject<Block> STONE_VERTICAL_SLAB;
	public static RegistryObject<Block> SMOOTH_STONE_VERTICAL_SLAB;
	public static RegistryObject<Block> SANDSTONE_VERTICAL_SLAB;
	public static RegistryObject<Block> CUT_SANDSTONE_VERTICAL_SLAB;
	public static RegistryObject<Block> PETRIFIED_OAK_VERTICAL_SLAB;
	public static RegistryObject<Block> COBBLESTONE_VERTICAL_SLAB;
	public static RegistryObject<Block> BRICK_VERTICAL_SLAB;
	public static RegistryObject<Block> STONE_BRICK_VERTICAL_SLAB;
	public static RegistryObject<Block> NETHER_BRICK_VERTICAL_SLAB;
	public static RegistryObject<Block> QUARTZ_VERTICAL_SLAB;
	public static RegistryObject<Block> RED_SANDSTONE_VERTICAL_SLAB;
	public static RegistryObject<Block> CUT_RED_SANDSTONE_SLAB;
	public static RegistryObject<Block> PRISMARINE_VERTICAL_SLAB;
	public static RegistryObject<Block> PRISMARINE_BRICK_VERTICAL_SLAB;
	public static RegistryObject<Block> DARK_PRISMARINE_VERTICAL_SLAB;
	public static RegistryObject<Block> PURPUR_VERTICAL_SLAB;
	public static RegistryObject<Block> POLISHED_GRANITE_VERTICAL_SLAB;
	public static RegistryObject<Block> SMOOTH_RED_SANDSTONE_VERTICAL_SLAB;
	public static RegistryObject<Block> MOSSY_STONE_BRICK_VERTICAL_SLAB;
	public static RegistryObject<Block> POLISHED_DIORITE_VERTICAL_SLAB;
	public static RegistryObject<Block> MOSSY_COBBLESTONE_VERTICAL_SLAB;
	public static RegistryObject<Block> END_STONE_BRICK_VERTICAL_SLAB;
	public static RegistryObject<Block> SMOOTH_SANDSTONE_VERTICAL_SLAB;
	public static RegistryObject<Block> SMOOTH_QUARTZ_VERTICAL_SLAB;
	public static RegistryObject<Block> GRANITE_VERTICAL_SLAB;
	public static RegistryObject<Block> ANDESITE_VERTICAL_SLAB;
	public static RegistryObject<Block> RED_NETHER_BRICK_VERTICAL_SLAB;
	public static RegistryObject<Block> POLISHED_ANDESITE_VERTICAL_SLAB;
	public static RegistryObject<Block> DIORITE_VERTICAL_SLAB;
	public static RegistryObject<Block> CRIMSON_VERTICAL_SLAB;
	public static RegistryObject<Block> WARPED_VERTICAL_SLAB;
	public static RegistryObject<Block> BLACKSTONE_VERTICAL_SLAB;
	public static RegistryObject<Block> POLISHED_BLACKSTONE_BRICK_VERTICAL_SLAB;
	public static RegistryObject<Block> POLISHED_BLACKSTONE_VERTICAL_SLAB;

	static {
		BLOCKS = DeferredRegister.create(ForgeRegistries.BLOCKS, "lotr");
		SOUND_CERAMIC = new SoundType(1.0F, 1.0F, LOTRSoundEvents.CERAMIC_BREAK, SoundEvents.STONE_STEP, SoundEvents.STONE_PLACE, SoundEvents.STONE_HIT, SoundEvents.STONE_FALL);
		SOUND_TREASURE = new SoundType(1.0F, 1.0F, LOTRSoundEvents.TREASURE_BREAK, LOTRSoundEvents.TREASURE_STEP, LOTRSoundEvents.TREASURE_PLACE, LOTRSoundEvents.TREASURE_HIT, LOTRSoundEvents.TREASURE_FALL) {
			private Random treasureRand = new Random();

			@Override
			public float getPitch() {
				return super.getPitch() * (0.85F + treasureRand.nextFloat() * 0.3F);
			}
		};
		GONDOR_ROCK = BLOCKS.register("gondor_rock", () -> new LOTRStoneBlock(MaterialColor.WOOL));
		GONDOR_BRICK = BLOCKS.register("gondor_brick", () -> new LOTRStoneBlock(MaterialColor.WOOL));
		MORDOR_ROCK = BLOCKS.register("mordor_rock", () -> new MordorRockBlock(MaterialColor.COLOR_BLACK));
		MORDOR_BRICK = BLOCKS.register("mordor_brick", () -> new LOTRStoneBlock(MaterialColor.COLOR_BLACK));
		ROHAN_ROCK = BLOCKS.register("rohan_rock", () -> new LOTRStoneBlock(MaterialColor.DIRT));
		ROHAN_BRICK = BLOCKS.register("rohan_brick", () -> new LOTRStoneBlock(MaterialColor.DIRT));
		BLUE_ROCK = BLOCKS.register("blue_rock", () -> new LOTRStoneBlock(MaterialColor.COLOR_LIGHT_BLUE));
		BLUE_BRICK = BLOCKS.register("blue_brick", () -> new LOTRStoneBlock(MaterialColor.COLOR_LIGHT_BLUE));
		RED_ROCK = BLOCKS.register("red_rock", () -> new LOTRStoneBlock(MaterialColor.TERRACOTTA_ORANGE));
		RED_BRICK = BLOCKS.register("red_brick", () -> new LOTRStoneBlock(MaterialColor.TERRACOTTA_ORANGE));
		SIMBELMYNE = BLOCKS.register("simbelmyne", () -> new LOTRFlowerBlock(Effects.REGENERATION, 10).setWideFlat());
		SHIRE_HEATHER = BLOCKS.register("shire_heather", () -> new LOTRFlowerBlock(Effects.SATURATION, 7).setWide());
		COPPER_ORE = BLOCKS.register("copper_ore", () -> new LOTROreBlock(Properties.of(Material.STONE).strength(3.0F, 3.0F)).setOreLevel(1));
		TIN_ORE = BLOCKS.register("tin_ore", () -> new LOTROreBlock(Properties.of(Material.STONE).strength(3.0F, 3.0F)).setOreLevel(1));
		SILVER_ORE = BLOCKS.register("silver_ore", () -> new LOTROreBlock(Properties.of(Material.STONE).strength(3.0F, 3.0F)).setOreLevel(2));
		MITHRIL_ORE = BLOCKS.register("mithril_ore", () -> new MithrilOreBlock(Properties.of(Material.STONE).strength(4.0F, 6.0F)).setOreLevel(2));
		COPPER_BLOCK = BLOCKS.register("copper_block", () -> new MineralBlock(Properties.of(Material.METAL, MaterialColor.COLOR_ORANGE).strength(4.0F, 6.0F).sound(SoundType.METAL), 1));
		TIN_BLOCK = BLOCKS.register("tin_block", () -> new MineralBlock(Properties.of(Material.METAL, MaterialColor.STONE).strength(2.0F, 6.0F).sound(SoundType.METAL), 1));
		SILVER_BLOCK = BLOCKS.register("silver_block", () -> new MineralBlock(Properties.of(Material.METAL, MaterialColor.COLOR_LIGHT_GRAY).strength(3.0F, 6.0F).sound(SoundType.METAL), 2));
		MITHRIL_BLOCK = BLOCKS.register("mithril_block", () -> new MithrilBlock(Properties.of(Material.METAL, MaterialColor.COLOR_LIGHT_GRAY).strength(5.0F, 12.0F).sound(SoundType.METAL), 2, true));
		BRONZE_BLOCK = BLOCKS.register("bronze_block", () -> new MineralBlock(Properties.of(Material.METAL, MaterialColor.COLOR_ORANGE).strength(4.0F, 6.0F).sound(SoundType.METAL), 1));
		POTTED_SIMBELMYNE = BLOCKS.register("potted_simbelmyne", () -> new LOTRPottedPlantBlock(SIMBELMYNE));
		POTTED_SHIRE_HEATHER = BLOCKS.register("potted_shire_heather", () -> new LOTRPottedPlantBlock(SHIRE_HEATHER));
		GONDOR_ROCK_SLAB = BLOCKS.register("gondor_rock_slab", () -> new AxialSlabBlock(GONDOR_ROCK));
		GONDOR_ROCK_STAIRS = BLOCKS.register("gondor_rock_stairs", () -> new LOTRStairsBlock(GONDOR_ROCK));
		GONDOR_ROCK_WALL = BLOCKS.register("gondor_rock_wall", () -> new LOTRWallBlock(GONDOR_ROCK));
		GONDOR_CRAFTING_TABLE = BLOCKS.register("gondor_crafting_table", () -> new FactionCraftingTableBlock.Gondor(GONDOR_BRICK));
		MORDOR_CRAFTING_TABLE = BLOCKS.register("mordor_crafting_table", () -> new FactionCraftingTableBlock.Mordor(MORDOR_BRICK));
		ROHAN_CRAFTING_TABLE = BLOCKS.register("rohan_crafting_table", () -> new FactionCraftingTableBlock.Rohan(() -> Blocks.OAK_PLANKS));
		PINE_LOG = BLOCKS.register("pine_log", () -> new StrippableLogBlock(MaterialColor.SAND, MaterialColor.PODZOL, () -> STRIPPED_PINE_LOG.get()));
		PINE_WOOD = BLOCKS.register("pine_wood", () -> new StrippableWoodBlock(PINE_LOG, () -> STRIPPED_PINE_WOOD.get()));
		PINE_PLANKS = BLOCKS.register("pine_planks", () -> new LOTRPlanksBlock(MaterialColor.SAND));
		PINE_LEAVES = BLOCKS.register("pine_leaves", LOTRLeavesBlock::new);
		PINE_SAPLING = BLOCKS.register("pine_sapling", () -> new LOTRSaplingBlock(new PineTree()));
		POTTED_PINE_SAPLING = BLOCKS.register("potted_pine_sapling", () -> new LOTRPottedPlantBlock(PINE_SAPLING));
		PINE_SLAB = BLOCKS.register("pine_slab", () -> new AxialSlabBlock(PINE_PLANKS));
		PINE_STAIRS = BLOCKS.register("pine_stairs", () -> new LOTRStairsBlock(PINE_PLANKS));
		PINE_FENCE = BLOCKS.register("pine_fence", () -> new LOTRFenceBlock(PINE_PLANKS));
		PINE_FENCE_GATE = BLOCKS.register("pine_fence_gate", () -> new LOTRFenceGateBlock(PINE_PLANKS));
		PINE_DOOR = BLOCKS.register("pine_door", () -> new LOTRDoorBlock(PINE_PLANKS));
		PINE_TRAPDOOR = BLOCKS.register("pine_trapdoor", () -> new LOTRTrapdoorBlock(PINE_PLANKS));
		PINE_PRESSURE_PLATE = BLOCKS.register("pine_pressure_plate", () -> new LOTRWoodPressurePlateBlock(PINE_PLANKS));
		PINE_BUTTON = BLOCKS.register("pine_button", LOTRWoodButtonBlock::new);
		STRIPPED_PINE_LOG = BLOCKS.register("stripped_pine_log", () -> new LOTRStrippedLogBlock(PINE_LOG));
		STRIPPED_PINE_WOOD = BLOCKS.register("stripped_pine_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_PINE_LOG));
		PINE_BEAM = BLOCKS.register("pine_beam", () -> new WoodBeamBlock(PINE_LOG));
		PINE_SIGN = BLOCKS.register("pine_sign", () -> new LOTRStandingSignBlock(PINE_PLANKS, LOTRSignTypes.PINE));
		PINE_WALL_SIGN = BLOCKS.register("pine_wall_sign", () -> new LOTRWallSignBlock(PINE_SIGN));
		MALLORN_LOG = BLOCKS.register("mallorn_log", () -> new StrippableLogBlock(MaterialColor.QUARTZ, MaterialColor.WOOL, () -> STRIPPED_MALLORN_LOG.get()));
		MALLORN_WOOD = BLOCKS.register("mallorn_wood", () -> new StrippableWoodBlock(MALLORN_LOG, () -> STRIPPED_MALLORN_WOOD.get()));
		MALLORN_PLANKS = BLOCKS.register("mallorn_planks", () -> new LOTRPlanksBlock(MaterialColor.QUARTZ));
		MALLORN_LEAVES = BLOCKS.register("mallorn_leaves", () -> new LOTRLeavesBlock(MaterialColor.GOLD).setFallingParticle(LOTRParticles.MALLORN_LEAF, 75));
		MALLORN_SAPLING = BLOCKS.register("mallorn_sapling", () -> new LOTRSaplingBlock(new MallornTree()));
		POTTED_MALLORN_SAPLING = BLOCKS.register("potted_mallorn_sapling", () -> new LOTRPottedPlantBlock(MALLORN_SAPLING));
		MALLORN_SLAB = BLOCKS.register("mallorn_slab", () -> new AxialSlabBlock(MALLORN_PLANKS));
		MALLORN_STAIRS = BLOCKS.register("mallorn_stairs", () -> new LOTRStairsBlock(MALLORN_PLANKS));
		MALLORN_FENCE = BLOCKS.register("mallorn_fence", () -> new LOTRFenceBlock(MALLORN_PLANKS));
		MALLORN_FENCE_GATE = BLOCKS.register("mallorn_fence_gate", () -> new LOTRFenceGateBlock(MALLORN_PLANKS));
		MALLORN_DOOR = BLOCKS.register("mallorn_door", () -> new LOTRDoorBlock(MALLORN_PLANKS));
		MALLORN_TRAPDOOR = BLOCKS.register("mallorn_trapdoor", () -> new LOTRTrapdoorBlock(MALLORN_PLANKS));
		MALLORN_PRESSURE_PLATE = BLOCKS.register("mallorn_pressure_plate", () -> new LOTRWoodPressurePlateBlock(MALLORN_PLANKS));
		MALLORN_BUTTON = BLOCKS.register("mallorn_button", LOTRWoodButtonBlock::new);
		STRIPPED_MALLORN_LOG = BLOCKS.register("stripped_mallorn_log", () -> new LOTRStrippedLogBlock(MALLORN_LOG));
		STRIPPED_MALLORN_WOOD = BLOCKS.register("stripped_mallorn_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_MALLORN_LOG));
		MALLORN_BEAM = BLOCKS.register("mallorn_beam", () -> new WoodBeamBlock(MALLORN_LOG));
		MALLORN_SIGN = BLOCKS.register("mallorn_sign", () -> new LOTRStandingSignBlock(MALLORN_PLANKS, LOTRSignTypes.MALLORN));
		MALLORN_WALL_SIGN = BLOCKS.register("mallorn_wall_sign", () -> new LOTRWallSignBlock(MALLORN_SIGN));
		DWARVEN_BRICK = BLOCKS.register("dwarven_brick", () -> new LOTRStoneBlock(MaterialColor.STONE));
		HIGH_ELVEN_BRICK = BLOCKS.register("high_elven_brick", () -> new LOTRStoneBlock(MaterialColor.METAL));
		GALADHRIM_BRICK = BLOCKS.register("galadhrim_brick", () -> new LOTRStoneBlock(MaterialColor.METAL));
		WOOD_ELVEN_BRICK = BLOCKS.register("wood_elven_brick", () -> new LOTRStoneBlock(MaterialColor.TERRACOTTA_WHITE));
		DWARVEN_CRAFTING_TABLE = BLOCKS.register("dwarven_crafting_table", () -> new FactionCraftingTableBlock.Dwarven(DWARVEN_BRICK));
		LINDON_CRAFTING_TABLE = BLOCKS.register("lindon_crafting_table", () -> new FactionCraftingTableBlock.Lindon(() -> Blocks.OAK_PLANKS));
		RIVENDELL_CRAFTING_TABLE = BLOCKS.register("rivendell_crafting_table", () -> new FactionCraftingTableBlock.Rivendell(() -> Blocks.OAK_PLANKS));
		GALADHRIM_CRAFTING_TABLE = BLOCKS.register("galadhrim_crafting_table", () -> new FactionCraftingTableBlock.Galadhrim(MALLORN_PLANKS));
		WOOD_ELVEN_CRAFTING_TABLE = BLOCKS.register("wood_elven_crafting_table", () -> new FactionCraftingTableBlock.WoodElven(() -> Blocks.OAK_PLANKS));
		APPLE_CRUMBLE = BLOCKS.register("apple_crumble", CakelikeBlock::new);
		SALT_ORE = BLOCKS.register("salt_ore", () -> new LOTROreBlock(Properties.of(Material.STONE).strength(3.0F, 3.0F)).setOreLevel(0));
		SULFUR_ORE = BLOCKS.register("sulfur_ore", () -> new LOTROreBlock(Properties.of(Material.STONE).strength(3.0F, 3.0F)).setOreLevel(0));
		NITER_ORE = BLOCKS.register("niter_ore", () -> new LOTROreBlock(Properties.of(Material.STONE).strength(3.0F, 3.0F)).setOreLevel(0));
		SALT_BLOCK = BLOCKS.register("salt_block", () -> new MineralBlock(Properties.of(Material.METAL, MaterialColor.SNOW).strength(3.0F, 3.0F).sound(SoundType.METAL), 0));
		SULFUR_BLOCK = BLOCKS.register("sulfur_block", () -> new MineralBlock(Properties.of(Material.METAL, MaterialColor.COLOR_YELLOW).strength(3.0F, 3.0F).sound(SoundType.METAL), 0));
		NITER_BLOCK = BLOCKS.register("niter_block", () -> new MineralBlock(Properties.of(Material.METAL, MaterialColor.TERRACOTTA_WHITE).strength(3.0F, 3.0F).sound(SoundType.METAL), 0));
		MORGUL_IRON_ORE_MORDOR = BLOCKS.register("morgul_iron_ore_mordor", () -> new LOTROreBlock(Properties.of(Material.STONE).strength(3.0F, 3.0F)).setOreLevel(1));
		MORGUL_IRON_ORE_STONE = BLOCKS.register("morgul_iron_ore_stone", () -> new LOTROreBlock(Properties.of(Material.STONE).strength(3.0F, 3.0F)).setOreLevel(1));
		DURNOR_ORE = BLOCKS.register("durnor_ore", () -> new LOTROreBlock(Properties.of(Material.STONE).strength(3.0F, 3.0F).lightLevel(constantLight(8))).setOreLevel(0));
		ORC_STEEL_BLOCK = BLOCKS.register("orc_steel_block", () -> new DirectionalMineralBlock(Properties.of(Material.METAL, MaterialColor.COLOR_GRAY).strength(5.0F, 6.0F).sound(SoundType.METAL), 1));
		DURNOR_BLOCK = BLOCKS.register("durnor_block", () -> new MineralBlock(Properties.of(Material.METAL, MaterialColor.COLOR_RED).strength(5.0F, 6.0F).lightLevel(constantLight(8)).sound(SoundType.METAL), 0));
		HARAD_BRICK = BLOCKS.register("harad_brick", () -> new LOTRStoneBlock(MaterialColor.SAND));
		RED_HARAD_BRICK = BLOCKS.register("red_harad_brick", () -> new LOTRStoneBlock(MaterialColor.TERRACOTTA_ORANGE));
		HARAD_CRAFTING_TABLE = BLOCKS.register("harad_crafting_table", () -> new FactionCraftingTableBlock.Harad(HARAD_BRICK));
		GONDOR_BRICK_SLAB = BLOCKS.register("gondor_brick_slab", () -> new AxialSlabBlock(GONDOR_BRICK));
		GONDOR_BRICK_STAIRS = BLOCKS.register("gondor_brick_stairs", () -> new LOTRStairsBlock(GONDOR_BRICK));
		GONDOR_BRICK_WALL = BLOCKS.register("gondor_brick_wall", () -> new LOTRWallBlock(GONDOR_BRICK));
		MORDOR_ROCK_SLAB = BLOCKS.register("mordor_rock_slab", () -> new AxialSlabBlock(MORDOR_ROCK));
		MORDOR_ROCK_STAIRS = BLOCKS.register("mordor_rock_stairs", () -> new LOTRStairsBlock(MORDOR_ROCK));
		MORDOR_ROCK_WALL = BLOCKS.register("mordor_rock_wall", () -> new LOTRWallBlock(MORDOR_ROCK));
		MORDOR_BRICK_SLAB = BLOCKS.register("mordor_brick_slab", () -> new AxialSlabBlock(MORDOR_BRICK));
		MORDOR_BRICK_STAIRS = BLOCKS.register("mordor_brick_stairs", () -> new LOTRStairsBlock(MORDOR_BRICK));
		MORDOR_BRICK_WALL = BLOCKS.register("mordor_brick_wall", () -> new LOTRWallBlock(MORDOR_BRICK));
		ROHAN_ROCK_SLAB = BLOCKS.register("rohan_rock_slab", () -> new AxialSlabBlock(ROHAN_ROCK));
		ROHAN_ROCK_STAIRS = BLOCKS.register("rohan_rock_stairs", () -> new LOTRStairsBlock(ROHAN_ROCK));
		ROHAN_ROCK_WALL = BLOCKS.register("rohan_rock_wall", () -> new LOTRWallBlock(ROHAN_ROCK));
		ROHAN_BRICK_SLAB = BLOCKS.register("rohan_brick_slab", () -> new AxialSlabBlock(ROHAN_BRICK));
		ROHAN_BRICK_STAIRS = BLOCKS.register("rohan_brick_stairs", () -> new LOTRStairsBlock(ROHAN_BRICK));
		ROHAN_BRICK_WALL = BLOCKS.register("rohan_brick_wall", () -> new LOTRWallBlock(ROHAN_BRICK));
		BLUE_ROCK_SLAB = BLOCKS.register("blue_rock_slab", () -> new AxialSlabBlock(BLUE_ROCK));
		BLUE_ROCK_STAIRS = BLOCKS.register("blue_rock_stairs", () -> new LOTRStairsBlock(BLUE_ROCK));
		BLUE_ROCK_WALL = BLOCKS.register("blue_rock_wall", () -> new LOTRWallBlock(BLUE_ROCK));
		BLUE_BRICK_SLAB = BLOCKS.register("blue_brick_slab", () -> new AxialSlabBlock(BLUE_BRICK));
		BLUE_BRICK_STAIRS = BLOCKS.register("blue_brick_stairs", () -> new LOTRStairsBlock(BLUE_BRICK));
		BLUE_BRICK_WALL = BLOCKS.register("blue_brick_wall", () -> new LOTRWallBlock(BLUE_BRICK));
		RED_ROCK_SLAB = BLOCKS.register("red_rock_slab", () -> new AxialSlabBlock(RED_ROCK));
		RED_ROCK_STAIRS = BLOCKS.register("red_rock_stairs", () -> new LOTRStairsBlock(RED_ROCK));
		RED_ROCK_WALL = BLOCKS.register("red_rock_wall", () -> new LOTRWallBlock(RED_ROCK));
		RED_BRICK_SLAB = BLOCKS.register("red_brick_slab", () -> new AxialSlabBlock(RED_BRICK));
		RED_BRICK_STAIRS = BLOCKS.register("red_brick_stairs", () -> new LOTRStairsBlock(RED_BRICK));
		RED_BRICK_WALL = BLOCKS.register("red_brick_wall", () -> new LOTRWallBlock(RED_BRICK));
		DWARVEN_BRICK_SLAB = BLOCKS.register("dwarven_brick_slab", () -> new AxialSlabBlock(DWARVEN_BRICK));
		DWARVEN_BRICK_STAIRS = BLOCKS.register("dwarven_brick_stairs", () -> new LOTRStairsBlock(DWARVEN_BRICK));
		DWARVEN_BRICK_WALL = BLOCKS.register("dwarven_brick_wall", () -> new LOTRWallBlock(DWARVEN_BRICK));
		HIGH_ELVEN_BRICK_SLAB = BLOCKS.register("high_elven_brick_slab", () -> new AxialSlabBlock(HIGH_ELVEN_BRICK));
		HIGH_ELVEN_BRICK_STAIRS = BLOCKS.register("high_elven_brick_stairs", () -> new LOTRStairsBlock(HIGH_ELVEN_BRICK));
		HIGH_ELVEN_BRICK_WALL = BLOCKS.register("high_elven_brick_wall", () -> new LOTRWallBlock(HIGH_ELVEN_BRICK));
		GALADHRIM_BRICK_SLAB = BLOCKS.register("galadhrim_brick_slab", () -> new AxialSlabBlock(GALADHRIM_BRICK));
		GALADHRIM_BRICK_STAIRS = BLOCKS.register("galadhrim_brick_stairs", () -> new LOTRStairsBlock(GALADHRIM_BRICK));
		GALADHRIM_BRICK_WALL = BLOCKS.register("galadhrim_brick_wall", () -> new LOTRWallBlock(GALADHRIM_BRICK));
		WOOD_ELVEN_BRICK_SLAB = BLOCKS.register("wood_elven_brick_slab", () -> new AxialSlabBlock(WOOD_ELVEN_BRICK));
		WOOD_ELVEN_BRICK_STAIRS = BLOCKS.register("wood_elven_brick_stairs", () -> new LOTRStairsBlock(WOOD_ELVEN_BRICK));
		WOOD_ELVEN_BRICK_WALL = BLOCKS.register("wood_elven_brick_wall", () -> new LOTRWallBlock(WOOD_ELVEN_BRICK));
		HARAD_BRICK_SLAB = BLOCKS.register("harad_brick_slab", () -> new AxialSlabBlock(HARAD_BRICK));
		HARAD_BRICK_STAIRS = BLOCKS.register("harad_brick_stairs", () -> new LOTRStairsBlock(HARAD_BRICK));
		HARAD_BRICK_WALL = BLOCKS.register("harad_brick_wall", () -> new LOTRWallBlock(HARAD_BRICK));
		RED_HARAD_BRICK_SLAB = BLOCKS.register("red_harad_brick_slab", () -> new AxialSlabBlock(RED_HARAD_BRICK));
		RED_HARAD_BRICK_STAIRS = BLOCKS.register("red_harad_brick_stairs", () -> new LOTRStairsBlock(RED_HARAD_BRICK));
		RED_HARAD_BRICK_WALL = BLOCKS.register("red_harad_brick_wall", () -> new LOTRWallBlock(RED_HARAD_BRICK));
		DWARVEN_STEEL_BLOCK = BLOCKS.register("dwarven_steel_block", () -> new MineralBlock(Properties.of(Material.METAL, MaterialColor.COLOR_GRAY).strength(5.0F, 6.0F).sound(SoundType.METAL), 1));
		ELVEN_STEEL_BLOCK = BLOCKS.register("elven_steel_block", () -> new MineralBlock(Properties.of(Material.METAL, MaterialColor.METAL).strength(5.0F, 6.0F).sound(SoundType.METAL), 1));
		MIRK_OAK_LOG = BLOCKS.register("mirk_oak_log", () -> new StrippableLogBlock(MaterialColor.COLOR_BROWN, MaterialColor.COLOR_BROWN, () -> STRIPPED_MIRK_OAK_LOG.get()));
		MIRK_OAK_WOOD = BLOCKS.register("mirk_oak_wood", () -> new StrippableWoodBlock(MIRK_OAK_LOG, () -> STRIPPED_MIRK_OAK_WOOD.get()));
		MIRK_OAK_PLANKS = BLOCKS.register("mirk_oak_planks", () -> new LOTRPlanksBlock(MaterialColor.COLOR_BROWN));
		MIRK_OAK_LEAVES = BLOCKS.register("mirk_oak_leaves", () -> new MirkOakLeavesBlock().setFallingParticle(LOTRParticles.MIRK_OAK_LEAF, 250));
		MIRK_OAK_SAPLING = BLOCKS.register("mirk_oak_sapling", () -> new LOTRSaplingBlock(new MirkOakTree()));
		POTTED_MIRK_OAK_SAPLING = BLOCKS.register("potted_mirk_oak_sapling", () -> new LOTRPottedPlantBlock(MIRK_OAK_SAPLING));
		MIRK_OAK_SLAB = BLOCKS.register("mirk_oak_slab", () -> new AxialSlabBlock(MIRK_OAK_PLANKS));
		MIRK_OAK_STAIRS = BLOCKS.register("mirk_oak_stairs", () -> new LOTRStairsBlock(MIRK_OAK_PLANKS));
		MIRK_OAK_FENCE = BLOCKS.register("mirk_oak_fence", () -> new LOTRFenceBlock(MIRK_OAK_PLANKS));
		MIRK_OAK_FENCE_GATE = BLOCKS.register("mirk_oak_fence_gate", () -> new LOTRFenceGateBlock(MIRK_OAK_PLANKS));
		MIRK_OAK_DOOR = BLOCKS.register("mirk_oak_door", () -> new LOTRDoorBlock(MIRK_OAK_PLANKS));
		MIRK_OAK_TRAPDOOR = BLOCKS.register("mirk_oak_trapdoor", () -> new LOTRTrapdoorBlock(MIRK_OAK_PLANKS));
		MIRK_OAK_PRESSURE_PLATE = BLOCKS.register("mirk_oak_pressure_plate", () -> new LOTRWoodPressurePlateBlock(MIRK_OAK_PLANKS));
		MIRK_OAK_BUTTON = BLOCKS.register("mirk_oak_button", LOTRWoodButtonBlock::new);
		STRIPPED_MIRK_OAK_LOG = BLOCKS.register("stripped_mirk_oak_log", () -> new LOTRStrippedLogBlock(MIRK_OAK_LOG));
		STRIPPED_MIRK_OAK_WOOD = BLOCKS.register("stripped_mirk_oak_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_MIRK_OAK_LOG));
		MIRK_OAK_BEAM = BLOCKS.register("mirk_oak_beam", () -> new WoodBeamBlock(MIRK_OAK_LOG));
		MIRK_OAK_SIGN = BLOCKS.register("mirk_oak_sign", () -> new LOTRStandingSignBlock(MIRK_OAK_PLANKS, LOTRSignTypes.MIRK_OAK));
		MIRK_OAK_WALL_SIGN = BLOCKS.register("mirk_oak_wall_sign", () -> new LOTRWallSignBlock(MIRK_OAK_SIGN));
		CHARRED_LOG = BLOCKS.register("charred_log", () -> new StrippableLogBlock(MaterialColor.COLOR_GRAY, MaterialColor.COLOR_BLACK, () -> STRIPPED_CHARRED_LOG.get()));
		CHARRED_WOOD = BLOCKS.register("charred_wood", () -> new StrippableWoodBlock(CHARRED_LOG, () -> STRIPPED_CHARRED_WOOD.get()));
		CHARRED_PLANKS = BLOCKS.register("charred_planks", () -> new LOTRPlanksBlock(MaterialColor.COLOR_BLACK));
		CHARRED_SLAB = BLOCKS.register("charred_slab", () -> new AxialSlabBlock(CHARRED_PLANKS));
		CHARRED_STAIRS = BLOCKS.register("charred_stairs", () -> new LOTRStairsBlock(CHARRED_PLANKS));
		CHARRED_FENCE = BLOCKS.register("charred_fence", () -> new LOTRFenceBlock(CHARRED_PLANKS));
		CHARRED_FENCE_GATE = BLOCKS.register("charred_fence_gate", () -> new LOTRFenceGateBlock(CHARRED_PLANKS));
		CHARRED_DOOR = BLOCKS.register("charred_door", () -> new LOTRDoorBlock(CHARRED_PLANKS));
		CHARRED_TRAPDOOR = BLOCKS.register("charred_trapdoor", () -> new LOTRTrapdoorBlock(CHARRED_PLANKS));
		CHARRED_PRESSURE_PLATE = BLOCKS.register("charred_pressure_plate", () -> new LOTRWoodPressurePlateBlock(CHARRED_PLANKS));
		CHARRED_BUTTON = BLOCKS.register("charred_button", LOTRWoodButtonBlock::new);
		STRIPPED_CHARRED_LOG = BLOCKS.register("stripped_charred_log", () -> new LOTRStrippedLogBlock(CHARRED_LOG));
		STRIPPED_CHARRED_WOOD = BLOCKS.register("stripped_charred_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_CHARRED_LOG));
		CHARRED_BEAM = BLOCKS.register("charred_beam", () -> new WoodBeamBlock(CHARRED_LOG));
		CHARRED_SIGN = BLOCKS.register("charred_sign", () -> new LOTRStandingSignBlock(CHARRED_PLANKS, LOTRSignTypes.CHARRED));
		CHARRED_WALL_SIGN = BLOCKS.register("charred_wall_sign", () -> new LOTRWallSignBlock(CHARRED_SIGN));
		APPLE_LOG = BLOCKS.register("apple_log", () -> new StrippableLogBlock(MaterialColor.WOOD, MaterialColor.PODZOL, () -> STRIPPED_APPLE_LOG.get()));
		APPLE_WOOD = BLOCKS.register("apple_wood", () -> new StrippableWoodBlock(APPLE_LOG, () -> STRIPPED_APPLE_WOOD.get()));
		APPLE_PLANKS = BLOCKS.register("apple_planks", () -> new LOTRPlanksBlock(MaterialColor.WOOD));
		APPLE_LEAVES = BLOCKS.register("apple_leaves", LOTRLeavesBlock::new);
		APPLE_LEAVES_RED = BLOCKS.register("apple_leaves_red", LOTRLeavesBlock::new);
		APPLE_LEAVES_GREEN = BLOCKS.register("apple_leaves_green", LOTRLeavesBlock::new);
		APPLE_SAPLING = BLOCKS.register("apple_sapling", () -> new LOTRSaplingBlock(new AppleTree()));
		POTTED_APPLE_SAPLING = BLOCKS.register("potted_apple_sapling", () -> new LOTRPottedPlantBlock(APPLE_SAPLING));
		APPLE_SLAB = BLOCKS.register("apple_slab", () -> new AxialSlabBlock(APPLE_PLANKS));
		APPLE_STAIRS = BLOCKS.register("apple_stairs", () -> new LOTRStairsBlock(APPLE_PLANKS));
		APPLE_FENCE = BLOCKS.register("apple_fence", () -> new LOTRFenceBlock(APPLE_PLANKS));
		APPLE_FENCE_GATE = BLOCKS.register("apple_fence_gate", () -> new LOTRFenceGateBlock(APPLE_PLANKS));
		APPLE_DOOR = BLOCKS.register("apple_door", () -> new LOTRDoorBlock(APPLE_PLANKS));
		APPLE_TRAPDOOR = BLOCKS.register("apple_trapdoor", () -> new LOTRTrapdoorBlock(APPLE_PLANKS));
		APPLE_PRESSURE_PLATE = BLOCKS.register("apple_pressure_plate", () -> new LOTRWoodPressurePlateBlock(APPLE_PLANKS));
		APPLE_BUTTON = BLOCKS.register("apple_button", LOTRWoodButtonBlock::new);
		STRIPPED_APPLE_LOG = BLOCKS.register("stripped_apple_log", () -> new LOTRStrippedLogBlock(APPLE_LOG));
		STRIPPED_APPLE_WOOD = BLOCKS.register("stripped_apple_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_APPLE_LOG));
		APPLE_BEAM = BLOCKS.register("apple_beam", () -> new WoodBeamBlock(APPLE_LOG));
		APPLE_SIGN = BLOCKS.register("apple_sign", () -> new LOTRStandingSignBlock(APPLE_PLANKS, LOTRSignTypes.APPLE));
		APPLE_WALL_SIGN = BLOCKS.register("apple_wall_sign", () -> new LOTRWallSignBlock(APPLE_SIGN));
		PEAR_LOG = BLOCKS.register("pear_log", () -> new StrippableLogBlock(MaterialColor.WOOD, MaterialColor.PODZOL, () -> STRIPPED_PEAR_LOG.get()));
		PEAR_WOOD = BLOCKS.register("pear_wood", () -> new StrippableWoodBlock(PEAR_LOG, () -> STRIPPED_PEAR_WOOD.get()));
		PEAR_PLANKS = BLOCKS.register("pear_planks", () -> new LOTRPlanksBlock(MaterialColor.WOOD));
		PEAR_LEAVES = BLOCKS.register("pear_leaves", LOTRLeavesBlock::new);
		PEAR_LEAVES_FRUIT = BLOCKS.register("pear_leaves_fruit", LOTRLeavesBlock::new);
		PEAR_SAPLING = BLOCKS.register("pear_sapling", () -> new LOTRSaplingBlock(new PearTree()));
		POTTED_PEAR_SAPLING = BLOCKS.register("potted_pear_sapling", () -> new LOTRPottedPlantBlock(PEAR_SAPLING));
		PEAR_SLAB = BLOCKS.register("pear_slab", () -> new AxialSlabBlock(PEAR_PLANKS));
		PEAR_STAIRS = BLOCKS.register("pear_stairs", () -> new LOTRStairsBlock(PEAR_PLANKS));
		PEAR_FENCE = BLOCKS.register("pear_fence", () -> new LOTRFenceBlock(PEAR_PLANKS));
		PEAR_FENCE_GATE = BLOCKS.register("pear_fence_gate", () -> new LOTRFenceGateBlock(PEAR_PLANKS));
		PEAR_DOOR = BLOCKS.register("pear_door", () -> new LOTRDoorBlock(PEAR_PLANKS));
		PEAR_TRAPDOOR = BLOCKS.register("pear_trapdoor", () -> new LOTRTrapdoorBlock(PEAR_PLANKS));
		PEAR_PRESSURE_PLATE = BLOCKS.register("pear_pressure_plate", () -> new LOTRWoodPressurePlateBlock(PEAR_PLANKS));
		PEAR_BUTTON = BLOCKS.register("pear_button", LOTRWoodButtonBlock::new);
		STRIPPED_PEAR_LOG = BLOCKS.register("stripped_pear_log", () -> new LOTRStrippedLogBlock(PEAR_LOG));
		STRIPPED_PEAR_WOOD = BLOCKS.register("stripped_pear_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_PEAR_LOG));
		PEAR_BEAM = BLOCKS.register("pear_beam", () -> new WoodBeamBlock(PEAR_LOG));
		PEAR_SIGN = BLOCKS.register("pear_sign", () -> new LOTRStandingSignBlock(PEAR_PLANKS, LOTRSignTypes.PEAR));
		PEAR_WALL_SIGN = BLOCKS.register("pear_wall_sign", () -> new LOTRWallSignBlock(PEAR_SIGN));
		CHERRY_LOG = BLOCKS.register("cherry_log", () -> new StrippableLogBlock(MaterialColor.TERRACOTTA_RED, MaterialColor.TERRACOTTA_RED, () -> STRIPPED_CHERRY_LOG.get()));
		CHERRY_WOOD = BLOCKS.register("cherry_wood", () -> new StrippableWoodBlock(CHERRY_LOG, () -> STRIPPED_CHERRY_WOOD.get()));
		CHERRY_PLANKS = BLOCKS.register("cherry_planks", () -> new LOTRPlanksBlock(MaterialColor.TERRACOTTA_RED));
		CHERRY_LEAVES = BLOCKS.register("cherry_leaves", () -> new LOTRLeavesBlock(MaterialColor.COLOR_PINK));
		CHERRY_LEAVES_FRUIT = BLOCKS.register("cherry_leaves_fruit", () -> new LOTRLeavesBlock(MaterialColor.COLOR_PINK));
		CHERRY_SAPLING = BLOCKS.register("cherry_sapling", () -> new LOTRSaplingBlock(new CherryTree()));
		POTTED_CHERRY_SAPLING = BLOCKS.register("potted_cherry_sapling", () -> new LOTRPottedPlantBlock(CHERRY_SAPLING));
		CHERRY_SLAB = BLOCKS.register("cherry_slab", () -> new AxialSlabBlock(CHERRY_PLANKS));
		CHERRY_STAIRS = BLOCKS.register("cherry_stairs", () -> new LOTRStairsBlock(CHERRY_PLANKS));
		CHERRY_FENCE = BLOCKS.register("cherry_fence", () -> new LOTRFenceBlock(CHERRY_PLANKS));
		CHERRY_FENCE_GATE = BLOCKS.register("cherry_fence_gate", () -> new LOTRFenceGateBlock(CHERRY_PLANKS));
		CHERRY_DOOR = BLOCKS.register("cherry_door", () -> new LOTRDoorBlock(CHERRY_PLANKS));
		CHERRY_TRAPDOOR = BLOCKS.register("cherry_trapdoor", () -> new LOTRTrapdoorBlock(CHERRY_PLANKS));
		CHERRY_PRESSURE_PLATE = BLOCKS.register("cherry_pressure_plate", () -> new LOTRWoodPressurePlateBlock(CHERRY_PLANKS));
		CHERRY_BUTTON = BLOCKS.register("cherry_button", LOTRWoodButtonBlock::new);
		STRIPPED_CHERRY_LOG = BLOCKS.register("stripped_cherry_log", () -> new LOTRStrippedLogBlock(CHERRY_LOG));
		STRIPPED_CHERRY_WOOD = BLOCKS.register("stripped_cherry_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_CHERRY_LOG));
		CHERRY_BEAM = BLOCKS.register("cherry_beam", () -> new WoodBeamBlock(CHERRY_LOG));
		CHERRY_SIGN = BLOCKS.register("cherry_sign", () -> new LOTRStandingSignBlock(CHERRY_PLANKS, LOTRSignTypes.CHERRY));
		CHERRY_WALL_SIGN = BLOCKS.register("cherry_wall_sign", () -> new LOTRWallSignBlock(CHERRY_SIGN));
		LEBETHRON_LOG = BLOCKS.register("lebethron_log", () -> new StrippableLogBlock(MaterialColor.COLOR_BROWN, MaterialColor.COLOR_BROWN, () -> STRIPPED_LEBETHRON_LOG.get()));
		LEBETHRON_WOOD = BLOCKS.register("lebethron_wood", () -> new StrippableWoodBlock(LEBETHRON_LOG, () -> STRIPPED_LEBETHRON_WOOD.get()));
		LEBETHRON_PLANKS = BLOCKS.register("lebethron_planks", () -> new LOTRPlanksBlock(MaterialColor.COLOR_BROWN));
		LEBETHRON_LEAVES = BLOCKS.register("lebethron_leaves", LOTRLeavesBlock::new);
		LEBETHRON_SAPLING = BLOCKS.register("lebethron_sapling", () -> new LOTRSaplingBlock(new LebethronTree()));
		POTTED_LEBETHRON_SAPLING = BLOCKS.register("potted_lebethron_sapling", () -> new LOTRPottedPlantBlock(LEBETHRON_SAPLING));
		LEBETHRON_SLAB = BLOCKS.register("lebethron_slab", () -> new AxialSlabBlock(LEBETHRON_PLANKS));
		LEBETHRON_STAIRS = BLOCKS.register("lebethron_stairs", () -> new LOTRStairsBlock(LEBETHRON_PLANKS));
		LEBETHRON_FENCE = BLOCKS.register("lebethron_fence", () -> new LOTRFenceBlock(LEBETHRON_PLANKS));
		LEBETHRON_FENCE_GATE = BLOCKS.register("lebethron_fence_gate", () -> new LOTRFenceGateBlock(LEBETHRON_PLANKS));
		LEBETHRON_DOOR = BLOCKS.register("lebethron_door", () -> new LOTRDoorBlock(LEBETHRON_PLANKS));
		LEBETHRON_TRAPDOOR = BLOCKS.register("lebethron_trapdoor", () -> new LOTRTrapdoorBlock(LEBETHRON_PLANKS));
		LEBETHRON_PRESSURE_PLATE = BLOCKS.register("lebethron_pressure_plate", () -> new LOTRWoodPressurePlateBlock(LEBETHRON_PLANKS));
		LEBETHRON_BUTTON = BLOCKS.register("lebethron_button", LOTRWoodButtonBlock::new);
		STRIPPED_LEBETHRON_LOG = BLOCKS.register("stripped_lebethron_log", () -> new LOTRStrippedLogBlock(LEBETHRON_LOG));
		STRIPPED_LEBETHRON_WOOD = BLOCKS.register("stripped_lebethron_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_LEBETHRON_LOG));
		LEBETHRON_BEAM = BLOCKS.register("lebethron_beam", () -> new WoodBeamBlock(LEBETHRON_LOG));
		LEBETHRON_SIGN = BLOCKS.register("lebethron_sign", () -> new LOTRStandingSignBlock(LEBETHRON_PLANKS, LOTRSignTypes.LEBETHRON));
		LEBETHRON_WALL_SIGN = BLOCKS.register("lebethron_wall_sign", () -> new LOTRWallSignBlock(LEBETHRON_SIGN));
		BEECH_LOG = BLOCKS.register("beech_log", () -> new StrippableLogBlock(MaterialColor.WOOD, MaterialColor.PODZOL, () -> STRIPPED_BEECH_LOG.get()));
		BEECH_WOOD = BLOCKS.register("beech_wood", () -> new StrippableWoodBlock(BEECH_LOG, () -> STRIPPED_BEECH_WOOD.get()));
		BEECH_PLANKS = BLOCKS.register("beech_planks", () -> new LOTRPlanksBlock(MaterialColor.WOOD));
		BEECH_LEAVES = BLOCKS.register("beech_leaves", () -> new LOTRLeavesBlock(MaterialColor.COLOR_ORANGE));
		BEECH_SAPLING = BLOCKS.register("beech_sapling", () -> new LOTRSaplingBlock(new BeechTree()));
		POTTED_BEECH_SAPLING = BLOCKS.register("potted_beech_sapling", () -> new LOTRPottedPlantBlock(BEECH_SAPLING));
		BEECH_SLAB = BLOCKS.register("beech_slab", () -> new AxialSlabBlock(BEECH_PLANKS));
		BEECH_STAIRS = BLOCKS.register("beech_stairs", () -> new LOTRStairsBlock(BEECH_PLANKS));
		BEECH_FENCE = BLOCKS.register("beech_fence", () -> new LOTRFenceBlock(BEECH_PLANKS));
		BEECH_FENCE_GATE = BLOCKS.register("beech_fence_gate", () -> new LOTRFenceGateBlock(BEECH_PLANKS));
		BEECH_DOOR = BLOCKS.register("beech_door", () -> new LOTRDoorBlock(BEECH_PLANKS));
		BEECH_TRAPDOOR = BLOCKS.register("beech_trapdoor", () -> new LOTRTrapdoorBlock(BEECH_PLANKS));
		BEECH_PRESSURE_PLATE = BLOCKS.register("beech_pressure_plate", () -> new LOTRWoodPressurePlateBlock(BEECH_PLANKS));
		BEECH_BUTTON = BLOCKS.register("beech_button", LOTRWoodButtonBlock::new);
		STRIPPED_BEECH_LOG = BLOCKS.register("stripped_beech_log", () -> new LOTRStrippedLogBlock(BEECH_LOG));
		STRIPPED_BEECH_WOOD = BLOCKS.register("stripped_beech_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_BEECH_LOG));
		BEECH_BEAM = BLOCKS.register("beech_beam", () -> new WoodBeamBlock(BEECH_LOG));
		BEECH_SIGN = BLOCKS.register("beech_sign", () -> new LOTRStandingSignBlock(BEECH_PLANKS, LOTRSignTypes.BEECH));
		BEECH_WALL_SIGN = BLOCKS.register("beech_wall_sign", () -> new LOTRWallSignBlock(BEECH_SIGN));
		CHERRY_PIE = BLOCKS.register("cherry_pie", CakelikeBlock::new);
		HEARTH_BLOCK = BLOCKS.register("hearth_block", HearthBlock::new);
		MALLORN_LADDER = BLOCKS.register("mallorn_ladder", LOTRLadderBlock::new);
		ELANOR = BLOCKS.register("elanor", () -> new LOTRFlowerBlock(Effects.FIRE_RESISTANCE, 6));
		NIPHREDIL = BLOCKS.register("niphredil", () -> new LOTRFlowerBlock(Effects.REGENERATION, 9));
		POTTED_ELANOR = BLOCKS.register("potted_elanor", () -> new LOTRPottedPlantBlock(ELANOR));
		POTTED_NIPHREDIL = BLOCKS.register("potted_niphredil", () -> new LOTRPottedPlantBlock(NIPHREDIL));
		BLUEBELL = BLOCKS.register("bluebell", () -> new LOTRFlowerBlock(Effects.DAMAGE_BOOST, 5));
		MARIGOLD = BLOCKS.register("marigold", () -> new LOTRFlowerBlock(Effects.WEAKNESS, 9));
		ASPHODEL = BLOCKS.register("asphodel", () -> new LOTRFlowerBlock(Effects.BLINDNESS, 8));
		LAVENDER = BLOCKS.register("lavender", () -> new LOTRFlowerBlock(Effects.SATURATION, 7).setWide());
		POTTED_BLUEBELL = BLOCKS.register("potted_bluebell", () -> new LOTRPottedPlantBlock(BLUEBELL));
		POTTED_MARIGOLD = BLOCKS.register("potted_marigold", () -> new LOTRPottedPlantBlock(MARIGOLD));
		POTTED_ASPHODEL = BLOCKS.register("potted_asphodel", () -> new LOTRPottedPlantBlock(ASPHODEL));
		POTTED_LAVENDER = BLOCKS.register("potted_lavender", () -> new LOTRPottedPlantBlock(LAVENDER));
		MORDOR_GRAVEL = BLOCKS.register("mordor_gravel", () -> new MordorGravelBlock(MaterialColor.COLOR_GRAY, 4737096));
		MORDOR_DIRT = BLOCKS.register("mordor_dirt", () -> new MordorDirtBlock(MaterialColor.TERRACOTTA_BROWN));
		MORDOR_MOSS = BLOCKS.register("mordor_moss", MordorMossBlock::new);
		MORDOR_GRASS = BLOCKS.register("mordor_grass", MordorGrassBlock::new);
		MORDOR_THORN = BLOCKS.register("mordor_thorn", MordorThornBlock::new);
		POTTED_MORDOR_THORN = BLOCKS.register("potted_mordor_thorn", () -> new LOTRPottedPlantBlock(MORDOR_THORN));
		DWARVEN_PILLAR = BLOCKS.register("dwarven_pillar", () -> new LOTRPillarBlock(MaterialColor.STONE));
		DWARVEN_PILLAR_SLAB = BLOCKS.register("dwarven_pillar_slab", () -> new AxialSlabBlock(DWARVEN_PILLAR));
		STONE_PILLAR = BLOCKS.register("stone_pillar", () -> new LOTRPillarBlock(MaterialColor.STONE));
		STONE_PILLAR_SLAB = BLOCKS.register("stone_pillar_slab", () -> new AxialSlabBlock(STONE_PILLAR));
		GONDOR_PILLAR = BLOCKS.register("gondor_pillar", () -> new LOTRPillarBlock(MaterialColor.WOOL));
		GONDOR_PILLAR_SLAB = BLOCKS.register("gondor_pillar_slab", () -> new AxialSlabBlock(GONDOR_PILLAR));
		GLOWSTONE_ORE = BLOCKS.register("glowstone_ore", () -> new LOTROreBlock(Properties.of(Material.STONE).strength(3.0F, 3.0F).lightLevel(constantLight(12))).setOreLevel(1));
		GLOWING_DWARVEN_BRICK = BLOCKS.register("glowing_dwarven_brick", () -> new LOTRStoneBlock(MaterialColor.SAND, 12));
		MORDOR_PILLAR = BLOCKS.register("mordor_pillar", () -> new LOTRPillarBlock(MaterialColor.COLOR_BLACK));
		MORDOR_PILLAR_SLAB = BLOCKS.register("mordor_pillar_slab", () -> new AxialSlabBlock(MORDOR_PILLAR));
		ROHAN_PILLAR = BLOCKS.register("rohan_pillar", () -> new LOTRPillarBlock(MaterialColor.DIRT));
		ROHAN_PILLAR_SLAB = BLOCKS.register("rohan_pillar_slab", () -> new AxialSlabBlock(ROHAN_PILLAR));
		BLUE_PILLAR = BLOCKS.register("blue_pillar", () -> new LOTRPillarBlock(MaterialColor.COLOR_LIGHT_BLUE));
		BLUE_PILLAR_SLAB = BLOCKS.register("blue_pillar_slab", () -> new AxialSlabBlock(BLUE_PILLAR));
		RED_PILLAR = BLOCKS.register("red_pillar", () -> new LOTRPillarBlock(MaterialColor.TERRACOTTA_ORANGE));
		RED_PILLAR_SLAB = BLOCKS.register("red_pillar_slab", () -> new AxialSlabBlock(RED_PILLAR));
		HIGH_ELVEN_PILLAR = BLOCKS.register("high_elven_pillar", () -> new LOTRPillarBlock(MaterialColor.METAL));
		HIGH_ELVEN_PILLAR_SLAB = BLOCKS.register("high_elven_pillar_slab", () -> new AxialSlabBlock(HIGH_ELVEN_PILLAR));
		GALADHRIM_PILLAR = BLOCKS.register("galadhrim_pillar", () -> new LOTRPillarBlock(MaterialColor.METAL));
		GALADHRIM_PILLAR_SLAB = BLOCKS.register("galadhrim_pillar_slab", () -> new AxialSlabBlock(GALADHRIM_PILLAR));
		WOOD_ELVEN_PILLAR = BLOCKS.register("wood_elven_pillar", () -> new LOTRPillarBlock(MaterialColor.TERRACOTTA_WHITE));
		WOOD_ELVEN_PILLAR_SLAB = BLOCKS.register("wood_elven_pillar_slab", () -> new AxialSlabBlock(WOOD_ELVEN_PILLAR));
		HARAD_PILLAR = BLOCKS.register("harad_pillar", () -> new LOTRPillarBlock(MaterialColor.SAND));
		HARAD_PILLAR_SLAB = BLOCKS.register("harad_pillar_slab", () -> new AxialSlabBlock(HARAD_PILLAR));
		RED_HARAD_PILLAR = BLOCKS.register("red_harad_pillar", () -> new LOTRPillarBlock(MaterialColor.TERRACOTTA_ORANGE));
		RED_HARAD_PILLAR_SLAB = BLOCKS.register("red_harad_pillar_slab", () -> new AxialSlabBlock(RED_HARAD_PILLAR));
		UMBAR_BRICK = BLOCKS.register("umbar_brick", () -> new LOTRStoneBlock(MaterialColor.SAND));
		UMBAR_BRICK_SLAB = BLOCKS.register("umbar_brick_slab", () -> new AxialSlabBlock(UMBAR_BRICK));
		UMBAR_BRICK_STAIRS = BLOCKS.register("umbar_brick_stairs", () -> new LOTRStairsBlock(UMBAR_BRICK));
		UMBAR_BRICK_WALL = BLOCKS.register("umbar_brick_wall", () -> new LOTRWallBlock(UMBAR_BRICK));
		UMBAR_CRAFTING_TABLE = BLOCKS.register("umbar_crafting_table", () -> new FactionCraftingTableBlock.Umbar(UMBAR_BRICK));
		UMBAR_PILLAR = BLOCKS.register("umbar_pillar", () -> new LOTRPillarBlock(MaterialColor.SAND));
		UMBAR_PILLAR_SLAB = BLOCKS.register("umbar_pillar_slab", () -> new AxialSlabBlock(UMBAR_PILLAR));
		DRIPSTONE = BLOCKS.register("dripstone", () -> new DripstoneBlock(Blocks.STONE));
		MORDOR_DRIPSTONE = BLOCKS.register("mordor_dripstone", () -> new DripstoneBlock(MORDOR_ROCK, ParticleTypes.DRIPPING_LAVA));
		OBSIDIAN_DRIPSTONE = BLOCKS.register("obsidian_dripstone", () -> new DripstoneBlock(Blocks.OBSIDIAN, ParticleTypes.DRIPPING_LAVA));
		ICE_DRIPSTONE = BLOCKS.register("ice_dripstone", () -> new DripstoneBlock(Blocks.PACKED_ICE, false));
		GONDOR_DRIPSTONE = BLOCKS.register("gondor_dripstone", () -> new DripstoneBlock(GONDOR_ROCK));
		ROHAN_DRIPSTONE = BLOCKS.register("rohan_dripstone", () -> new DripstoneBlock(ROHAN_ROCK));
		BLUE_DRIPSTONE = BLOCKS.register("blue_dripstone", () -> new DripstoneBlock(BLUE_ROCK));
		RED_DRIPSTONE = BLOCKS.register("red_dripstone", () -> new DripstoneBlock(RED_ROCK));
		ANDESITE_DRIPSTONE = BLOCKS.register("andesite_dripstone", () -> new DripstoneBlock(Blocks.ANDESITE));
		DIORITE_DRIPSTONE = BLOCKS.register("diorite_dripstone", () -> new DripstoneBlock(Blocks.DIORITE));
		GRANITE_DRIPSTONE = BLOCKS.register("granite_dripstone", () -> new DripstoneBlock(Blocks.GRANITE));
		OAK_BEAM = BLOCKS.register("oak_beam", () -> new WoodBeamBlock(MaterialColor.WOOD, MaterialColor.PODZOL));
		SPRUCE_BEAM = BLOCKS.register("spruce_beam", () -> new WoodBeamBlock(MaterialColor.PODZOL, MaterialColor.COLOR_BROWN));
		BIRCH_BEAM = BLOCKS.register("birch_beam", () -> new WoodBeamBlock(MaterialColor.SAND, MaterialColor.QUARTZ));
		JUNGLE_BEAM = BLOCKS.register("jungle_beam", () -> new WoodBeamBlock(MaterialColor.DIRT, MaterialColor.PODZOL));
		ACACIA_BEAM = BLOCKS.register("acacia_beam", () -> new WoodBeamBlock(MaterialColor.COLOR_ORANGE, MaterialColor.STONE));
		DARK_OAK_BEAM = BLOCKS.register("dark_oak_beam", () -> new WoodBeamBlock(MaterialColor.COLOR_BROWN, MaterialColor.COLOR_BROWN));
		ORC_TORCH = BLOCKS.register("orc_torch", () -> new DoubleTorchBlock(14));
		ORC_BARS = BLOCKS.register("orc_bars", LOTRBarsBlock::new);
		DWARVEN_BARS = BLOCKS.register("dwarven_bars", LOTRBarsBlock::new);
		BRONZE_BARS = BLOCKS.register("bronze_bars", LOTRBarsBlock::new);
		SILVER_BARS = BLOCKS.register("silver_bars", LOTRBarsBlock::new);
		GOLD_BARS = BLOCKS.register("gold_bars", LOTRBarsBlock::new);
		MITHRIL_BARS = BLOCKS.register("mithril_bars", LOTRBarsBlock::new);
		HIGH_ELVEN_BARS = BLOCKS.register("high_elven_bars", LOTRBarsBlock::new);
		GALADHRIM_BARS = BLOCKS.register("galadhrim_bars", LOTRBarsBlock::new);
		WOOD_ELVEN_BARS = BLOCKS.register("wood_elven_bars", LOTRBarsBlock::new);
		HIGH_ELVEN_WOOD_BARS = BLOCKS.register("high_elven_wood_bars", LOTRWoodBarsBlock::new);
		GALADHRIM_WOOD_BARS = BLOCKS.register("galadhrim_wood_bars", LOTRWoodBarsBlock::new);
		WOOD_ELVEN_WOOD_BARS = BLOCKS.register("wood_elven_wood_bars", LOTRWoodBarsBlock::new);
		CRACKED_STONE_BRICK_SLAB = BLOCKS.register("cracked_stone_brick_slab", () -> new AxialSlabBlock(Blocks.CRACKED_STONE_BRICKS));
		CRACKED_STONE_BRICK_STAIRS = BLOCKS.register("cracked_stone_brick_stairs", () -> new LOTRStairsBlock(Blocks.CRACKED_STONE_BRICKS));
		CRACKED_STONE_BRICK_WALL = BLOCKS.register("cracked_stone_brick_wall", () -> new LOTRWallBlock(Blocks.CRACKED_STONE_BRICKS));
		CLOVER = BLOCKS.register("clover", ThreeLeafCloverBlock::new);
		FOUR_LEAF_CLOVER = BLOCKS.register("four_leaf_clover", FourLeafCloverBlock::new);
		POTTED_CLOVER = BLOCKS.register("potted_clover", () -> new LOTRPottedPlantBlock(CLOVER));
		POTTED_FOUR_LEAF_CLOVER = BLOCKS.register("potted_four_leaf_clover", () -> new LOTRPottedPlantBlock(FOUR_LEAF_CLOVER));
		SHORT_GRASS = BLOCKS.register("short_grass", LOTRGrassBlock::new);
		WHEATGRASS = BLOCKS.register("wheatgrass", () -> new DoubleableLOTRGrassBlock(() -> TALL_WHEATGRASS.get()));
		FLOWERY_GRASS = BLOCKS.register("flowery_grass", LOTRGrassBlock::new);
		MAPLE_LOG = BLOCKS.register("maple_log", () -> new StrippableLogBlock(MaterialColor.WOOD, MaterialColor.PODZOL, () -> STRIPPED_MAPLE_LOG.get()));
		MAPLE_WOOD = BLOCKS.register("maple_wood", () -> new StrippableWoodBlock(MAPLE_LOG, () -> STRIPPED_MAPLE_WOOD.get()));
		MAPLE_PLANKS = BLOCKS.register("maple_planks", () -> new LOTRPlanksBlock(MaterialColor.WOOD));
		MAPLE_LEAVES = BLOCKS.register("maple_leaves", () -> new LOTRLeavesBlock(MaterialColor.TERRACOTTA_RED));
		MAPLE_SAPLING = BLOCKS.register("maple_sapling", () -> new LOTRSaplingBlock(new MapleTree()));
		POTTED_MAPLE_SAPLING = BLOCKS.register("potted_maple_sapling", () -> new LOTRPottedPlantBlock(MAPLE_SAPLING));
		MAPLE_SLAB = BLOCKS.register("maple_slab", () -> new AxialSlabBlock(MAPLE_PLANKS));
		MAPLE_STAIRS = BLOCKS.register("maple_stairs", () -> new LOTRStairsBlock(MAPLE_PLANKS));
		MAPLE_FENCE = BLOCKS.register("maple_fence", () -> new LOTRFenceBlock(MAPLE_PLANKS));
		MAPLE_FENCE_GATE = BLOCKS.register("maple_fence_gate", () -> new LOTRFenceGateBlock(MAPLE_PLANKS));
		MAPLE_DOOR = BLOCKS.register("maple_door", () -> new LOTRDoorBlock(MAPLE_PLANKS));
		MAPLE_TRAPDOOR = BLOCKS.register("maple_trapdoor", () -> new LOTRTrapdoorBlock(MAPLE_PLANKS));
		MAPLE_PRESSURE_PLATE = BLOCKS.register("maple_pressure_plate", () -> new LOTRWoodPressurePlateBlock(MAPLE_PLANKS));
		MAPLE_BUTTON = BLOCKS.register("maple_button", LOTRWoodButtonBlock::new);
		STRIPPED_MAPLE_LOG = BLOCKS.register("stripped_maple_log", () -> new LOTRStrippedLogBlock(MAPLE_LOG));
		STRIPPED_MAPLE_WOOD = BLOCKS.register("stripped_maple_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_MAPLE_LOG));
		MAPLE_BEAM = BLOCKS.register("maple_beam", () -> new WoodBeamBlock(MAPLE_LOG));
		MAPLE_SIGN = BLOCKS.register("maple_sign", () -> new LOTRStandingSignBlock(MAPLE_PLANKS, LOTRSignTypes.MAPLE));
		MAPLE_WALL_SIGN = BLOCKS.register("maple_wall_sign", () -> new LOTRWallSignBlock(MAPLE_SIGN));
		THISTLE = BLOCKS.register("thistle", () -> new ThistleBlock(Effects.POISON, 4));
		NETTLES = BLOCKS.register("nettles", NettleBlock::new);
		FERNSPROUT = BLOCKS.register("fernsprout", LOTRGrassBlock::new);
		CANDLE = BLOCKS.register("candle", () -> new CandleBlock(8, 2));
		GOLD_CHANDELIER = BLOCKS.register("gold_chandelier", ChandelierBlock::new);
		IRON_CHANDELIER = BLOCKS.register("iron_chandelier", ChandelierBlock::new);
		BRONZE_CHANDELIER = BLOCKS.register("bronze_chandelier", ChandelierBlock::new);
		SILVER_CHANDELIER = BLOCKS.register("silver_chandelier", ChandelierBlock::new);
		MITHRIL_CHANDELIER = BLOCKS.register("mithril_chandelier", ChandelierBlock::new);
		ATHELAS = BLOCKS.register("athelas", () -> new FlowerLikeBlock().setPlantShape(Block.box(2.0D, 0.0D, 2.0D, 14.0D, 11.0D, 14.0D)));
		DWARFWORT = BLOCKS.register("dwarfwort", FlowerLikeBlock::new);
		WILD_PIPEWEED = BLOCKS.register("wild_pipeweed", () -> new WildPipeweedBlock().setPlantShape(Block.box(2.0D, 0.0D, 2.0D, 14.0D, 13.0D, 14.0D)));
		WILD_FLAX = BLOCKS.register("wild_flax", () -> new FlowerLikeBlock().setPlantShape(Block.box(3.0D, 0.0D, 3.0D, 13.0D, 13.0D, 13.0D)));
		POTTED_ATHELAS = BLOCKS.register("potted_athelas", () -> new LOTRPottedPlantBlock(ATHELAS));
		POTTED_DWARFWORT = BLOCKS.register("potted_dwarfwort", () -> new LOTRPottedPlantBlock(DWARFWORT));
		POTTED_WILD_PIPEWEED = BLOCKS.register("potted_wild_pipeweed", () -> new LOTRPottedPlantBlock(WILD_PIPEWEED));
		POTTED_WILD_FLAX = BLOCKS.register("potted_wild_flax", () -> new LOTRPottedPlantBlock(WILD_FLAX));
		POTTED_THISTLE = BLOCKS.register("potted_thistle", () -> new LOTRPottedPlantBlock(THISTLE));
		POTTED_NETTLES = BLOCKS.register("potted_nettles", () -> new LOTRPottedPlantBlock(NETTLES));
		POTTED_FERNSPROUT = BLOCKS.register("potted_fernsprout", () -> new LOTRPottedPlantBlock(FERNSPROUT));
		ASPEN_LOG = BLOCKS.register("aspen_log", () -> new StrippableLogBlock(MaterialColor.PODZOL, MaterialColor.METAL, () -> STRIPPED_ASPEN_LOG.get()));
		ASPEN_WOOD = BLOCKS.register("aspen_wood", () -> new StrippableWoodBlock(ASPEN_LOG, () -> STRIPPED_ASPEN_WOOD.get()));
		ASPEN_PLANKS = BLOCKS.register("aspen_planks", () -> new LOTRPlanksBlock(MaterialColor.PODZOL));
		ASPEN_LEAVES = BLOCKS.register("aspen_leaves", LOTRLeavesBlock::new);
		ASPEN_SAPLING = BLOCKS.register("aspen_sapling", () -> new LOTRSaplingBlock(new AspenTree()));
		POTTED_ASPEN_SAPLING = BLOCKS.register("potted_aspen_sapling", () -> new LOTRPottedPlantBlock(ASPEN_SAPLING));
		ASPEN_SLAB = BLOCKS.register("aspen_slab", () -> new AxialSlabBlock(ASPEN_PLANKS));
		ASPEN_STAIRS = BLOCKS.register("aspen_stairs", () -> new LOTRStairsBlock(ASPEN_PLANKS));
		ASPEN_FENCE = BLOCKS.register("aspen_fence", () -> new LOTRFenceBlock(ASPEN_PLANKS));
		ASPEN_FENCE_GATE = BLOCKS.register("aspen_fence_gate", () -> new LOTRFenceGateBlock(ASPEN_PLANKS));
		ASPEN_DOOR = BLOCKS.register("aspen_door", () -> new LOTRDoorBlock(ASPEN_PLANKS));
		ASPEN_TRAPDOOR = BLOCKS.register("aspen_trapdoor", () -> new LOTRTrapdoorBlock(ASPEN_PLANKS));
		ASPEN_PRESSURE_PLATE = BLOCKS.register("aspen_pressure_plate", () -> new LOTRWoodPressurePlateBlock(ASPEN_PLANKS));
		ASPEN_BUTTON = BLOCKS.register("aspen_button", LOTRWoodButtonBlock::new);
		STRIPPED_ASPEN_LOG = BLOCKS.register("stripped_aspen_log", () -> new LOTRStrippedLogBlock(ASPEN_LOG));
		STRIPPED_ASPEN_WOOD = BLOCKS.register("stripped_aspen_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_ASPEN_LOG));
		ASPEN_BEAM = BLOCKS.register("aspen_beam", () -> new WoodBeamBlock(ASPEN_LOG));
		ASPEN_SIGN = BLOCKS.register("aspen_sign", () -> new LOTRStandingSignBlock(ASPEN_PLANKS, LOTRSignTypes.ASPEN));
		ASPEN_WALL_SIGN = BLOCKS.register("aspen_wall_sign", () -> new LOTRWallSignBlock(ASPEN_SIGN));
		LAIRELOSSE_LOG = BLOCKS.register("lairelosse_log", () -> new StrippableLogBlock(MaterialColor.SNOW, MaterialColor.WOOL, () -> STRIPPED_LAIRELOSSE_LOG.get()));
		LAIRELOSSE_WOOD = BLOCKS.register("lairelosse_wood", () -> new StrippableWoodBlock(LAIRELOSSE_LOG, () -> STRIPPED_LAIRELOSSE_WOOD.get()));
		LAIRELOSSE_PLANKS = BLOCKS.register("lairelosse_planks", () -> new LOTRPlanksBlock(MaterialColor.SNOW));
		LAIRELOSSE_LEAVES = BLOCKS.register("lairelosse_leaves", () -> new LOTRLeavesBlock(MaterialColor.SNOW));
		LAIRELOSSE_SAPLING = BLOCKS.register("lairelosse_sapling", () -> new LOTRSaplingBlock(new LairelosseTree()));
		POTTED_LAIRELOSSE_SAPLING = BLOCKS.register("potted_lairelosse_sapling", () -> new LOTRPottedPlantBlock(LAIRELOSSE_SAPLING));
		LAIRELOSSE_SLAB = BLOCKS.register("lairelosse_slab", () -> new AxialSlabBlock(LAIRELOSSE_PLANKS));
		LAIRELOSSE_STAIRS = BLOCKS.register("lairelosse_stairs", () -> new LOTRStairsBlock(LAIRELOSSE_PLANKS));
		LAIRELOSSE_FENCE = BLOCKS.register("lairelosse_fence", () -> new LOTRFenceBlock(LAIRELOSSE_PLANKS));
		LAIRELOSSE_FENCE_GATE = BLOCKS.register("lairelosse_fence_gate", () -> new LOTRFenceGateBlock(LAIRELOSSE_PLANKS));
		LAIRELOSSE_DOOR = BLOCKS.register("lairelosse_door", () -> new LOTRDoorBlock(LAIRELOSSE_PLANKS));
		LAIRELOSSE_TRAPDOOR = BLOCKS.register("lairelosse_trapdoor", () -> new LOTRTrapdoorBlock(LAIRELOSSE_PLANKS));
		LAIRELOSSE_PRESSURE_PLATE = BLOCKS.register("lairelosse_pressure_plate", () -> new LOTRWoodPressurePlateBlock(LAIRELOSSE_PLANKS));
		LAIRELOSSE_BUTTON = BLOCKS.register("lairelosse_button", LOTRWoodButtonBlock::new);
		STRIPPED_LAIRELOSSE_LOG = BLOCKS.register("stripped_lairelosse_log", () -> new LOTRStrippedLogBlock(LAIRELOSSE_LOG));
		STRIPPED_LAIRELOSSE_WOOD = BLOCKS.register("stripped_lairelosse_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_LAIRELOSSE_LOG));
		LAIRELOSSE_BEAM = BLOCKS.register("lairelosse_beam", () -> new WoodBeamBlock(LAIRELOSSE_LOG));
		LAIRELOSSE_SIGN = BLOCKS.register("lairelosse_sign", () -> new LOTRStandingSignBlock(LAIRELOSSE_PLANKS, LOTRSignTypes.LAIRELOSSE));
		LAIRELOSSE_WALL_SIGN = BLOCKS.register("lairelosse_wall_sign", () -> new LOTRWallSignBlock(LAIRELOSSE_SIGN));
		CEDAR_LOG = BLOCKS.register("cedar_log", () -> new StrippableLogBlock(MaterialColor.PODZOL, MaterialColor.COLOR_BROWN, () -> STRIPPED_CEDAR_LOG.get()));
		CEDAR_WOOD = BLOCKS.register("cedar_wood", () -> new StrippableWoodBlock(CEDAR_LOG, () -> STRIPPED_CEDAR_WOOD.get()));
		CEDAR_PLANKS = BLOCKS.register("cedar_planks", () -> new LOTRPlanksBlock(MaterialColor.PODZOL));
		CEDAR_LEAVES = BLOCKS.register("cedar_leaves", LOTRLeavesBlock::new);
		CEDAR_SAPLING = BLOCKS.register("cedar_sapling", () -> new LOTRSaplingBlock(new CedarTree()));
		POTTED_CEDAR_SAPLING = BLOCKS.register("potted_cedar_sapling", () -> new LOTRPottedPlantBlock(CEDAR_SAPLING));
		CEDAR_SLAB = BLOCKS.register("cedar_slab", () -> new AxialSlabBlock(CEDAR_PLANKS));
		CEDAR_STAIRS = BLOCKS.register("cedar_stairs", () -> new LOTRStairsBlock(CEDAR_PLANKS));
		CEDAR_FENCE = BLOCKS.register("cedar_fence", () -> new LOTRFenceBlock(CEDAR_PLANKS));
		CEDAR_FENCE_GATE = BLOCKS.register("cedar_fence_gate", () -> new LOTRFenceGateBlock(CEDAR_PLANKS));
		CEDAR_DOOR = BLOCKS.register("cedar_door", () -> new LOTRDoorBlock(CEDAR_PLANKS));
		CEDAR_TRAPDOOR = BLOCKS.register("cedar_trapdoor", () -> new LOTRTrapdoorBlock(CEDAR_PLANKS));
		CEDAR_PRESSURE_PLATE = BLOCKS.register("cedar_pressure_plate", () -> new LOTRWoodPressurePlateBlock(CEDAR_PLANKS));
		CEDAR_BUTTON = BLOCKS.register("cedar_button", LOTRWoodButtonBlock::new);
		STRIPPED_CEDAR_LOG = BLOCKS.register("stripped_cedar_log", () -> new LOTRStrippedLogBlock(CEDAR_LOG));
		STRIPPED_CEDAR_WOOD = BLOCKS.register("stripped_cedar_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_CEDAR_LOG));
		CEDAR_BEAM = BLOCKS.register("cedar_beam", () -> new WoodBeamBlock(CEDAR_LOG));
		CEDAR_SIGN = BLOCKS.register("cedar_sign", () -> new LOTRStandingSignBlock(CEDAR_PLANKS, LOTRSignTypes.CEDAR));
		CEDAR_WALL_SIGN = BLOCKS.register("cedar_wall_sign", () -> new LOTRWallSignBlock(CEDAR_SIGN));
		PIPEWEED_CROP = BLOCKS.register("pipeweed_crop", () -> new PipeweedCropBlock(() -> LOTRItems.PIPEWEED_SEEDS.get()));
		FLAX_CROP = BLOCKS.register("flax_crop", () -> new LOTRCropBlock(() -> LOTRItems.FLAX_SEEDS.get()));
		LETTUCE = BLOCKS.register("lettuce", () -> new LOTRCropBlock(() -> LOTRItems.LETTUCE.get()));
		BLUE_MALLORN_TORCH = BLOCKS.register("blue_mallorn_torch", () -> new LOTRTorchBlock(14).setParticles(LOTRParticles.BLUE_ELVEN_GLOW));
		BLUE_MALLORN_WALL_TORCH = BLOCKS.register("blue_mallorn_wall_torch", () -> new LOTRWallTorchBlock(BLUE_MALLORN_TORCH));
		GREEN_MALLORN_TORCH = BLOCKS.register("green_mallorn_torch", () -> new LOTRTorchBlock(14).setParticles(LOTRParticles.GREEN_ELVEN_GLOW));
		GREEN_MALLORN_WALL_TORCH = BLOCKS.register("green_mallorn_wall_torch", () -> new LOTRWallTorchBlock(GREEN_MALLORN_TORCH));
		GOLD_MALLORN_TORCH = BLOCKS.register("gold_mallorn_torch", () -> new LOTRTorchBlock(14).setParticles(LOTRParticles.GOLD_ELVEN_GLOW));
		GOLD_MALLORN_WALL_TORCH = BLOCKS.register("gold_mallorn_wall_torch", () -> new LOTRWallTorchBlock(GOLD_MALLORN_TORCH));
		SILVER_MALLORN_TORCH = BLOCKS.register("silver_mallorn_torch", () -> new LOTRTorchBlock(14).setParticles(LOTRParticles.SILVER_ELVEN_GLOW));
		SILVER_MALLORN_WALL_TORCH = BLOCKS.register("silver_mallorn_wall_torch", () -> new LOTRWallTorchBlock(SILVER_MALLORN_TORCH));
		SANDSTONE_DRIPSTONE = BLOCKS.register("sandstone_dripstone", () -> new DripstoneBlock(Blocks.SANDSTONE));
		RED_SANDSTONE_DRIPSTONE = BLOCKS.register("red_sandstone_dripstone", () -> new DripstoneBlock(Blocks.RED_SANDSTONE));
		EDHELVIR_ORE = BLOCKS.register("edhelvir_ore", () -> new LOTROreBlock(Properties.of(Material.STONE).strength(3.0F, 3.0F).lightLevel(constantLight(12))).setOreLevel(2));
		EDHELVIR_BLOCK = BLOCKS.register("edhelvir_block", () -> new TranslucentMineralBlock(Properties.of(Material.METAL, MaterialColor.COLOR_LIGHT_BLUE).noOcclusion().strength(5.0F, 6.0F).lightLevel(constantLight(12)).sound(SoundType.METAL), 2, DyeColor.LIGHT_BLUE));
		HIGH_ELVEN_TORCH = BLOCKS.register("high_elven_torch", () -> new LOTRTorchBlock(14).setParticles(LOTRParticles.BLUE_ELVEN_GLOW));
		HIGH_ELVEN_WALL_TORCH = BLOCKS.register("high_elven_wall_torch", () -> new LOTRWallTorchBlock(HIGH_ELVEN_TORCH));
		STONE_WALL = BLOCKS.register("stone_wall", () -> new LOTRWallBlock(Blocks.STONE));
		RED_SAND_GEM = BLOCKS.register("red_sand_gem", () -> new LOTRFlowerBlock(Effects.FIRE_RESISTANCE, 4));
		YELLOW_SAND_GEM = BLOCKS.register("yellow_sand_gem", () -> new LOTRFlowerBlock(Effects.SATURATION, 7));
		HARAD_DAISY = BLOCKS.register("harad_daisy", () -> new LOTRFlowerBlock(Effects.REGENERATION, 8));
		SOUTHBELL = BLOCKS.register("southbell", () -> new LOTRFlowerBlock(Effects.WEAKNESS, 9));
		POTTED_RED_SAND_GEM = BLOCKS.register("potted_red_sand_gem", () -> new LOTRPottedPlantBlock(RED_SAND_GEM));
		POTTED_YELLOW_SAND_GEM = BLOCKS.register("potted_yellow_sand_gem", () -> new LOTRPottedPlantBlock(YELLOW_SAND_GEM));
		POTTED_HARAD_DAISY = BLOCKS.register("potted_harad_daisy", () -> new LOTRPottedPlantBlock(HARAD_DAISY));
		POTTED_SOUTHBELL = BLOCKS.register("potted_southbell", () -> new LOTRPottedPlantBlock(SOUTHBELL));
		HIBISCUS = BLOCKS.register("hibiscus", LOTRTallFlowerBlock::new);
		FLAME_OF_HARAD = BLOCKS.register("flame_of_harad", LOTRTallFlowerBlock::new);
		GULDURIL_ORE_MORDOR = BLOCKS.register("gulduril_ore_mordor", () -> new LOTROreBlock(Properties.of(Material.STONE).strength(3.0F, 3.0F).lightLevel(constantLight(12))).setOreLevel(2));
		GULDURIL_ORE_STONE = BLOCKS.register("gulduril_ore_stone", () -> new LOTROreBlock(Properties.of(Material.STONE).strength(3.0F, 3.0F).lightLevel(constantLight(12))).setOreLevel(2));
		GULDURIL_BLOCK = BLOCKS.register("gulduril_block", () -> new MineralBlock(Properties.of(Material.METAL, MaterialColor.EMERALD).strength(5.0F, 6.0F).lightLevel(constantLight(12)).sound(SoundType.METAL), 2));
		EDHELVIR_CRYSTAL = BLOCKS.register("edhelvir_crystal", () -> new CrystalBlock(12, 2, DyeColor.LIGHT_BLUE));
		GULDURIL_CRYSTAL = BLOCKS.register("gulduril_crystal", () -> new CrystalBlock(12, 2, DyeColor.LIME));
		GLOWSTONE_CRYSTAL = BLOCKS.register("glowstone_crystal", () -> new CrystalBlock(12, 1, DyeColor.YELLOW));
		NUMENOREAN_BRICK = BLOCKS.register("numenorean_brick", () -> new LOTRStoneBlock(MaterialColor.COLOR_BLACK));
		NUMENOREAN_BRICK_SLAB = BLOCKS.register("numenorean_brick_slab", () -> new AxialSlabBlock(NUMENOREAN_BRICK));
		NUMENOREAN_BRICK_STAIRS = BLOCKS.register("numenorean_brick_stairs", () -> new LOTRStairsBlock(NUMENOREAN_BRICK));
		NUMENOREAN_BRICK_WALL = BLOCKS.register("numenorean_brick_wall", () -> new LOTRWallBlock(NUMENOREAN_BRICK));
		NUMENOREAN_PILLAR = BLOCKS.register("numenorean_pillar", () -> new LOTRPillarBlock(MaterialColor.COLOR_BLACK));
		NUMENOREAN_PILLAR_SLAB = BLOCKS.register("numenorean_pillar_slab", () -> new AxialSlabBlock(NUMENOREAN_PILLAR));
		ALLOY_FORGE = BLOCKS.register("alloy_forge", () -> new AlloyForgeBlock(MaterialColor.STONE));
		DWARVEN_FORGE = BLOCKS.register("dwarven_forge", () -> new DwarvenForgeBlock(MaterialColor.STONE));
		ELVEN_FORGE = BLOCKS.register("elven_forge", () -> new ElvenForgeBlock(MaterialColor.METAL));
		ORC_FORGE = BLOCKS.register("orc_forge", () -> new OrcForgeBlock(MaterialColor.COLOR_BLACK));
		URUK_BRICK = BLOCKS.register("uruk_brick", () -> new LOTRStoneBlock(MaterialColor.TERRACOTTA_BLACK));
		URUK_BRICK_SLAB = BLOCKS.register("uruk_brick_slab", () -> new AxialSlabBlock(URUK_BRICK));
		URUK_BRICK_STAIRS = BLOCKS.register("uruk_brick_stairs", () -> new LOTRStairsBlock(URUK_BRICK));
		URUK_BRICK_WALL = BLOCKS.register("uruk_brick_wall", () -> new LOTRWallBlock(URUK_BRICK));
		URUK_PILLAR = BLOCKS.register("uruk_pillar", () -> new LOTRPillarBlock(MaterialColor.TERRACOTTA_BLACK));
		URUK_PILLAR_SLAB = BLOCKS.register("uruk_pillar_slab", () -> new AxialSlabBlock(URUK_PILLAR));
		URUK_CRAFTING_TABLE = BLOCKS.register("uruk_crafting_table", () -> new FactionCraftingTableBlock.Uruk(URUK_BRICK));
		URUK_STEEL_BLOCK = BLOCKS.register("uruk_steel_block", () -> new DirectionalMineralBlock(Properties.of(Material.METAL, MaterialColor.TERRACOTTA_GREEN).strength(5.0F, 6.0F).sound(SoundType.METAL), 1));
		URUK_BARS = BLOCKS.register("uruk_bars", LOTRBarsBlock::new);
		HOBBIT_CRAFTING_TABLE = BLOCKS.register("hobbit_crafting_table", () -> new FactionCraftingTableBlock.Hobbit(() -> Blocks.OAK_PLANKS));
		BRICK_PILLAR = BLOCKS.register("brick_pillar", () -> new LOTRPillarBlock(MaterialColor.COLOR_RED, 2.0F, 6.0F));
		BRICK_PILLAR_SLAB = BLOCKS.register("brick_pillar_slab", () -> new AxialSlabBlock(BRICK_PILLAR));
		SHIRE_PINE_DOOR = BLOCKS.register("shire_pine_door", () -> new LOTRDoorBlock(PINE_PLANKS));
		SHIRE_PINE_TRAPDOOR = BLOCKS.register("shire_pine_trapdoor", () -> new LOTRTrapdoorBlock(PINE_PLANKS));
		FIR_LOG = BLOCKS.register("fir_log", () -> new StrippableLogBlock(MaterialColor.WOOD, MaterialColor.TERRACOTTA_LIGHT_GRAY, () -> STRIPPED_FIR_LOG.get()));
		FIR_WOOD = BLOCKS.register("fir_wood", () -> new StrippableWoodBlock(FIR_LOG, () -> STRIPPED_FIR_WOOD.get()));
		FIR_PLANKS = BLOCKS.register("fir_planks", () -> new LOTRPlanksBlock(MaterialColor.WOOD));
		FIR_LEAVES = BLOCKS.register("fir_leaves", LOTRLeavesBlock::new);
		FIR_SAPLING = BLOCKS.register("fir_sapling", () -> new LOTRSaplingBlock(new FirTree()));
		POTTED_FIR_SAPLING = BLOCKS.register("potted_fir_sapling", () -> new LOTRPottedPlantBlock(FIR_SAPLING));
		FIR_SLAB = BLOCKS.register("fir_slab", () -> new AxialSlabBlock(FIR_PLANKS));
		FIR_STAIRS = BLOCKS.register("fir_stairs", () -> new LOTRStairsBlock(FIR_PLANKS));
		FIR_FENCE = BLOCKS.register("fir_fence", () -> new LOTRFenceBlock(FIR_PLANKS));
		FIR_FENCE_GATE = BLOCKS.register("fir_fence_gate", () -> new LOTRFenceGateBlock(FIR_PLANKS));
		FIR_DOOR = BLOCKS.register("fir_door", () -> new LOTRDoorBlock(FIR_PLANKS));
		FIR_TRAPDOOR = BLOCKS.register("fir_trapdoor", () -> new LOTRTrapdoorBlock(FIR_PLANKS));
		FIR_PRESSURE_PLATE = BLOCKS.register("fir_pressure_plate", () -> new LOTRWoodPressurePlateBlock(FIR_PLANKS));
		FIR_BUTTON = BLOCKS.register("fir_button", LOTRWoodButtonBlock::new);
		STRIPPED_FIR_LOG = BLOCKS.register("stripped_fir_log", () -> new LOTRStrippedLogBlock(FIR_LOG));
		STRIPPED_FIR_WOOD = BLOCKS.register("stripped_fir_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_FIR_LOG));
		FIR_BEAM = BLOCKS.register("fir_beam", () -> new WoodBeamBlock(FIR_LOG));
		FIR_SIGN = BLOCKS.register("fir_sign", () -> new LOTRStandingSignBlock(FIR_PLANKS, LOTRSignTypes.FIR));
		FIR_WALL_SIGN = BLOCKS.register("fir_wall_sign", () -> new LOTRWallSignBlock(FIR_SIGN));
		LARCH_LOG = BLOCKS.register("larch_log", () -> new StrippableLogBlock(MaterialColor.PODZOL, MaterialColor.TERRACOTTA_LIGHT_GRAY, () -> STRIPPED_LARCH_LOG.get()));
		LARCH_WOOD = BLOCKS.register("larch_wood", () -> new StrippableWoodBlock(LARCH_LOG, () -> STRIPPED_LARCH_WOOD.get()));
		LARCH_PLANKS = BLOCKS.register("larch_planks", () -> new LOTRPlanksBlock(MaterialColor.PODZOL));
		LARCH_LEAVES = BLOCKS.register("larch_leaves", LOTRLeavesBlock::new);
		LARCH_SAPLING = BLOCKS.register("larch_sapling", () -> new LOTRSaplingBlock(new LarchTree()));
		POTTED_LARCH_SAPLING = BLOCKS.register("potted_larch_sapling", () -> new LOTRPottedPlantBlock(LARCH_SAPLING));
		LARCH_SLAB = BLOCKS.register("larch_slab", () -> new AxialSlabBlock(LARCH_PLANKS));
		LARCH_STAIRS = BLOCKS.register("larch_stairs", () -> new LOTRStairsBlock(LARCH_PLANKS));
		LARCH_FENCE = BLOCKS.register("larch_fence", () -> new LOTRFenceBlock(LARCH_PLANKS));
		LARCH_FENCE_GATE = BLOCKS.register("larch_fence_gate", () -> new LOTRFenceGateBlock(LARCH_PLANKS));
		LARCH_DOOR = BLOCKS.register("larch_door", () -> new LOTRDoorBlock(LARCH_PLANKS));
		LARCH_TRAPDOOR = BLOCKS.register("larch_trapdoor", () -> new LOTRTrapdoorBlock(LARCH_PLANKS));
		LARCH_PRESSURE_PLATE = BLOCKS.register("larch_pressure_plate", () -> new LOTRWoodPressurePlateBlock(LARCH_PLANKS));
		LARCH_BUTTON = BLOCKS.register("larch_button", LOTRWoodButtonBlock::new);
		STRIPPED_LARCH_LOG = BLOCKS.register("stripped_larch_log", () -> new LOTRStrippedLogBlock(LARCH_LOG));
		STRIPPED_LARCH_WOOD = BLOCKS.register("stripped_larch_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_LARCH_LOG));
		LARCH_BEAM = BLOCKS.register("larch_beam", () -> new WoodBeamBlock(LARCH_LOG));
		LARCH_SIGN = BLOCKS.register("larch_sign", () -> new LOTRStandingSignBlock(LARCH_PLANKS, LOTRSignTypes.LARCH));
		LARCH_WALL_SIGN = BLOCKS.register("larch_wall_sign", () -> new LOTRWallSignBlock(LARCH_SIGN));
		HOBBIT_OVEN = BLOCKS.register("hobbit_oven", () -> new HobbitOvenBlock(MaterialColor.COLOR_RED));
		FINE_PLATE = BLOCKS.register("fine_plate", () -> new PlateBlock(Properties.of(Material.DECORATION).strength(0.5F).sound(SOUND_CERAMIC)));
		STONEWARE_PLATE = BLOCKS.register("stoneware_plate", () -> new PlateBlock(Properties.of(Material.DECORATION).strength(0.5F).sound(SOUND_CERAMIC)));
		WOODEN_PLATE = BLOCKS.register("wooden_plate", () -> new PlateBlock(Properties.of(Material.WOOD).strength(0.5F).sound(SoundType.WOOD)));
		MOSSY_GONDOR_BRICK = BLOCKS.register("mossy_gondor_brick", () -> new LOTRStoneBlock(GONDOR_BRICK));
		MOSSY_GONDOR_BRICK_SLAB = BLOCKS.register("mossy_gondor_brick_slab", () -> new AxialSlabBlock(MOSSY_GONDOR_BRICK));
		MOSSY_GONDOR_BRICK_STAIRS = BLOCKS.register("mossy_gondor_brick_stairs", () -> new LOTRStairsBlock(MOSSY_GONDOR_BRICK));
		MOSSY_GONDOR_BRICK_WALL = BLOCKS.register("mossy_gondor_brick_wall", () -> new LOTRWallBlock(MOSSY_GONDOR_BRICK));
		CRACKED_GONDOR_BRICK = BLOCKS.register("cracked_gondor_brick", () -> new LOTRStoneBlock(GONDOR_BRICK));
		CRACKED_GONDOR_BRICK_SLAB = BLOCKS.register("cracked_gondor_brick_slab", () -> new AxialSlabBlock(CRACKED_GONDOR_BRICK));
		CRACKED_GONDOR_BRICK_STAIRS = BLOCKS.register("cracked_gondor_brick_stairs", () -> new LOTRStairsBlock(CRACKED_GONDOR_BRICK));
		CRACKED_GONDOR_BRICK_WALL = BLOCKS.register("cracked_gondor_brick_wall", () -> new LOTRWallBlock(CRACKED_GONDOR_BRICK));
		CARVED_GONDOR_BRICK = BLOCKS.register("carved_gondor_brick", () -> new LOTRStoneBlock(GONDOR_BRICK));
		MOSSY_HIGH_ELVEN_BRICK = BLOCKS.register("mossy_high_elven_brick", () -> new LOTRStoneBlock(HIGH_ELVEN_BRICK));
		MOSSY_HIGH_ELVEN_BRICK_SLAB = BLOCKS.register("mossy_high_elven_brick_slab", () -> new AxialSlabBlock(MOSSY_HIGH_ELVEN_BRICK));
		MOSSY_HIGH_ELVEN_BRICK_STAIRS = BLOCKS.register("mossy_high_elven_brick_stairs", () -> new LOTRStairsBlock(MOSSY_HIGH_ELVEN_BRICK));
		MOSSY_HIGH_ELVEN_BRICK_WALL = BLOCKS.register("mossy_high_elven_brick_wall", () -> new LOTRWallBlock(MOSSY_HIGH_ELVEN_BRICK));
		CRACKED_HIGH_ELVEN_BRICK = BLOCKS.register("cracked_high_elven_brick", () -> new LOTRStoneBlock(HIGH_ELVEN_BRICK));
		CRACKED_HIGH_ELVEN_BRICK_SLAB = BLOCKS.register("cracked_high_elven_brick_slab", () -> new AxialSlabBlock(CRACKED_HIGH_ELVEN_BRICK));
		CRACKED_HIGH_ELVEN_BRICK_STAIRS = BLOCKS.register("cracked_high_elven_brick_stairs", () -> new LOTRStairsBlock(CRACKED_HIGH_ELVEN_BRICK));
		CRACKED_HIGH_ELVEN_BRICK_WALL = BLOCKS.register("cracked_high_elven_brick_wall", () -> new LOTRWallBlock(CRACKED_HIGH_ELVEN_BRICK));
		CARVED_HIGH_ELVEN_BRICK = BLOCKS.register("carved_high_elven_brick", () -> new LOTRStoneBlock(HIGH_ELVEN_BRICK));
		THATCH = BLOCKS.register("thatch", ThatchBlock::new);
		THATCH_SLAB = BLOCKS.register("thatch_slab", () -> new ThatchSlabBlock(THATCH));
		THATCH_STAIRS = BLOCKS.register("thatch_stairs", () -> new ThatchStairsBlock(THATCH));
		DRYSTONE = BLOCKS.register("drystone", () -> new LOTRStoneBlock(MaterialColor.STONE));
		WATTLE_AND_DAUB = BLOCKS.register("wattle_and_daub", WattleAndDaubBlock::new);
		WATTLE_AND_DAUB_PILLAR = BLOCKS.register("wattle_and_daub_pillar", () -> new WattleAndDaubPillarBlock(WATTLE_AND_DAUB));
		MOSSY_MORDOR_BRICK = BLOCKS.register("mossy_mordor_brick", () -> new LOTRStoneBlock(MORDOR_BRICK));
		MOSSY_MORDOR_BRICK_SLAB = BLOCKS.register("mossy_mordor_brick_slab", () -> new AxialSlabBlock(MOSSY_MORDOR_BRICK));
		MOSSY_MORDOR_BRICK_STAIRS = BLOCKS.register("mossy_mordor_brick_stairs", () -> new LOTRStairsBlock(MOSSY_MORDOR_BRICK));
		MOSSY_MORDOR_BRICK_WALL = BLOCKS.register("mossy_mordor_brick_wall", () -> new LOTRWallBlock(MOSSY_MORDOR_BRICK));
		CRACKED_MORDOR_BRICK = BLOCKS.register("cracked_mordor_brick", () -> new LOTRStoneBlock(MORDOR_BRICK));
		CRACKED_MORDOR_BRICK_SLAB = BLOCKS.register("cracked_mordor_brick_slab", () -> new AxialSlabBlock(CRACKED_MORDOR_BRICK));
		CRACKED_MORDOR_BRICK_STAIRS = BLOCKS.register("cracked_mordor_brick_stairs", () -> new LOTRStairsBlock(CRACKED_MORDOR_BRICK));
		CRACKED_MORDOR_BRICK_WALL = BLOCKS.register("cracked_mordor_brick_wall", () -> new LOTRWallBlock(CRACKED_MORDOR_BRICK));
		CARVED_MORDOR_BRICK = BLOCKS.register("carved_mordor_brick", () -> new LOTRStoneBlock(MORDOR_BRICK));
		MOSSY_ROHAN_BRICK = BLOCKS.register("mossy_rohan_brick", () -> new LOTRStoneBlock(ROHAN_BRICK));
		MOSSY_ROHAN_BRICK_SLAB = BLOCKS.register("mossy_rohan_brick_slab", () -> new AxialSlabBlock(MOSSY_ROHAN_BRICK));
		MOSSY_ROHAN_BRICK_STAIRS = BLOCKS.register("mossy_rohan_brick_stairs", () -> new LOTRStairsBlock(MOSSY_ROHAN_BRICK));
		MOSSY_ROHAN_BRICK_WALL = BLOCKS.register("mossy_rohan_brick_wall", () -> new LOTRWallBlock(MOSSY_ROHAN_BRICK));
		CRACKED_ROHAN_BRICK = BLOCKS.register("cracked_rohan_brick", () -> new LOTRStoneBlock(ROHAN_BRICK));
		CRACKED_ROHAN_BRICK_SLAB = BLOCKS.register("cracked_rohan_brick_slab", () -> new AxialSlabBlock(CRACKED_ROHAN_BRICK));
		CRACKED_ROHAN_BRICK_STAIRS = BLOCKS.register("cracked_rohan_brick_stairs", () -> new LOTRStairsBlock(CRACKED_ROHAN_BRICK));
		CRACKED_ROHAN_BRICK_WALL = BLOCKS.register("cracked_rohan_brick_wall", () -> new LOTRWallBlock(CRACKED_ROHAN_BRICK));
		CARVED_ROHAN_BRICK = BLOCKS.register("carved_rohan_brick", () -> new LOTRStoneBlock(ROHAN_BRICK));
		GOLD_TRIMMED_DWARVEN_BRICK = BLOCKS.register("gold_trimmed_dwarven_brick", () -> new LOTRStoneBlock(MaterialColor.STONE));
		SILVER_TRIMMED_DWARVEN_BRICK = BLOCKS.register("silver_trimmed_dwarven_brick", () -> new LOTRStoneBlock(MaterialColor.STONE));
		MITHRIL_TRIMMED_DWARVEN_BRICK = BLOCKS.register("mithril_trimmed_dwarven_brick", () -> new LOTRStoneBlock(MaterialColor.STONE));
		MOSSY_NUMENOREAN_BRICK = BLOCKS.register("mossy_numenorean_brick", () -> new LOTRStoneBlock(NUMENOREAN_BRICK));
		MOSSY_NUMENOREAN_BRICK_SLAB = BLOCKS.register("mossy_numenorean_brick_slab", () -> new AxialSlabBlock(MOSSY_NUMENOREAN_BRICK));
		MOSSY_NUMENOREAN_BRICK_STAIRS = BLOCKS.register("mossy_numenorean_brick_stairs", () -> new LOTRStairsBlock(MOSSY_NUMENOREAN_BRICK));
		MOSSY_NUMENOREAN_BRICK_WALL = BLOCKS.register("mossy_numenorean_brick_wall", () -> new LOTRWallBlock(MOSSY_NUMENOREAN_BRICK));
		CRACKED_NUMENOREAN_BRICK = BLOCKS.register("cracked_numenorean_brick", () -> new LOTRStoneBlock(NUMENOREAN_BRICK));
		CRACKED_NUMENOREAN_BRICK_SLAB = BLOCKS.register("cracked_numenorean_brick_slab", () -> new AxialSlabBlock(CRACKED_NUMENOREAN_BRICK));
		CRACKED_NUMENOREAN_BRICK_STAIRS = BLOCKS.register("cracked_numenorean_brick_stairs", () -> new LOTRStairsBlock(CRACKED_NUMENOREAN_BRICK));
		CRACKED_NUMENOREAN_BRICK_WALL = BLOCKS.register("cracked_numenorean_brick_wall", () -> new LOTRWallBlock(CRACKED_NUMENOREAN_BRICK));
		KEG = BLOCKS.register("keg", KegBlock::new);
		MORGUL_SHROOM = BLOCKS.register("morgul_shroom", MorgulShroomBlock::new);
		POTTED_MORGUL_SHROOM = BLOCKS.register("potted_morgul_shroom", () -> new LOTRPottedPlantBlock(MORGUL_SHROOM));
		MOSSY_BLUE_BRICK = BLOCKS.register("mossy_blue_brick", () -> new LOTRStoneBlock(BLUE_BRICK));
		MOSSY_BLUE_BRICK_SLAB = BLOCKS.register("mossy_blue_brick_slab", () -> new AxialSlabBlock(MOSSY_BLUE_BRICK));
		MOSSY_BLUE_BRICK_STAIRS = BLOCKS.register("mossy_blue_brick_stairs", () -> new LOTRStairsBlock(MOSSY_BLUE_BRICK));
		MOSSY_BLUE_BRICK_WALL = BLOCKS.register("mossy_blue_brick_wall", () -> new LOTRWallBlock(MOSSY_BLUE_BRICK));
		CRACKED_BLUE_BRICK = BLOCKS.register("cracked_blue_brick", () -> new LOTRStoneBlock(BLUE_BRICK));
		CRACKED_BLUE_BRICK_SLAB = BLOCKS.register("cracked_blue_brick_slab", () -> new AxialSlabBlock(CRACKED_BLUE_BRICK));
		CRACKED_BLUE_BRICK_STAIRS = BLOCKS.register("cracked_blue_brick_stairs", () -> new LOTRStairsBlock(CRACKED_BLUE_BRICK));
		CRACKED_BLUE_BRICK_WALL = BLOCKS.register("cracked_blue_brick_wall", () -> new LOTRWallBlock(CRACKED_BLUE_BRICK));
		CARVED_BLUE_BRICK = BLOCKS.register("carved_blue_brick", () -> new LOTRStoneBlock(BLUE_BRICK));
		MOSSY_RED_BRICK = BLOCKS.register("mossy_red_brick", () -> new LOTRStoneBlock(RED_BRICK));
		MOSSY_RED_BRICK_SLAB = BLOCKS.register("mossy_red_brick_slab", () -> new AxialSlabBlock(MOSSY_RED_BRICK));
		MOSSY_RED_BRICK_STAIRS = BLOCKS.register("mossy_red_brick_stairs", () -> new LOTRStairsBlock(MOSSY_RED_BRICK));
		MOSSY_RED_BRICK_WALL = BLOCKS.register("mossy_red_brick_wall", () -> new LOTRWallBlock(MOSSY_RED_BRICK));
		CRACKED_RED_BRICK = BLOCKS.register("cracked_red_brick", () -> new LOTRStoneBlock(RED_BRICK));
		CRACKED_RED_BRICK_SLAB = BLOCKS.register("cracked_red_brick_slab", () -> new AxialSlabBlock(CRACKED_RED_BRICK));
		CRACKED_RED_BRICK_STAIRS = BLOCKS.register("cracked_red_brick_stairs", () -> new LOTRStairsBlock(CRACKED_RED_BRICK));
		CRACKED_RED_BRICK_WALL = BLOCKS.register("cracked_red_brick_wall", () -> new LOTRWallBlock(CRACKED_RED_BRICK));
		CARVED_RED_BRICK = BLOCKS.register("carved_red_brick", () -> new LOTRStoneBlock(RED_BRICK));
		SMOOTH_BLUE_ROCK = BLOCKS.register("smooth_blue_rock", () -> new LOTRStoneBlock(BLUE_ROCK));
		SMOOTH_BLUE_ROCK_SLAB = BLOCKS.register("smooth_blue_rock_slab", () -> new AxialSlabBlock(SMOOTH_BLUE_ROCK));
		SMOOTH_RED_ROCK = BLOCKS.register("smooth_red_rock", () -> new LOTRStoneBlock(RED_ROCK));
		SMOOTH_RED_ROCK_SLAB = BLOCKS.register("smooth_red_rock_slab", () -> new AxialSlabBlock(SMOOTH_RED_ROCK));
		SMOOTH_MORDOR_ROCK = BLOCKS.register("smooth_mordor_rock", () -> new LOTRStoneBlock(MORDOR_ROCK));
		SMOOTH_MORDOR_ROCK_SLAB = BLOCKS.register("smooth_mordor_rock_slab", () -> new AxialSlabBlock(SMOOTH_MORDOR_ROCK));
		SMOOTH_GONDOR_ROCK = BLOCKS.register("smooth_gondor_rock", () -> new LOTRStoneBlock(GONDOR_ROCK));
		SMOOTH_GONDOR_ROCK_SLAB = BLOCKS.register("smooth_gondor_rock_slab", () -> new AxialSlabBlock(SMOOTH_GONDOR_ROCK));
		SMOOTH_ROHAN_ROCK = BLOCKS.register("smooth_rohan_rock", () -> new LOTRStoneBlock(ROHAN_ROCK));
		SMOOTH_ROHAN_ROCK_SLAB = BLOCKS.register("smooth_rohan_rock_slab", () -> new AxialSlabBlock(SMOOTH_ROHAN_ROCK));
		BLUE_MOUNTAINS_CRAFTING_TABLE = BLOCKS.register("blue_mountains_crafting_table", () -> new FactionCraftingTableBlock.BlueMountains(BLUE_BRICK));
		BLUE_DWARVEN_BARS = BLOCKS.register("blue_dwarven_bars", LOTRBarsBlock::new);
		GOLD_TREASURE_PILE = BLOCKS.register("gold_treasure_pile", () -> new TreasurePileBlock(MaterialColor.GOLD));
		SILVER_TREASURE_PILE = BLOCKS.register("silver_treasure_pile", () -> new TreasurePileBlock(MaterialColor.COLOR_LIGHT_GRAY));
		COPPER_TREASURE_PILE = BLOCKS.register("copper_treasure_pile", () -> new TreasurePileBlock(MaterialColor.COLOR_ORANGE));
		HOLLY_LOG = BLOCKS.register("holly_log", () -> new StrippableLogBlock(MaterialColor.SAND, MaterialColor.COLOR_GRAY, () -> STRIPPED_HOLLY_LOG.get()));
		HOLLY_WOOD = BLOCKS.register("holly_wood", () -> new StrippableWoodBlock(HOLLY_LOG, () -> STRIPPED_HOLLY_WOOD.get()));
		HOLLY_PLANKS = BLOCKS.register("holly_planks", () -> new LOTRPlanksBlock(MaterialColor.SAND));
		HOLLY_LEAVES = BLOCKS.register("holly_leaves", LOTRLeavesBlock::new);
		HOLLY_SAPLING = BLOCKS.register("holly_sapling", () -> new LOTRSaplingBlock(new HollyTree()));
		POTTED_HOLLY_SAPLING = BLOCKS.register("potted_holly_sapling", () -> new LOTRPottedPlantBlock(HOLLY_SAPLING));
		HOLLY_SLAB = BLOCKS.register("holly_slab", () -> new AxialSlabBlock(HOLLY_PLANKS));
		HOLLY_STAIRS = BLOCKS.register("holly_stairs", () -> new LOTRStairsBlock(HOLLY_PLANKS));
		HOLLY_FENCE = BLOCKS.register("holly_fence", () -> new LOTRFenceBlock(HOLLY_PLANKS));
		HOLLY_FENCE_GATE = BLOCKS.register("holly_fence_gate", () -> new LOTRFenceGateBlock(HOLLY_PLANKS));
		HOLLY_DOOR = BLOCKS.register("holly_door", () -> new LOTRDoorBlock(HOLLY_PLANKS));
		HOLLY_TRAPDOOR = BLOCKS.register("holly_trapdoor", () -> new LOTRTrapdoorBlock(HOLLY_PLANKS));
		HOLLY_PRESSURE_PLATE = BLOCKS.register("holly_pressure_plate", () -> new LOTRWoodPressurePlateBlock(HOLLY_PLANKS));
		HOLLY_BUTTON = BLOCKS.register("holly_button", LOTRWoodButtonBlock::new);
		STRIPPED_HOLLY_LOG = BLOCKS.register("stripped_holly_log", () -> new LOTRStrippedLogBlock(HOLLY_LOG));
		STRIPPED_HOLLY_WOOD = BLOCKS.register("stripped_holly_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_HOLLY_LOG));
		HOLLY_BEAM = BLOCKS.register("holly_beam", () -> new WoodBeamBlock(HOLLY_LOG));
		HOLLY_SIGN = BLOCKS.register("holly_sign", () -> new LOTRStandingSignBlock(HOLLY_PLANKS, LOTRSignTypes.HOLLY));
		HOLLY_WALL_SIGN = BLOCKS.register("holly_wall_sign", () -> new LOTRWallSignBlock(HOLLY_SIGN));
		MIRK_SHROOM = BLOCKS.register("mirk_shroom", LOTRMushroomBlock::new);
		POTTED_MIRK_SHROOM = BLOCKS.register("potted_mirk_shroom", () -> new LOTRPottedPlantBlock(MIRK_SHROOM));
		GREEN_OAK_LOG = BLOCKS.register("green_oak_log", () -> new StrippableLogBlock(MaterialColor.COLOR_BROWN, MaterialColor.COLOR_BROWN, () -> STRIPPED_GREEN_OAK_LOG.get()));
		GREEN_OAK_WOOD = BLOCKS.register("green_oak_wood", () -> new StrippableWoodBlock(GREEN_OAK_LOG, () -> STRIPPED_GREEN_OAK_WOOD.get()));
		GREEN_OAK_PLANKS = BLOCKS.register("green_oak_planks", () -> new LOTRPlanksBlock(MaterialColor.COLOR_BROWN));
		GREEN_OAK_LEAVES = BLOCKS.register("green_oak_leaves", () -> new LOTRLeavesBlock().setFallingParticle(LOTRParticles.GREEN_OAK_LEAF, 150));
		GREEN_OAK_SAPLING = BLOCKS.register("green_oak_sapling", () -> new LOTRSaplingBlock(new GreenOakTree()));
		POTTED_GREEN_OAK_SAPLING = BLOCKS.register("potted_green_oak_sapling", () -> new LOTRPottedPlantBlock(GREEN_OAK_SAPLING));
		GREEN_OAK_SLAB = BLOCKS.register("green_oak_slab", () -> new AxialSlabBlock(GREEN_OAK_PLANKS));
		GREEN_OAK_STAIRS = BLOCKS.register("green_oak_stairs", () -> new LOTRStairsBlock(GREEN_OAK_PLANKS));
		GREEN_OAK_FENCE = BLOCKS.register("green_oak_fence", () -> new LOTRFenceBlock(GREEN_OAK_PLANKS));
		GREEN_OAK_FENCE_GATE = BLOCKS.register("green_oak_fence_gate", () -> new LOTRFenceGateBlock(GREEN_OAK_PLANKS));
		GREEN_OAK_DOOR = BLOCKS.register("green_oak_door", () -> new LOTRDoorBlock(GREEN_OAK_PLANKS));
		GREEN_OAK_TRAPDOOR = BLOCKS.register("green_oak_trapdoor", () -> new LOTRTrapdoorBlock(GREEN_OAK_PLANKS));
		GREEN_OAK_PRESSURE_PLATE = BLOCKS.register("green_oak_pressure_plate", () -> new LOTRWoodPressurePlateBlock(GREEN_OAK_PLANKS));
		GREEN_OAK_BUTTON = BLOCKS.register("green_oak_button", LOTRWoodButtonBlock::new);
		STRIPPED_GREEN_OAK_LOG = BLOCKS.register("stripped_green_oak_log", () -> new LOTRStrippedLogBlock(GREEN_OAK_LOG));
		STRIPPED_GREEN_OAK_WOOD = BLOCKS.register("stripped_green_oak_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_GREEN_OAK_LOG));
		GREEN_OAK_BEAM = BLOCKS.register("green_oak_beam", () -> new WoodBeamBlock(GREEN_OAK_LOG));
		GREEN_OAK_SIGN = BLOCKS.register("green_oak_sign", () -> new LOTRStandingSignBlock(GREEN_OAK_PLANKS, LOTRSignTypes.GREEN_OAK));
		GREEN_OAK_WALL_SIGN = BLOCKS.register("green_oak_wall_sign", () -> new LOTRWallSignBlock(GREEN_OAK_SIGN));
		RED_OAK_LEAVES = BLOCKS.register("red_oak_leaves", () -> new LOTRLeavesBlock(MaterialColor.TERRACOTTA_RED).setFallingParticle(LOTRParticles.RED_OAK_LEAF, 40));
		RED_OAK_SAPLING = BLOCKS.register("red_oak_sapling", () -> new LOTRSaplingBlock(new RedOakTree()));
		POTTED_RED_OAK_SAPLING = BLOCKS.register("potted_red_oak_sapling", () -> new LOTRPottedPlantBlock(RED_OAK_SAPLING));
		MOSSY_GALADHRIM_BRICK = BLOCKS.register("mossy_galadhrim_brick", () -> new LOTRStoneBlock(GALADHRIM_BRICK));
		MOSSY_GALADHRIM_BRICK_SLAB = BLOCKS.register("mossy_galadhrim_brick_slab", () -> new AxialSlabBlock(MOSSY_GALADHRIM_BRICK));
		MOSSY_GALADHRIM_BRICK_STAIRS = BLOCKS.register("mossy_galadhrim_brick_stairs", () -> new LOTRStairsBlock(MOSSY_GALADHRIM_BRICK));
		MOSSY_GALADHRIM_BRICK_WALL = BLOCKS.register("mossy_galadhrim_brick_wall", () -> new LOTRWallBlock(MOSSY_GALADHRIM_BRICK));
		CRACKED_GALADHRIM_BRICK = BLOCKS.register("cracked_galadhrim_brick", () -> new LOTRStoneBlock(GALADHRIM_BRICK));
		CRACKED_GALADHRIM_BRICK_SLAB = BLOCKS.register("cracked_galadhrim_brick_slab", () -> new AxialSlabBlock(CRACKED_GALADHRIM_BRICK));
		CRACKED_GALADHRIM_BRICK_STAIRS = BLOCKS.register("cracked_galadhrim_brick_stairs", () -> new LOTRStairsBlock(CRACKED_GALADHRIM_BRICK));
		CRACKED_GALADHRIM_BRICK_WALL = BLOCKS.register("cracked_galadhrim_brick_wall", () -> new LOTRWallBlock(CRACKED_GALADHRIM_BRICK));
		CARVED_GALADHRIM_BRICK = BLOCKS.register("carved_galadhrim_brick", () -> new LOTRStoneBlock(GALADHRIM_BRICK));
		HANGING_WEB = BLOCKS.register("hanging_web", HangingWebBlock::new);
		ARID_GRASS = BLOCKS.register("arid_grass", () -> new AridGrassBlock(() -> TALL_ARID_GRASS.get()));
		WHITE_CHRYSANTHEMUM = BLOCKS.register("white_chrysanthemum", () -> new LOTRFlowerBlock(Effects.MOVEMENT_SLOWDOWN, 9));
		YELLOW_CHRYSANTHEMUM = BLOCKS.register("yellow_chrysanthemum", () -> new LOTRFlowerBlock(Effects.WEAKNESS, 9));
		PINK_CHRYSANTHEMUM = BLOCKS.register("pink_chrysanthemum", () -> new LOTRFlowerBlock(Effects.REGENERATION, 10));
		RED_CHRYSANTHEMUM = BLOCKS.register("red_chrysanthemum", () -> new LOTRFlowerBlock(Effects.HEALTH_BOOST, 10));
		ORANGE_CHRYSANTHEMUM = BLOCKS.register("orange_chrysanthemum", () -> new LOTRFlowerBlock(Effects.FIRE_RESISTANCE, 4));
		POTTED_WHITE_CHRYSANTHEMUM = BLOCKS.register("potted_white_chrysanthemum", () -> new LOTRPottedPlantBlock(WHITE_CHRYSANTHEMUM));
		POTTED_YELLOW_CHRYSANTHEMUM = BLOCKS.register("potted_yellow_chrysanthemum", () -> new LOTRPottedPlantBlock(YELLOW_CHRYSANTHEMUM));
		POTTED_PINK_CHRYSANTHEMUM = BLOCKS.register("potted_pink_chrysanthemum", () -> new LOTRPottedPlantBlock(PINK_CHRYSANTHEMUM));
		POTTED_RED_CHRYSANTHEMUM = BLOCKS.register("potted_red_chrysanthemum", () -> new LOTRPottedPlantBlock(RED_CHRYSANTHEMUM));
		POTTED_ORANGE_CHRYSANTHEMUM = BLOCKS.register("potted_orange_chrysanthemum", () -> new LOTRPottedPlantBlock(ORANGE_CHRYSANTHEMUM));
		BRONZE_LANTERN = BLOCKS.register("bronze_lantern", BronzeLanternBlock::new);
		MOSSY_DWARVEN_BRICK = BLOCKS.register("mossy_dwarven_brick", () -> new LOTRStoneBlock(DWARVEN_BRICK));
		MOSSY_DWARVEN_BRICK_SLAB = BLOCKS.register("mossy_dwarven_brick_slab", () -> new AxialSlabBlock(MOSSY_DWARVEN_BRICK));
		MOSSY_DWARVEN_BRICK_STAIRS = BLOCKS.register("mossy_dwarven_brick_stairs", () -> new LOTRStairsBlock(MOSSY_DWARVEN_BRICK));
		MOSSY_DWARVEN_BRICK_WALL = BLOCKS.register("mossy_dwarven_brick_wall", () -> new LOTRWallBlock(MOSSY_DWARVEN_BRICK));
		CRACKED_DWARVEN_BRICK = BLOCKS.register("cracked_dwarven_brick", () -> new LOTRStoneBlock(DWARVEN_BRICK));
		CRACKED_DWARVEN_BRICK_SLAB = BLOCKS.register("cracked_dwarven_brick_slab", () -> new AxialSlabBlock(CRACKED_DWARVEN_BRICK));
		CRACKED_DWARVEN_BRICK_STAIRS = BLOCKS.register("cracked_dwarven_brick_stairs", () -> new LOTRStairsBlock(CRACKED_DWARVEN_BRICK));
		CRACKED_DWARVEN_BRICK_WALL = BLOCKS.register("cracked_dwarven_brick_wall", () -> new LOTRWallBlock(CRACKED_DWARVEN_BRICK));
		SNOWY_DWARVEN_BRICK = BLOCKS.register("snowy_dwarven_brick", () -> new LOTRStoneBlock(DWARVEN_BRICK));
		SNOWY_DWARVEN_BRICK_SLAB = BLOCKS.register("snowy_dwarven_brick_slab", () -> new AxialSlabBlock(SNOWY_DWARVEN_BRICK));
		SNOWY_DWARVEN_BRICK_STAIRS = BLOCKS.register("snowy_dwarven_brick_stairs", () -> new LOTRStairsBlock(SNOWY_DWARVEN_BRICK));
		SNOWY_DWARVEN_BRICK_WALL = BLOCKS.register("snowy_dwarven_brick_wall", () -> new LOTRWallBlock(SNOWY_DWARVEN_BRICK));
		CARVED_DWARVEN_BRICK = BLOCKS.register("carved_dwarven_brick", () -> new LOTRStoneBlock(DWARVEN_BRICK));
		MOSSY_WOOD_ELVEN_BRICK = BLOCKS.register("mossy_wood_elven_brick", () -> new LOTRStoneBlock(WOOD_ELVEN_BRICK));
		MOSSY_WOOD_ELVEN_BRICK_SLAB = BLOCKS.register("mossy_wood_elven_brick_slab", () -> new AxialSlabBlock(MOSSY_WOOD_ELVEN_BRICK));
		MOSSY_WOOD_ELVEN_BRICK_STAIRS = BLOCKS.register("mossy_wood_elven_brick_stairs", () -> new LOTRStairsBlock(MOSSY_WOOD_ELVEN_BRICK));
		MOSSY_WOOD_ELVEN_BRICK_WALL = BLOCKS.register("mossy_wood_elven_brick_wall", () -> new LOTRWallBlock(MOSSY_WOOD_ELVEN_BRICK));
		CRACKED_WOOD_ELVEN_BRICK = BLOCKS.register("cracked_wood_elven_brick", () -> new LOTRStoneBlock(WOOD_ELVEN_BRICK));
		CRACKED_WOOD_ELVEN_BRICK_SLAB = BLOCKS.register("cracked_wood_elven_brick_slab", () -> new AxialSlabBlock(CRACKED_WOOD_ELVEN_BRICK));
		CRACKED_WOOD_ELVEN_BRICK_STAIRS = BLOCKS.register("cracked_wood_elven_brick_stairs", () -> new LOTRStairsBlock(CRACKED_WOOD_ELVEN_BRICK));
		CRACKED_WOOD_ELVEN_BRICK_WALL = BLOCKS.register("cracked_wood_elven_brick_wall", () -> new LOTRWallBlock(CRACKED_WOOD_ELVEN_BRICK));
		CARVED_WOOD_ELVEN_BRICK = BLOCKS.register("carved_wood_elven_brick", () -> new LOTRStoneBlock(WOOD_ELVEN_BRICK));
		ARNOR_BRICK = BLOCKS.register("arnor_brick", () -> new LOTRStoneBlock(MaterialColor.STONE));
		ARNOR_BRICK_SLAB = BLOCKS.register("arnor_brick_slab", () -> new AxialSlabBlock(ARNOR_BRICK));
		ARNOR_BRICK_STAIRS = BLOCKS.register("arnor_brick_stairs", () -> new LOTRStairsBlock(ARNOR_BRICK));
		ARNOR_BRICK_WALL = BLOCKS.register("arnor_brick_wall", () -> new LOTRWallBlock(ARNOR_BRICK));
		MOSSY_ARNOR_BRICK = BLOCKS.register("mossy_arnor_brick", () -> new LOTRStoneBlock(ARNOR_BRICK));
		MOSSY_ARNOR_BRICK_SLAB = BLOCKS.register("mossy_arnor_brick_slab", () -> new AxialSlabBlock(MOSSY_ARNOR_BRICK));
		MOSSY_ARNOR_BRICK_STAIRS = BLOCKS.register("mossy_arnor_brick_stairs", () -> new LOTRStairsBlock(MOSSY_ARNOR_BRICK));
		MOSSY_ARNOR_BRICK_WALL = BLOCKS.register("mossy_arnor_brick_wall", () -> new LOTRWallBlock(MOSSY_ARNOR_BRICK));
		CRACKED_ARNOR_BRICK = BLOCKS.register("cracked_arnor_brick", () -> new LOTRStoneBlock(ARNOR_BRICK));
		CRACKED_ARNOR_BRICK_SLAB = BLOCKS.register("cracked_arnor_brick_slab", () -> new AxialSlabBlock(CRACKED_ARNOR_BRICK));
		CRACKED_ARNOR_BRICK_STAIRS = BLOCKS.register("cracked_arnor_brick_stairs", () -> new LOTRStairsBlock(CRACKED_ARNOR_BRICK));
		CRACKED_ARNOR_BRICK_WALL = BLOCKS.register("cracked_arnor_brick_wall", () -> new LOTRWallBlock(CRACKED_ARNOR_BRICK));
		CARVED_ARNOR_BRICK = BLOCKS.register("carved_arnor_brick", () -> new LOTRStoneBlock(ARNOR_BRICK));
		ARNOR_PILLAR = BLOCKS.register("arnor_pillar", () -> new LOTRPillarBlock(MaterialColor.STONE));
		ARNOR_PILLAR_SLAB = BLOCKS.register("arnor_pillar_slab", () -> new AxialSlabBlock(ARNOR_PILLAR));
		RANGER_CRAFTING_TABLE = BLOCKS.register("ranger_crafting_table", () -> new FactionCraftingTableBlock.Ranger(() -> Blocks.OAK_PLANKS));
		GONDOR_COBBLEBRICK = BLOCKS.register("gondor_cobblebrick", () -> new LOTRStoneBlock(MaterialColor.WOOL));
		GONDOR_COBBLEBRICK_SLAB = BLOCKS.register("gondor_cobblebrick_slab", () -> new AxialSlabBlock(GONDOR_COBBLEBRICK));
		GONDOR_COBBLEBRICK_STAIRS = BLOCKS.register("gondor_cobblebrick_stairs", () -> new LOTRStairsBlock(GONDOR_COBBLEBRICK));
		GONDOR_COBBLEBRICK_WALL = BLOCKS.register("gondor_cobblebrick_wall", () -> new LOTRWallBlock(GONDOR_COBBLEBRICK));
		MOSSY_GONDOR_COBBLEBRICK = BLOCKS.register("mossy_gondor_cobblebrick", () -> new LOTRStoneBlock(GONDOR_COBBLEBRICK));
		MOSSY_GONDOR_COBBLEBRICK_SLAB = BLOCKS.register("mossy_gondor_cobblebrick_slab", () -> new AxialSlabBlock(MOSSY_GONDOR_COBBLEBRICK));
		MOSSY_GONDOR_COBBLEBRICK_STAIRS = BLOCKS.register("mossy_gondor_cobblebrick_stairs", () -> new LOTRStairsBlock(MOSSY_GONDOR_COBBLEBRICK));
		MOSSY_GONDOR_COBBLEBRICK_WALL = BLOCKS.register("mossy_gondor_cobblebrick_wall", () -> new LOTRWallBlock(MOSSY_GONDOR_COBBLEBRICK));
		CRACKED_GONDOR_COBBLEBRICK = BLOCKS.register("cracked_gondor_cobblebrick", () -> new LOTRStoneBlock(GONDOR_COBBLEBRICK));
		CRACKED_GONDOR_COBBLEBRICK_SLAB = BLOCKS.register("cracked_gondor_cobblebrick_slab", () -> new AxialSlabBlock(CRACKED_GONDOR_COBBLEBRICK));
		CRACKED_GONDOR_COBBLEBRICK_STAIRS = BLOCKS.register("cracked_gondor_cobblebrick_stairs", () -> new LOTRStairsBlock(CRACKED_GONDOR_COBBLEBRICK));
		CRACKED_GONDOR_COBBLEBRICK_WALL = BLOCKS.register("cracked_gondor_cobblebrick_wall", () -> new LOTRWallBlock(CRACKED_GONDOR_COBBLEBRICK));
		DOL_AMROTH_BRICK = BLOCKS.register("dol_amroth_brick", () -> new BrickWithAboveBlock(MaterialColor.WOOL, LOTRTags.Blocks.DOL_AMROTH_BRICKS));
		DOL_AMROTH_BRICK_SLAB = BLOCKS.register("dol_amroth_brick_slab", () -> new AxialSlabBlock(DOL_AMROTH_BRICK));
		DOL_AMROTH_BRICK_STAIRS = BLOCKS.register("dol_amroth_brick_stairs", () -> new LOTRStairsBlock(DOL_AMROTH_BRICK));
		DOL_AMROTH_BRICK_WALL = BLOCKS.register("dol_amroth_brick_wall", () -> new LOTRWallBlock(DOL_AMROTH_BRICK));
		MOSSY_DOL_AMROTH_BRICK = BLOCKS.register("mossy_dol_amroth_brick", () -> new BrickWithAboveBlock(DOL_AMROTH_BRICK, LOTRTags.Blocks.DOL_AMROTH_BRICKS));
		MOSSY_DOL_AMROTH_BRICK_SLAB = BLOCKS.register("mossy_dol_amroth_brick_slab", () -> new AxialSlabBlock(MOSSY_DOL_AMROTH_BRICK));
		MOSSY_DOL_AMROTH_BRICK_STAIRS = BLOCKS.register("mossy_dol_amroth_brick_stairs", () -> new LOTRStairsBlock(MOSSY_DOL_AMROTH_BRICK));
		MOSSY_DOL_AMROTH_BRICK_WALL = BLOCKS.register("mossy_dol_amroth_brick_wall", () -> new LOTRWallBlock(MOSSY_DOL_AMROTH_BRICK));
		CRACKED_DOL_AMROTH_BRICK = BLOCKS.register("cracked_dol_amroth_brick", () -> new BrickWithAboveBlock(DOL_AMROTH_BRICK, LOTRTags.Blocks.DOL_AMROTH_BRICKS));
		CRACKED_DOL_AMROTH_BRICK_SLAB = BLOCKS.register("cracked_dol_amroth_brick_slab", () -> new AxialSlabBlock(CRACKED_DOL_AMROTH_BRICK));
		CRACKED_DOL_AMROTH_BRICK_STAIRS = BLOCKS.register("cracked_dol_amroth_brick_stairs", () -> new LOTRStairsBlock(CRACKED_DOL_AMROTH_BRICK));
		CRACKED_DOL_AMROTH_BRICK_WALL = BLOCKS.register("cracked_dol_amroth_brick_wall", () -> new LOTRWallBlock(CRACKED_DOL_AMROTH_BRICK));
		DOL_AMROTH_CRAFTING_TABLE = BLOCKS.register("dol_amroth_crafting_table", () -> new FactionCraftingTableBlock.DolAmroth(DOL_AMROTH_BRICK));
		CLAY_TILING = BLOCKS.register("clay_tiling", () -> new ClayTilingBlock(MaterialColor.COLOR_ORANGE));
		WHITE_CLAY_TILING = BLOCKS.register("white_clay_tiling", () -> new ClayTilingBlock(DyeColor.WHITE));
		ORANGE_CLAY_TILING = BLOCKS.register("orange_clay_tiling", () -> new ClayTilingBlock(DyeColor.ORANGE));
		MAGENTA_CLAY_TILING = BLOCKS.register("magenta_clay_tiling", () -> new ClayTilingBlock(DyeColor.MAGENTA));
		LIGHT_BLUE_CLAY_TILING = BLOCKS.register("light_blue_clay_tiling", () -> new ClayTilingBlock(DyeColor.LIGHT_BLUE));
		YELLOW_CLAY_TILING = BLOCKS.register("yellow_clay_tiling", () -> new ClayTilingBlock(DyeColor.YELLOW));
		LIME_CLAY_TILING = BLOCKS.register("lime_clay_tiling", () -> new ClayTilingBlock(DyeColor.LIME));
		PINK_CLAY_TILING = BLOCKS.register("pink_clay_tiling", () -> new ClayTilingBlock(DyeColor.PINK));
		GRAY_CLAY_TILING = BLOCKS.register("gray_clay_tiling", () -> new ClayTilingBlock(DyeColor.GRAY));
		LIGHT_GRAY_CLAY_TILING = BLOCKS.register("light_gray_clay_tiling", () -> new ClayTilingBlock(DyeColor.LIGHT_GRAY));
		CYAN_CLAY_TILING = BLOCKS.register("cyan_clay_tiling", () -> new ClayTilingBlock(DyeColor.CYAN));
		PURPLE_CLAY_TILING = BLOCKS.register("purple_clay_tiling", () -> new ClayTilingBlock(DyeColor.PURPLE));
		BLUE_CLAY_TILING = BLOCKS.register("blue_clay_tiling", () -> new ClayTilingBlock(DyeColor.BLUE));
		BROWN_CLAY_TILING = BLOCKS.register("brown_clay_tiling", () -> new ClayTilingBlock(DyeColor.BROWN));
		GREEN_CLAY_TILING = BLOCKS.register("green_clay_tiling", () -> new ClayTilingBlock(DyeColor.GREEN));
		RED_CLAY_TILING = BLOCKS.register("red_clay_tiling", () -> new ClayTilingBlock(DyeColor.RED));
		BLACK_CLAY_TILING = BLOCKS.register("black_clay_tiling", () -> new ClayTilingBlock(DyeColor.BLACK));
		CLAY_TILING_SLAB = BLOCKS.register("clay_tiling_slab", () -> new AxialSlabBlock(CLAY_TILING));
		WHITE_CLAY_TILING_SLAB = BLOCKS.register("white_clay_tiling_slab", () -> new AxialSlabBlock(WHITE_CLAY_TILING));
		ORANGE_CLAY_TILING_SLAB = BLOCKS.register("orange_clay_tiling_slab", () -> new AxialSlabBlock(ORANGE_CLAY_TILING));
		MAGENTA_CLAY_TILING_SLAB = BLOCKS.register("magenta_clay_tiling_slab", () -> new AxialSlabBlock(MAGENTA_CLAY_TILING));
		LIGHT_BLUE_CLAY_TILING_SLAB = BLOCKS.register("light_blue_clay_tiling_slab", () -> new AxialSlabBlock(LIGHT_BLUE_CLAY_TILING));
		YELLOW_CLAY_TILING_SLAB = BLOCKS.register("yellow_clay_tiling_slab", () -> new AxialSlabBlock(YELLOW_CLAY_TILING));
		LIME_CLAY_TILING_SLAB = BLOCKS.register("lime_clay_tiling_slab", () -> new AxialSlabBlock(LIME_CLAY_TILING));
		PINK_CLAY_TILING_SLAB = BLOCKS.register("pink_clay_tiling_slab", () -> new AxialSlabBlock(PINK_CLAY_TILING));
		GRAY_CLAY_TILING_SLAB = BLOCKS.register("gray_clay_tiling_slab", () -> new AxialSlabBlock(GRAY_CLAY_TILING));
		LIGHT_GRAY_CLAY_TILING_SLAB = BLOCKS.register("light_gray_clay_tiling_slab", () -> new AxialSlabBlock(LIGHT_GRAY_CLAY_TILING));
		CYAN_CLAY_TILING_SLAB = BLOCKS.register("cyan_clay_tiling_slab", () -> new AxialSlabBlock(CYAN_CLAY_TILING));
		PURPLE_CLAY_TILING_SLAB = BLOCKS.register("purple_clay_tiling_slab", () -> new AxialSlabBlock(PURPLE_CLAY_TILING));
		BLUE_CLAY_TILING_SLAB = BLOCKS.register("blue_clay_tiling_slab", () -> new AxialSlabBlock(BLUE_CLAY_TILING));
		BROWN_CLAY_TILING_SLAB = BLOCKS.register("brown_clay_tiling_slab", () -> new AxialSlabBlock(BROWN_CLAY_TILING));
		GREEN_CLAY_TILING_SLAB = BLOCKS.register("green_clay_tiling_slab", () -> new AxialSlabBlock(GREEN_CLAY_TILING));
		RED_CLAY_TILING_SLAB = BLOCKS.register("red_clay_tiling_slab", () -> new AxialSlabBlock(RED_CLAY_TILING));
		BLACK_CLAY_TILING_SLAB = BLOCKS.register("black_clay_tiling_slab", () -> new AxialSlabBlock(BLACK_CLAY_TILING));
		CLAY_TILING_STAIRS = BLOCKS.register("clay_tiling_stairs", () -> new LOTRStairsBlock(CLAY_TILING));
		WHITE_CLAY_TILING_STAIRS = BLOCKS.register("white_clay_tiling_stairs", () -> new LOTRStairsBlock(WHITE_CLAY_TILING));
		ORANGE_CLAY_TILING_STAIRS = BLOCKS.register("orange_clay_tiling_stairs", () -> new LOTRStairsBlock(ORANGE_CLAY_TILING));
		MAGENTA_CLAY_TILING_STAIRS = BLOCKS.register("magenta_clay_tiling_stairs", () -> new LOTRStairsBlock(MAGENTA_CLAY_TILING));
		LIGHT_BLUE_CLAY_TILING_STAIRS = BLOCKS.register("light_blue_clay_tiling_stairs", () -> new LOTRStairsBlock(LIGHT_BLUE_CLAY_TILING));
		YELLOW_CLAY_TILING_STAIRS = BLOCKS.register("yellow_clay_tiling_stairs", () -> new LOTRStairsBlock(YELLOW_CLAY_TILING));
		LIME_CLAY_TILING_STAIRS = BLOCKS.register("lime_clay_tiling_stairs", () -> new LOTRStairsBlock(LIME_CLAY_TILING));
		PINK_CLAY_TILING_STAIRS = BLOCKS.register("pink_clay_tiling_stairs", () -> new LOTRStairsBlock(PINK_CLAY_TILING));
		GRAY_CLAY_TILING_STAIRS = BLOCKS.register("gray_clay_tiling_stairs", () -> new LOTRStairsBlock(GRAY_CLAY_TILING));
		LIGHT_GRAY_CLAY_TILING_STAIRS = BLOCKS.register("light_gray_clay_tiling_stairs", () -> new LOTRStairsBlock(LIGHT_GRAY_CLAY_TILING));
		CYAN_CLAY_TILING_STAIRS = BLOCKS.register("cyan_clay_tiling_stairs", () -> new LOTRStairsBlock(CYAN_CLAY_TILING));
		PURPLE_CLAY_TILING_STAIRS = BLOCKS.register("purple_clay_tiling_stairs", () -> new LOTRStairsBlock(PURPLE_CLAY_TILING));
		BLUE_CLAY_TILING_STAIRS = BLOCKS.register("blue_clay_tiling_stairs", () -> new LOTRStairsBlock(BLUE_CLAY_TILING));
		BROWN_CLAY_TILING_STAIRS = BLOCKS.register("brown_clay_tiling_stairs", () -> new LOTRStairsBlock(BROWN_CLAY_TILING));
		GREEN_CLAY_TILING_STAIRS = BLOCKS.register("green_clay_tiling_stairs", () -> new LOTRStairsBlock(GREEN_CLAY_TILING));
		RED_CLAY_TILING_STAIRS = BLOCKS.register("red_clay_tiling_stairs", () -> new LOTRStairsBlock(RED_CLAY_TILING));
		BLACK_CLAY_TILING_STAIRS = BLOCKS.register("black_clay_tiling_stairs", () -> new LOTRStairsBlock(BLACK_CLAY_TILING));
		CLAY_TILING_WALL = BLOCKS.register("clay_tiling_wall", () -> new LOTRWallBlock(CLAY_TILING));
		WHITE_CLAY_TILING_WALL = BLOCKS.register("white_clay_tiling_wall", () -> new LOTRWallBlock(WHITE_CLAY_TILING));
		ORANGE_CLAY_TILING_WALL = BLOCKS.register("orange_clay_tiling_wall", () -> new LOTRWallBlock(ORANGE_CLAY_TILING));
		MAGENTA_CLAY_TILING_WALL = BLOCKS.register("magenta_clay_tiling_wall", () -> new LOTRWallBlock(MAGENTA_CLAY_TILING));
		LIGHT_BLUE_CLAY_TILING_WALL = BLOCKS.register("light_blue_clay_tiling_wall", () -> new LOTRWallBlock(LIGHT_BLUE_CLAY_TILING));
		YELLOW_CLAY_TILING_WALL = BLOCKS.register("yellow_clay_tiling_wall", () -> new LOTRWallBlock(YELLOW_CLAY_TILING));
		LIME_CLAY_TILING_WALL = BLOCKS.register("lime_clay_tiling_wall", () -> new LOTRWallBlock(LIME_CLAY_TILING));
		PINK_CLAY_TILING_WALL = BLOCKS.register("pink_clay_tiling_wall", () -> new LOTRWallBlock(PINK_CLAY_TILING));
		GRAY_CLAY_TILING_WALL = BLOCKS.register("gray_clay_tiling_wall", () -> new LOTRWallBlock(GRAY_CLAY_TILING));
		LIGHT_GRAY_CLAY_TILING_WALL = BLOCKS.register("light_gray_clay_tiling_wall", () -> new LOTRWallBlock(LIGHT_GRAY_CLAY_TILING));
		CYAN_CLAY_TILING_WALL = BLOCKS.register("cyan_clay_tiling_wall", () -> new LOTRWallBlock(CYAN_CLAY_TILING));
		PURPLE_CLAY_TILING_WALL = BLOCKS.register("purple_clay_tiling_wall", () -> new LOTRWallBlock(PURPLE_CLAY_TILING));
		BLUE_CLAY_TILING_WALL = BLOCKS.register("blue_clay_tiling_wall", () -> new LOTRWallBlock(BLUE_CLAY_TILING));
		BROWN_CLAY_TILING_WALL = BLOCKS.register("brown_clay_tiling_wall", () -> new LOTRWallBlock(BROWN_CLAY_TILING));
		GREEN_CLAY_TILING_WALL = BLOCKS.register("green_clay_tiling_wall", () -> new LOTRWallBlock(GREEN_CLAY_TILING));
		RED_CLAY_TILING_WALL = BLOCKS.register("red_clay_tiling_wall", () -> new LOTRWallBlock(RED_CLAY_TILING));
		BLACK_CLAY_TILING_WALL = BLOCKS.register("black_clay_tiling_wall", () -> new LOTRWallBlock(BLACK_CLAY_TILING));
		FINE_GLASS = BLOCKS.register("fine_glass", LOTRGlassBlock::new);
		WHITE_FINE_GLASS = BLOCKS.register("white_fine_glass", () -> new LOTRStainedGlassBlock(DyeColor.WHITE));
		ORANGE_FINE_GLASS = BLOCKS.register("orange_fine_glass", () -> new LOTRStainedGlassBlock(DyeColor.ORANGE));
		MAGENTA_FINE_GLASS = BLOCKS.register("magenta_fine_glass", () -> new LOTRStainedGlassBlock(DyeColor.MAGENTA));
		LIGHT_BLUE_FINE_GLASS = BLOCKS.register("light_blue_fine_glass", () -> new LOTRStainedGlassBlock(DyeColor.LIGHT_BLUE));
		YELLOW_FINE_GLASS = BLOCKS.register("yellow_fine_glass", () -> new LOTRStainedGlassBlock(DyeColor.YELLOW));
		LIME_FINE_GLASS = BLOCKS.register("lime_fine_glass", () -> new LOTRStainedGlassBlock(DyeColor.LIME));
		PINK_FINE_GLASS = BLOCKS.register("pink_fine_glass", () -> new LOTRStainedGlassBlock(DyeColor.PINK));
		GRAY_FINE_GLASS = BLOCKS.register("gray_fine_glass", () -> new LOTRStainedGlassBlock(DyeColor.GRAY));
		LIGHT_GRAY_FINE_GLASS = BLOCKS.register("light_gray_fine_glass", () -> new LOTRStainedGlassBlock(DyeColor.LIGHT_GRAY));
		CYAN_FINE_GLASS = BLOCKS.register("cyan_fine_glass", () -> new LOTRStainedGlassBlock(DyeColor.CYAN));
		PURPLE_FINE_GLASS = BLOCKS.register("purple_fine_glass", () -> new LOTRStainedGlassBlock(DyeColor.PURPLE));
		BLUE_FINE_GLASS = BLOCKS.register("blue_fine_glass", () -> new LOTRStainedGlassBlock(DyeColor.BLUE));
		BROWN_FINE_GLASS = BLOCKS.register("brown_fine_glass", () -> new LOTRStainedGlassBlock(DyeColor.BROWN));
		GREEN_FINE_GLASS = BLOCKS.register("green_fine_glass", () -> new LOTRStainedGlassBlock(DyeColor.GREEN));
		RED_FINE_GLASS = BLOCKS.register("red_fine_glass", () -> new LOTRStainedGlassBlock(DyeColor.RED));
		BLACK_FINE_GLASS = BLOCKS.register("black_fine_glass", () -> new LOTRStainedGlassBlock(DyeColor.BLACK));
		FINE_GLASS_PANE = BLOCKS.register("fine_glass_pane", LOTRGlassPaneBlock::new);
		WHITE_FINE_GLASS_PANE = BLOCKS.register("white_fine_glass_pane", () -> new LOTRStainedGlassPaneBlock(DyeColor.WHITE));
		ORANGE_FINE_GLASS_PANE = BLOCKS.register("orange_fine_glass_pane", () -> new LOTRStainedGlassPaneBlock(DyeColor.ORANGE));
		MAGENTA_FINE_GLASS_PANE = BLOCKS.register("magenta_fine_glass_pane", () -> new LOTRStainedGlassPaneBlock(DyeColor.MAGENTA));
		LIGHT_BLUE_FINE_GLASS_PANE = BLOCKS.register("light_blue_fine_glass_pane", () -> new LOTRStainedGlassPaneBlock(DyeColor.LIGHT_BLUE));
		YELLOW_FINE_GLASS_PANE = BLOCKS.register("yellow_fine_glass_pane", () -> new LOTRStainedGlassPaneBlock(DyeColor.YELLOW));
		LIME_FINE_GLASS_PANE = BLOCKS.register("lime_fine_glass_pane", () -> new LOTRStainedGlassPaneBlock(DyeColor.LIME));
		PINK_FINE_GLASS_PANE = BLOCKS.register("pink_fine_glass_pane", () -> new LOTRStainedGlassPaneBlock(DyeColor.PINK));
		GRAY_FINE_GLASS_PANE = BLOCKS.register("gray_fine_glass_pane", () -> new LOTRStainedGlassPaneBlock(DyeColor.GRAY));
		LIGHT_GRAY_FINE_GLASS_PANE = BLOCKS.register("light_gray_fine_glass_pane", () -> new LOTRStainedGlassPaneBlock(DyeColor.LIGHT_GRAY));
		CYAN_FINE_GLASS_PANE = BLOCKS.register("cyan_fine_glass_pane", () -> new LOTRStainedGlassPaneBlock(DyeColor.CYAN));
		PURPLE_FINE_GLASS_PANE = BLOCKS.register("purple_fine_glass_pane", () -> new LOTRStainedGlassPaneBlock(DyeColor.PURPLE));
		BLUE_FINE_GLASS_PANE = BLOCKS.register("blue_fine_glass_pane", () -> new LOTRStainedGlassPaneBlock(DyeColor.BLUE));
		BROWN_FINE_GLASS_PANE = BLOCKS.register("brown_fine_glass_pane", () -> new LOTRStainedGlassPaneBlock(DyeColor.BROWN));
		GREEN_FINE_GLASS_PANE = BLOCKS.register("green_fine_glass_pane", () -> new LOTRStainedGlassPaneBlock(DyeColor.GREEN));
		RED_FINE_GLASS_PANE = BLOCKS.register("red_fine_glass_pane", () -> new LOTRStainedGlassPaneBlock(DyeColor.RED));
		BLACK_FINE_GLASS_PANE = BLOCKS.register("black_fine_glass_pane", () -> new LOTRStainedGlassPaneBlock(DyeColor.BLACK));
		ORC_PLATING = BLOCKS.register("orc_plating", OrcPlatingBlock::new);
		RUSTED_ORC_PLATING = BLOCKS.register("rusted_orc_plating", OrcPlatingBlock::new);
		CARVED_NUMENOREAN_BRICK = BLOCKS.register("carved_numenorean_brick", () -> new LOTRStoneBlock(NUMENOREAN_BRICK));
		MOSSY_UMBAR_BRICK = BLOCKS.register("mossy_umbar_brick", () -> new LOTRStoneBlock(UMBAR_BRICK));
		MOSSY_UMBAR_BRICK_SLAB = BLOCKS.register("mossy_umbar_brick_slab", () -> new AxialSlabBlock(MOSSY_UMBAR_BRICK));
		MOSSY_UMBAR_BRICK_STAIRS = BLOCKS.register("mossy_umbar_brick_stairs", () -> new LOTRStairsBlock(MOSSY_UMBAR_BRICK));
		MOSSY_UMBAR_BRICK_WALL = BLOCKS.register("mossy_umbar_brick_wall", () -> new LOTRWallBlock(MOSSY_UMBAR_BRICK));
		CRACKED_UMBAR_BRICK = BLOCKS.register("cracked_umbar_brick", () -> new LOTRStoneBlock(UMBAR_BRICK));
		CRACKED_UMBAR_BRICK_SLAB = BLOCKS.register("cracked_umbar_brick_slab", () -> new AxialSlabBlock(CRACKED_UMBAR_BRICK));
		CRACKED_UMBAR_BRICK_STAIRS = BLOCKS.register("cracked_umbar_brick_stairs", () -> new LOTRStairsBlock(CRACKED_UMBAR_BRICK));
		CRACKED_UMBAR_BRICK_WALL = BLOCKS.register("cracked_umbar_brick_wall", () -> new LOTRWallBlock(CRACKED_UMBAR_BRICK));
		CARVED_BRICK = BLOCKS.register("carved_brick", () -> new LOTRStoneBlock(() -> Blocks.BRICKS));
		ORC_PLATING_SLAB = BLOCKS.register("orc_plating_slab", () -> new AxialSlabBlock(ORC_PLATING));
		ORC_PLATING_STAIRS = BLOCKS.register("orc_plating_stairs", () -> new LOTRStairsBlock(ORC_PLATING));
		RUSTED_ORC_PLATING_SLAB = BLOCKS.register("rusted_orc_plating_slab", () -> new AxialSlabBlock(RUSTED_ORC_PLATING));
		RUSTED_ORC_PLATING_STAIRS = BLOCKS.register("rusted_orc_plating_stairs", () -> new LOTRStairsBlock(RUSTED_ORC_PLATING));
		WHITE_WOOL_SLAB = BLOCKS.register("white_wool_slab", () -> new AxialSlabBlock(Blocks.WHITE_WOOL));
		ORANGE_WOOL_SLAB = BLOCKS.register("orange_wool_slab", () -> new AxialSlabBlock(Blocks.ORANGE_WOOL));
		MAGENTA_WOOL_SLAB = BLOCKS.register("magenta_wool_slab", () -> new AxialSlabBlock(Blocks.MAGENTA_WOOL));
		LIGHT_BLUE_WOOL_SLAB = BLOCKS.register("light_blue_wool_slab", () -> new AxialSlabBlock(Blocks.LIGHT_BLUE_WOOL));
		YELLOW_WOOL_SLAB = BLOCKS.register("yellow_wool_slab", () -> new AxialSlabBlock(Blocks.YELLOW_WOOL));
		LIME_WOOL_SLAB = BLOCKS.register("lime_wool_slab", () -> new AxialSlabBlock(Blocks.LIME_WOOL));
		PINK_WOOL_SLAB = BLOCKS.register("pink_wool_slab", () -> new AxialSlabBlock(Blocks.PINK_WOOL));
		GRAY_WOOL_SLAB = BLOCKS.register("gray_wool_slab", () -> new AxialSlabBlock(Blocks.GRAY_WOOL));
		LIGHT_GRAY_WOOL_SLAB = BLOCKS.register("light_gray_wool_slab", () -> new AxialSlabBlock(Blocks.LIGHT_GRAY_WOOL));
		CYAN_WOOL_SLAB = BLOCKS.register("cyan_wool_slab", () -> new AxialSlabBlock(Blocks.CYAN_WOOL));
		PURPLE_WOOL_SLAB = BLOCKS.register("purple_wool_slab", () -> new AxialSlabBlock(Blocks.PURPLE_WOOL));
		BLUE_WOOL_SLAB = BLOCKS.register("blue_wool_slab", () -> new AxialSlabBlock(Blocks.BLUE_WOOL));
		BROWN_WOOL_SLAB = BLOCKS.register("brown_wool_slab", () -> new AxialSlabBlock(Blocks.BROWN_WOOL));
		GREEN_WOOL_SLAB = BLOCKS.register("green_wool_slab", () -> new AxialSlabBlock(Blocks.GREEN_WOOL));
		RED_WOOL_SLAB = BLOCKS.register("red_wool_slab", () -> new AxialSlabBlock(Blocks.RED_WOOL));
		BLACK_WOOL_SLAB = BLOCKS.register("black_wool_slab", () -> new AxialSlabBlock(Blocks.BLACK_WOOL));
		WHITE_WOOL_STAIRS = BLOCKS.register("white_wool_stairs", () -> new LOTRStairsBlock(Blocks.WHITE_WOOL));
		ORANGE_WOOL_STAIRS = BLOCKS.register("orange_wool_stairs", () -> new LOTRStairsBlock(Blocks.ORANGE_WOOL));
		MAGENTA_WOOL_STAIRS = BLOCKS.register("magenta_wool_stairs", () -> new LOTRStairsBlock(Blocks.MAGENTA_WOOL));
		LIGHT_BLUE_WOOL_STAIRS = BLOCKS.register("light_blue_wool_stairs", () -> new LOTRStairsBlock(Blocks.LIGHT_BLUE_WOOL));
		YELLOW_WOOL_STAIRS = BLOCKS.register("yellow_wool_stairs", () -> new LOTRStairsBlock(Blocks.YELLOW_WOOL));
		LIME_WOOL_STAIRS = BLOCKS.register("lime_wool_stairs", () -> new LOTRStairsBlock(Blocks.LIME_WOOL));
		PINK_WOOL_STAIRS = BLOCKS.register("pink_wool_stairs", () -> new LOTRStairsBlock(Blocks.PINK_WOOL));
		GRAY_WOOL_STAIRS = BLOCKS.register("gray_wool_stairs", () -> new LOTRStairsBlock(Blocks.GRAY_WOOL));
		LIGHT_GRAY_WOOL_STAIRS = BLOCKS.register("light_gray_wool_stairs", () -> new LOTRStairsBlock(Blocks.LIGHT_GRAY_WOOL));
		CYAN_WOOL_STAIRS = BLOCKS.register("cyan_wool_stairs", () -> new LOTRStairsBlock(Blocks.CYAN_WOOL));
		PURPLE_WOOL_STAIRS = BLOCKS.register("purple_wool_stairs", () -> new LOTRStairsBlock(Blocks.PURPLE_WOOL));
		BLUE_WOOL_STAIRS = BLOCKS.register("blue_wool_stairs", () -> new LOTRStairsBlock(Blocks.BLUE_WOOL));
		BROWN_WOOL_STAIRS = BLOCKS.register("brown_wool_stairs", () -> new LOTRStairsBlock(Blocks.BROWN_WOOL));
		GREEN_WOOL_STAIRS = BLOCKS.register("green_wool_stairs", () -> new LOTRStairsBlock(Blocks.GREEN_WOOL));
		RED_WOOL_STAIRS = BLOCKS.register("red_wool_stairs", () -> new LOTRStairsBlock(Blocks.RED_WOOL));
		BLACK_WOOL_STAIRS = BLOCKS.register("black_wool_stairs", () -> new LOTRStairsBlock(Blocks.BLACK_WOOL));
		ANGMAR_BRICK = BLOCKS.register("angmar_brick", () -> new LOTRStoneBlock(MaterialColor.COLOR_GRAY));
		ANGMAR_BRICK_SLAB = BLOCKS.register("angmar_brick_slab", () -> new AxialSlabBlock(ANGMAR_BRICK));
		ANGMAR_BRICK_STAIRS = BLOCKS.register("angmar_brick_stairs", () -> new LOTRStairsBlock(ANGMAR_BRICK));
		ANGMAR_BRICK_WALL = BLOCKS.register("angmar_brick_wall", () -> new LOTRWallBlock(ANGMAR_BRICK));
		ANGMAR_CRAFTING_TABLE = BLOCKS.register("angmar_crafting_table", () -> new FactionCraftingTableBlock.Angmar(ANGMAR_BRICK));
		MOSSY_ANGMAR_BRICK = BLOCKS.register("mossy_angmar_brick", () -> new LOTRStoneBlock(ANGMAR_BRICK));
		MOSSY_ANGMAR_BRICK_SLAB = BLOCKS.register("mossy_angmar_brick_slab", () -> new AxialSlabBlock(MOSSY_ANGMAR_BRICK));
		MOSSY_ANGMAR_BRICK_STAIRS = BLOCKS.register("mossy_angmar_brick_stairs", () -> new LOTRStairsBlock(MOSSY_ANGMAR_BRICK));
		MOSSY_ANGMAR_BRICK_WALL = BLOCKS.register("mossy_angmar_brick_wall", () -> new LOTRWallBlock(MOSSY_ANGMAR_BRICK));
		CRACKED_ANGMAR_BRICK = BLOCKS.register("cracked_angmar_brick", () -> new LOTRStoneBlock(ANGMAR_BRICK));
		CRACKED_ANGMAR_BRICK_SLAB = BLOCKS.register("cracked_angmar_brick_slab", () -> new AxialSlabBlock(CRACKED_ANGMAR_BRICK));
		CRACKED_ANGMAR_BRICK_STAIRS = BLOCKS.register("cracked_angmar_brick_stairs", () -> new LOTRStairsBlock(CRACKED_ANGMAR_BRICK));
		CRACKED_ANGMAR_BRICK_WALL = BLOCKS.register("cracked_angmar_brick_wall", () -> new LOTRWallBlock(CRACKED_ANGMAR_BRICK));
		SNOWY_ANGMAR_BRICK = BLOCKS.register("snowy_angmar_brick", () -> new LOTRStoneBlock(ANGMAR_BRICK));
		SNOWY_ANGMAR_BRICK_SLAB = BLOCKS.register("snowy_angmar_brick_slab", () -> new AxialSlabBlock(SNOWY_ANGMAR_BRICK));
		SNOWY_ANGMAR_BRICK_STAIRS = BLOCKS.register("snowy_angmar_brick_stairs", () -> new LOTRStairsBlock(SNOWY_ANGMAR_BRICK));
		SNOWY_ANGMAR_BRICK_WALL = BLOCKS.register("snowy_angmar_brick_wall", () -> new LOTRWallBlock(SNOWY_ANGMAR_BRICK));
		PURPLE_MOOR_GRASS = BLOCKS.register("purple_moor_grass", LOTRGrassBlock::new);
		RED_MOOR_GRASS = BLOCKS.register("red_moor_grass", LOTRGrassBlock::new);
		TALL_WHEATGRASS = BLOCKS.register("tall_wheatgrass", LOTRDoubleGrassBlock::new);
		TALL_ARID_GRASS = BLOCKS.register("tall_arid_grass", DoubleAridGrassBlock::new);
		CARVED_ANGMAR_BRICK = BLOCKS.register("carved_angmar_brick", () -> new LOTRStoneBlock(ANGMAR_BRICK));
		ANGMAR_PILLAR = BLOCKS.register("angmar_pillar", () -> new LOTRPillarBlock(MaterialColor.COLOR_GRAY));
		ANGMAR_PILLAR_SLAB = BLOCKS.register("angmar_pillar_slab", () -> new AxialSlabBlock(ANGMAR_PILLAR));
		CHALK = BLOCKS.register("chalk", () -> new ChalkBlock(MaterialColor.QUARTZ, 0.5F, 0.5F));
		CHALK_SLAB = BLOCKS.register("chalk_slab", () -> new AxialSlabBlock(CHALK));
		CHALK_STAIRS = BLOCKS.register("chalk_stairs", () -> new LOTRStairsBlock(CHALK));
		CHALK_WALL = BLOCKS.register("chalk_wall", () -> new LOTRWallBlock(CHALK));
		CHALK_BRICK = BLOCKS.register("chalk_brick", () -> new LOTRStoneBlock(MaterialColor.QUARTZ, 0.8F, 0.8F));
		CHALK_BRICK_SLAB = BLOCKS.register("chalk_brick_slab", () -> new AxialSlabBlock(CHALK_BRICK));
		CHALK_BRICK_STAIRS = BLOCKS.register("chalk_brick_stairs", () -> new LOTRStairsBlock(CHALK_BRICK));
		CHALK_BRICK_WALL = BLOCKS.register("chalk_brick_wall", () -> new LOTRWallBlock(CHALK_BRICK));
		CHALK_PILLAR = BLOCKS.register("chalk_pillar", () -> new LOTRPillarBlock(MaterialColor.QUARTZ));
		CHALK_PILLAR_SLAB = BLOCKS.register("chalk_pillar_slab", () -> new AxialSlabBlock(CHALK_PILLAR));
		CHALK_DRIPSTONE = BLOCKS.register("chalk_dripstone", () -> new DripstoneBlock(CHALK));
		GONDOR_ROCK_PRESSURE_PLATE = BLOCKS.register("gondor_rock_pressure_plate", () -> new LOTRStonePressurePlateBlock(GONDOR_ROCK));
		MORDOR_ROCK_PRESSURE_PLATE = BLOCKS.register("mordor_rock_pressure_plate", () -> new LOTRStonePressurePlateBlock(MORDOR_ROCK));
		ROHAN_ROCK_PRESSURE_PLATE = BLOCKS.register("rohan_rock_pressure_plate", () -> new LOTRStonePressurePlateBlock(ROHAN_ROCK));
		BLUE_ROCK_PRESSURE_PLATE = BLOCKS.register("blue_rock_pressure_plate", () -> new LOTRStonePressurePlateBlock(BLUE_ROCK));
		RED_ROCK_PRESSURE_PLATE = BLOCKS.register("red_rock_pressure_plate", () -> new LOTRStonePressurePlateBlock(RED_ROCK));
		CHALK_PRESSURE_PLATE = BLOCKS.register("chalk_pressure_plate", () -> new LOTRStonePressurePlateBlock(CHALK));
		GONDOR_ROCK_BUTTON = BLOCKS.register("gondor_rock_button", LOTRStoneButtonBlock::new);
		MORDOR_ROCK_BUTTON = BLOCKS.register("mordor_rock_button", LOTRStoneButtonBlock::new);
		ROHAN_ROCK_BUTTON = BLOCKS.register("rohan_rock_button", LOTRStoneButtonBlock::new);
		BLUE_ROCK_BUTTON = BLOCKS.register("blue_rock_button", LOTRStoneButtonBlock::new);
		RED_ROCK_BUTTON = BLOCKS.register("red_rock_button", LOTRStoneButtonBlock::new);
		CHALK_BUTTON = BLOCKS.register("chalk_button", LOTRStoneButtonBlock::new);
		POLISHED_CHALK = BLOCKS.register("polished_chalk", () -> new LOTRStoneBlock(CHALK));
		POLISHED_CHALK_SLAB = BLOCKS.register("polished_chalk_slab", () -> new AxialSlabBlock(POLISHED_CHALK));
		POLISHED_CHALK_STAIRS = BLOCKS.register("polished_chalk_stairs", () -> new LOTRStairsBlock(POLISHED_CHALK));
		POLISHED_CHALK_WALL = BLOCKS.register("polished_chalk_wall", () -> new LOTRWallBlock(POLISHED_CHALK));
		DIRTY_CHALK = BLOCKS.register("dirty_chalk", () -> new DirtyChalkBlock(CHALK));
		DORWINION_BRICK = BLOCKS.register("dorwinion_brick", () -> new LOTRStoneBlock(MaterialColor.TERRACOTTA_WHITE));
		DORWINION_BRICK_SLAB = BLOCKS.register("dorwinion_brick_slab", () -> new AxialSlabBlock(DORWINION_BRICK));
		DORWINION_BRICK_STAIRS = BLOCKS.register("dorwinion_brick_stairs", () -> new LOTRStairsBlock(DORWINION_BRICK));
		DORWINION_BRICK_WALL = BLOCKS.register("dorwinion_brick_wall", () -> new LOTRWallBlock(DORWINION_BRICK));
		DORWINION_CRAFTING_TABLE = BLOCKS.register("dorwinion_crafting_table", () -> new FactionCraftingTableBlock.Dorwinion(() -> Blocks.OAK_PLANKS));
		MOSSY_DORWINION_BRICK = BLOCKS.register("mossy_dorwinion_brick", () -> new LOTRStoneBlock(DORWINION_BRICK));
		MOSSY_DORWINION_BRICK_SLAB = BLOCKS.register("mossy_dorwinion_brick_slab", () -> new AxialSlabBlock(MOSSY_DORWINION_BRICK));
		MOSSY_DORWINION_BRICK_STAIRS = BLOCKS.register("mossy_dorwinion_brick_stairs", () -> new LOTRStairsBlock(MOSSY_DORWINION_BRICK));
		MOSSY_DORWINION_BRICK_WALL = BLOCKS.register("mossy_dorwinion_brick_wall", () -> new LOTRWallBlock(MOSSY_DORWINION_BRICK));
		CRACKED_DORWINION_BRICK = BLOCKS.register("cracked_dorwinion_brick", () -> new LOTRStoneBlock(DORWINION_BRICK));
		CRACKED_DORWINION_BRICK_SLAB = BLOCKS.register("cracked_dorwinion_brick_slab", () -> new AxialSlabBlock(CRACKED_DORWINION_BRICK));
		CRACKED_DORWINION_BRICK_STAIRS = BLOCKS.register("cracked_dorwinion_brick_stairs", () -> new LOTRStairsBlock(CRACKED_DORWINION_BRICK));
		CRACKED_DORWINION_BRICK_WALL = BLOCKS.register("cracked_dorwinion_brick_wall", () -> new LOTRWallBlock(CRACKED_DORWINION_BRICK));
		RED_DORWINION_BRICK = BLOCKS.register("red_dorwinion_brick", () -> new LOTRStoneBlock(MaterialColor.TERRACOTTA_RED));
		RED_DORWINION_BRICK_SLAB = BLOCKS.register("red_dorwinion_brick_slab", () -> new AxialSlabBlock(RED_DORWINION_BRICK));
		RED_DORWINION_BRICK_STAIRS = BLOCKS.register("red_dorwinion_brick_stairs", () -> new LOTRStairsBlock(RED_DORWINION_BRICK));
		RED_DORWINION_BRICK_WALL = BLOCKS.register("red_dorwinion_brick_wall", () -> new LOTRWallBlock(RED_DORWINION_BRICK));
		MOSSY_RED_DORWINION_BRICK = BLOCKS.register("mossy_red_dorwinion_brick", () -> new LOTRStoneBlock(RED_DORWINION_BRICK));
		MOSSY_RED_DORWINION_BRICK_SLAB = BLOCKS.register("mossy_red_dorwinion_brick_slab", () -> new AxialSlabBlock(MOSSY_RED_DORWINION_BRICK));
		MOSSY_RED_DORWINION_BRICK_STAIRS = BLOCKS.register("mossy_red_dorwinion_brick_stairs", () -> new LOTRStairsBlock(MOSSY_RED_DORWINION_BRICK));
		MOSSY_RED_DORWINION_BRICK_WALL = BLOCKS.register("mossy_red_dorwinion_brick_wall", () -> new LOTRWallBlock(MOSSY_RED_DORWINION_BRICK));
		CRACKED_RED_DORWINION_BRICK = BLOCKS.register("cracked_red_dorwinion_brick", () -> new LOTRStoneBlock(RED_DORWINION_BRICK));
		CRACKED_RED_DORWINION_BRICK_SLAB = BLOCKS.register("cracked_red_dorwinion_brick_slab", () -> new AxialSlabBlock(CRACKED_RED_DORWINION_BRICK));
		CRACKED_RED_DORWINION_BRICK_STAIRS = BLOCKS.register("cracked_red_dorwinion_brick_stairs", () -> new LOTRStairsBlock(CRACKED_RED_DORWINION_BRICK));
		CRACKED_RED_DORWINION_BRICK_WALL = BLOCKS.register("cracked_red_dorwinion_brick_wall", () -> new LOTRWallBlock(CRACKED_RED_DORWINION_BRICK));
		DORWINION_PILLAR = BLOCKS.register("dorwinion_pillar", () -> new LOTRPillarBlock(MaterialColor.TERRACOTTA_WHITE));
		DORWINION_PILLAR_SLAB = BLOCKS.register("dorwinion_pillar_slab", () -> new AxialSlabBlock(DORWINION_PILLAR));
		WHITE_SAND = BLOCKS.register("white_sand", () -> new LOTRSandBlock(15856113, MaterialColor.WOOL));
		WHITE_SANDSTONE = BLOCKS.register("white_sandstone", () -> new LOTRSandstoneBlock(MaterialColor.WOOL));
		WHITE_SANDSTONE_SLAB = BLOCKS.register("white_sandstone_slab", () -> new AxialSlabBlock(WHITE_SANDSTONE));
		WHITE_SANDSTONE_STAIRS = BLOCKS.register("white_sandstone_stairs", () -> new LOTRStairsBlock(WHITE_SANDSTONE));
		WHITE_SANDSTONE_WALL = BLOCKS.register("white_sandstone_wall", () -> new LOTRWallBlock(WHITE_SANDSTONE));
		WHITE_SANDSTONE_DRIPSTONE = BLOCKS.register("white_sandstone_dripstone", () -> new DripstoneBlock(WHITE_SANDSTONE));
		CUT_WHITE_SANDSTONE = BLOCKS.register("cut_white_sandstone", () -> new LOTRSandstoneBlock(MaterialColor.WOOL));
		CUT_WHITE_SANDSTONE_SLAB = BLOCKS.register("cut_white_sandstone_slab", () -> new AxialSlabBlock(CUT_WHITE_SANDSTONE));
		CHISELED_WHITE_SANDSTONE = BLOCKS.register("chiseled_white_sandstone", () -> new LOTRSandstoneBlock(MaterialColor.WOOL));
		SMOOTH_WHITE_SANDSTONE = BLOCKS.register("smooth_white_sandstone", () -> new LOTRSandstoneBlock(MaterialColor.WOOL));
		SMOOTH_WHITE_SANDSTONE_SLAB = BLOCKS.register("smooth_white_sandstone_slab", () -> new AxialSlabBlock(SMOOTH_WHITE_SANDSTONE));
		SMOOTH_WHITE_SANDSTONE_STAIRS = BLOCKS.register("smooth_white_sandstone_stairs", () -> new LOTRStairsBlock(SMOOTH_WHITE_SANDSTONE));
		CYPRESS_LOG = BLOCKS.register("cypress_log", () -> new StrippableLogBlock(MaterialColor.SAND, MaterialColor.DIRT, () -> STRIPPED_CYPRESS_LOG.get()));
		CYPRESS_WOOD = BLOCKS.register("cypress_wood", () -> new StrippableWoodBlock(CYPRESS_LOG, () -> STRIPPED_CYPRESS_WOOD.get()));
		CYPRESS_PLANKS = BLOCKS.register("cypress_planks", () -> new LOTRPlanksBlock(MaterialColor.SAND));
		CYPRESS_LEAVES = BLOCKS.register("cypress_leaves", LOTRLeavesBlock::new);
		CYPRESS_SAPLING = BLOCKS.register("cypress_sapling", () -> new LOTRSaplingBlock(new CypressTree()));
		POTTED_CYPRESS_SAPLING = BLOCKS.register("potted_cypress_sapling", () -> new LOTRPottedPlantBlock(CYPRESS_SAPLING));
		CYPRESS_SLAB = BLOCKS.register("cypress_slab", () -> new AxialSlabBlock(CYPRESS_PLANKS));
		CYPRESS_STAIRS = BLOCKS.register("cypress_stairs", () -> new LOTRStairsBlock(CYPRESS_PLANKS));
		CYPRESS_FENCE = BLOCKS.register("cypress_fence", () -> new LOTRFenceBlock(CYPRESS_PLANKS));
		CYPRESS_FENCE_GATE = BLOCKS.register("cypress_fence_gate", () -> new LOTRFenceGateBlock(CYPRESS_PLANKS));
		CYPRESS_DOOR = BLOCKS.register("cypress_door", () -> new LOTRDoorBlock(CYPRESS_PLANKS));
		CYPRESS_TRAPDOOR = BLOCKS.register("cypress_trapdoor", () -> new LOTRTrapdoorBlock(CYPRESS_PLANKS));
		CYPRESS_PRESSURE_PLATE = BLOCKS.register("cypress_pressure_plate", () -> new LOTRWoodPressurePlateBlock(CYPRESS_PLANKS));
		CYPRESS_BUTTON = BLOCKS.register("cypress_button", LOTRWoodButtonBlock::new);
		STRIPPED_CYPRESS_LOG = BLOCKS.register("stripped_cypress_log", () -> new LOTRStrippedLogBlock(CYPRESS_LOG));
		STRIPPED_CYPRESS_WOOD = BLOCKS.register("stripped_cypress_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_CYPRESS_LOG));
		CYPRESS_BEAM = BLOCKS.register("cypress_beam", () -> new WoodBeamBlock(CYPRESS_LOG));
		CYPRESS_SIGN = BLOCKS.register("cypress_sign", () -> new LOTRStandingSignBlock(CYPRESS_PLANKS, LOTRSignTypes.CYPRESS));
		CYPRESS_WALL_SIGN = BLOCKS.register("cypress_wall_sign", () -> new LOTRWallSignBlock(CYPRESS_SIGN));
		DALE_BRICK = BLOCKS.register("dale_brick", () -> new LOTRStoneBlock(MaterialColor.TERRACOTTA_YELLOW));
		DALE_BRICK_SLAB = BLOCKS.register("dale_brick_slab", () -> new AxialSlabBlock(DALE_BRICK));
		DALE_BRICK_STAIRS = BLOCKS.register("dale_brick_stairs", () -> new LOTRStairsBlock(DALE_BRICK));
		DALE_BRICK_WALL = BLOCKS.register("dale_brick_wall", () -> new LOTRWallBlock(DALE_BRICK));
		MOSSY_DALE_BRICK = BLOCKS.register("mossy_dale_brick", () -> new LOTRStoneBlock(DALE_BRICK));
		MOSSY_DALE_BRICK_SLAB = BLOCKS.register("mossy_dale_brick_slab", () -> new AxialSlabBlock(MOSSY_DALE_BRICK));
		MOSSY_DALE_BRICK_STAIRS = BLOCKS.register("mossy_dale_brick_stairs", () -> new LOTRStairsBlock(MOSSY_DALE_BRICK));
		MOSSY_DALE_BRICK_WALL = BLOCKS.register("mossy_dale_brick_wall", () -> new LOTRWallBlock(MOSSY_DALE_BRICK));
		CRACKED_DALE_BRICK = BLOCKS.register("cracked_dale_brick", () -> new LOTRStoneBlock(DALE_BRICK));
		CRACKED_DALE_BRICK_SLAB = BLOCKS.register("cracked_dale_brick_slab", () -> new AxialSlabBlock(CRACKED_DALE_BRICK));
		CRACKED_DALE_BRICK_STAIRS = BLOCKS.register("cracked_dale_brick_stairs", () -> new LOTRStairsBlock(CRACKED_DALE_BRICK));
		CRACKED_DALE_BRICK_WALL = BLOCKS.register("cracked_dale_brick_wall", () -> new LOTRWallBlock(CRACKED_DALE_BRICK));
		DALE_CRAFTING_TABLE = BLOCKS.register("dale_crafting_table", () -> new FactionCraftingTableBlock.Dale(() -> Blocks.OAK_PLANKS));
		DALE_PILLAR = BLOCKS.register("dale_pillar", () -> new LOTRPillarBlock(MaterialColor.TERRACOTTA_YELLOW));
		DALE_PILLAR_SLAB = BLOCKS.register("dale_pillar_slab", () -> new AxialSlabBlock(DALE_PILLAR));
		CARVED_DALE_BRICK = BLOCKS.register("carved_dale_brick", () -> new DirectionalStoneBlock(DALE_BRICK));
		BLACKROOT = BLOCKS.register("blackroot", () -> new FlowerLikeBlock().setPlantShape(Block.box(2.0D, 0.0D, 2.0D, 14.0D, 15.0D, 14.0D)));
		POTTED_BLACKROOT = BLOCKS.register("potted_blackroot", () -> new LOTRPottedPlantBlock(BLACKROOT));
		DALE_PAVING = BLOCKS.register("dale_paving", () -> new LOTRStoneBlock(MaterialColor.TERRACOTTA_YELLOW));
		DALE_PAVING_SLAB = BLOCKS.register("dale_paving_slab", () -> new AxialSlabBlock(DALE_PAVING));
		DALE_PAVING_STAIRS = BLOCKS.register("dale_paving_stairs", () -> new LOTRStairsBlock(DALE_PAVING));
		MOSSY_DALE_PAVING = BLOCKS.register("mossy_dale_paving", () -> new LOTRStoneBlock(DALE_PAVING));
		MOSSY_DALE_PAVING_SLAB = BLOCKS.register("mossy_dale_paving_slab", () -> new AxialSlabBlock(MOSSY_DALE_PAVING));
		MOSSY_DALE_PAVING_STAIRS = BLOCKS.register("mossy_dale_paving_stairs", () -> new LOTRStairsBlock(MOSSY_DALE_PAVING));
		YELLOW_IRIS = BLOCKS.register("yellow_iris", WateryTallFlowerBlock::new);
		QUAGMIRE = BLOCKS.register("quagmire", QuagmireBlock::new);
		MALLOS = BLOCKS.register("mallos", () -> new LOTRFlowerBlock(Effects.DIG_SPEED, 8));
		POTTED_MALLOS = BLOCKS.register("potted_mallos", () -> new LOTRPottedPlantBlock(MALLOS));
		ROTTEN_LOG = BLOCKS.register("rotten_log", () -> new StrippableRottenLogBlock(MaterialColor.PODZOL, MaterialColor.COLOR_GRAY, () -> STRIPPED_ROTTEN_LOG.get()));
		ROTTEN_WOOD = BLOCKS.register("rotten_wood", () -> new StrippableWoodBlock(ROTTEN_LOG, () -> STRIPPED_ROTTEN_WOOD.get()));
		ROTTEN_PLANKS = BLOCKS.register("rotten_planks", () -> new LOTRPlanksBlock(MaterialColor.PODZOL));
		ROTTEN_SLAB = BLOCKS.register("rotten_slab", () -> new AxialSlabBlock(ROTTEN_PLANKS));
		ROTTEN_STAIRS = BLOCKS.register("rotten_stairs", () -> new LOTRStairsBlock(ROTTEN_PLANKS));
		ROTTEN_FENCE = BLOCKS.register("rotten_fence", () -> new LOTRFenceBlock(ROTTEN_PLANKS));
		ROTTEN_FENCE_GATE = BLOCKS.register("rotten_fence_gate", () -> new LOTRFenceGateBlock(ROTTEN_PLANKS));
		ROTTEN_DOOR = BLOCKS.register("rotten_door", () -> new LOTRDoorBlock(ROTTEN_PLANKS));
		ROTTEN_TRAPDOOR = BLOCKS.register("rotten_trapdoor", () -> new LOTRTrapdoorBlock(ROTTEN_PLANKS));
		ROTTEN_PRESSURE_PLATE = BLOCKS.register("rotten_pressure_plate", () -> new LOTRWoodPressurePlateBlock(ROTTEN_PLANKS));
		ROTTEN_BUTTON = BLOCKS.register("rotten_button", LOTRWoodButtonBlock::new);
		STRIPPED_ROTTEN_LOG = BLOCKS.register("stripped_rotten_log", () -> new StrippedRottenLogBlock(ROTTEN_LOG));
		STRIPPED_ROTTEN_WOOD = BLOCKS.register("stripped_rotten_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_ROTTEN_LOG));
		ROTTEN_BEAM = BLOCKS.register("rotten_beam", () -> new RottenWoodBeamBlock(ROTTEN_LOG));
		ROTTEN_SIGN = BLOCKS.register("rotten_sign", () -> new LOTRStandingSignBlock(ROTTEN_PLANKS, LOTRSignTypes.ROTTEN));
		ROTTEN_WALL_SIGN = BLOCKS.register("rotten_wall_sign", () -> new LOTRWallSignBlock(ROTTEN_SIGN));
		REEDS = BLOCKS.register("reeds", ReedsBlock::new);
		PAPYRUS = BLOCKS.register("papyrus", ReedsBlock::new);
		RUSHES = BLOCKS.register("rushes", RushesBlock::new);
		DRIED_REEDS = BLOCKS.register("dried_reeds", DriedReedsBlock::new);
		REED_THATCH = BLOCKS.register("reed_thatch", () -> new ThatchBlock(MaterialColor.TERRACOTTA_GREEN));
		REED_THATCH_SLAB = BLOCKS.register("reed_thatch_slab", () -> new ThatchSlabBlock(REED_THATCH));
		REED_THATCH_STAIRS = BLOCKS.register("reed_thatch_stairs", () -> new ThatchStairsBlock(REED_THATCH));
		WHITE_WATER_LILY = BLOCKS.register("white_water_lily", LOTRWaterLilyBlock::new);
		YELLOW_WATER_LILY = BLOCKS.register("yellow_water_lily", LOTRWaterLilyBlock::new);
		PURPLE_WATER_LILY = BLOCKS.register("purple_water_lily", LOTRWaterLilyBlock::new);
		PINK_WATER_LILY = BLOCKS.register("pink_water_lily", LOTRWaterLilyBlock::new);
		OAK_LOG_SLAB = BLOCKS.register("oak_log_slab", () -> new StrippableLogSlabBlock(Blocks.OAK_LOG, () -> STRIPPED_OAK_LOG_SLAB.get()));
		OAK_WOOD_SLAB = BLOCKS.register("oak_wood_slab", () -> new StrippableLogSlabBlock(Blocks.OAK_WOOD, () -> STRIPPED_OAK_WOOD_SLAB.get()));
		OAK_WOOD_STAIRS = BLOCKS.register("oak_wood_stairs", () -> new StrippableLogStairsBlock(Blocks.OAK_WOOD, () -> STRIPPED_OAK_WOOD_STAIRS.get()));
		OAK_BRANCH = BLOCKS.register("oak_branch", () -> new StrippableBranchBlock(Blocks.OAK_WOOD, () -> STRIPPED_OAK_BRANCH.get()));
		STRIPPED_OAK_LOG_SLAB = BLOCKS.register("stripped_oak_log_slab", () -> new LogSlabBlock(Blocks.STRIPPED_OAK_LOG));
		STRIPPED_OAK_WOOD_SLAB = BLOCKS.register("stripped_oak_wood_slab", () -> new LogSlabBlock(Blocks.STRIPPED_OAK_WOOD));
		STRIPPED_OAK_WOOD_STAIRS = BLOCKS.register("stripped_oak_wood_stairs", () -> new LogStairsBlock(Blocks.STRIPPED_OAK_WOOD));
		STRIPPED_OAK_BRANCH = BLOCKS.register("stripped_oak_branch", () -> new BranchBlock(Blocks.STRIPPED_OAK_WOOD));
		OAK_BEAM_SLAB = BLOCKS.register("oak_beam_slab", () -> new LogSlabBlock(OAK_BEAM));
		SPRUCE_LOG_SLAB = BLOCKS.register("spruce_log_slab", () -> new StrippableLogSlabBlock(Blocks.SPRUCE_LOG, () -> STRIPPED_SPRUCE_LOG_SLAB.get()));
		SPRUCE_WOOD_SLAB = BLOCKS.register("spruce_wood_slab", () -> new StrippableLogSlabBlock(Blocks.SPRUCE_WOOD, () -> STRIPPED_SPRUCE_WOOD_SLAB.get()));
		SPRUCE_WOOD_STAIRS = BLOCKS.register("spruce_wood_stairs", () -> new StrippableLogStairsBlock(Blocks.SPRUCE_WOOD, () -> STRIPPED_SPRUCE_WOOD_STAIRS.get()));
		SPRUCE_BRANCH = BLOCKS.register("spruce_branch", () -> new StrippableBranchBlock(Blocks.SPRUCE_WOOD, () -> STRIPPED_SPRUCE_BRANCH.get()));
		STRIPPED_SPRUCE_LOG_SLAB = BLOCKS.register("stripped_spruce_log_slab", () -> new LogSlabBlock(Blocks.STRIPPED_SPRUCE_LOG));
		STRIPPED_SPRUCE_WOOD_SLAB = BLOCKS.register("stripped_spruce_wood_slab", () -> new LogSlabBlock(Blocks.STRIPPED_SPRUCE_WOOD));
		STRIPPED_SPRUCE_WOOD_STAIRS = BLOCKS.register("stripped_spruce_wood_stairs", () -> new LogStairsBlock(Blocks.STRIPPED_SPRUCE_WOOD));
		STRIPPED_SPRUCE_BRANCH = BLOCKS.register("stripped_spruce_branch", () -> new BranchBlock(Blocks.STRIPPED_SPRUCE_WOOD));
		SPRUCE_BEAM_SLAB = BLOCKS.register("spruce_beam_slab", () -> new LogSlabBlock(SPRUCE_BEAM));
		BIRCH_LOG_SLAB = BLOCKS.register("birch_log_slab", () -> new StrippableLogSlabBlock(Blocks.BIRCH_LOG, () -> STRIPPED_BIRCH_LOG_SLAB.get()));
		BIRCH_WOOD_SLAB = BLOCKS.register("birch_wood_slab", () -> new StrippableLogSlabBlock(Blocks.BIRCH_WOOD, () -> STRIPPED_BIRCH_WOOD_SLAB.get()));
		BIRCH_WOOD_STAIRS = BLOCKS.register("birch_wood_stairs", () -> new StrippableLogStairsBlock(Blocks.BIRCH_WOOD, () -> STRIPPED_BIRCH_WOOD_STAIRS.get()));
		BIRCH_BRANCH = BLOCKS.register("birch_branch", () -> new StrippableBranchBlock(Blocks.BIRCH_WOOD, () -> STRIPPED_BIRCH_BRANCH.get()));
		STRIPPED_BIRCH_LOG_SLAB = BLOCKS.register("stripped_birch_log_slab", () -> new LogSlabBlock(Blocks.STRIPPED_BIRCH_LOG));
		STRIPPED_BIRCH_WOOD_SLAB = BLOCKS.register("stripped_birch_wood_slab", () -> new LogSlabBlock(Blocks.STRIPPED_BIRCH_WOOD));
		STRIPPED_BIRCH_WOOD_STAIRS = BLOCKS.register("stripped_birch_wood_stairs", () -> new LogStairsBlock(Blocks.STRIPPED_BIRCH_WOOD));
		STRIPPED_BIRCH_BRANCH = BLOCKS.register("stripped_birch_branch", () -> new BranchBlock(Blocks.STRIPPED_BIRCH_WOOD));
		BIRCH_BEAM_SLAB = BLOCKS.register("birch_beam_slab", () -> new LogSlabBlock(BIRCH_BEAM));
		JUNGLE_LOG_SLAB = BLOCKS.register("jungle_log_slab", () -> new StrippableLogSlabBlock(Blocks.JUNGLE_LOG, () -> STRIPPED_JUNGLE_LOG_SLAB.get()));
		JUNGLE_WOOD_SLAB = BLOCKS.register("jungle_wood_slab", () -> new StrippableLogSlabBlock(Blocks.JUNGLE_WOOD, () -> STRIPPED_JUNGLE_WOOD_SLAB.get()));
		JUNGLE_WOOD_STAIRS = BLOCKS.register("jungle_wood_stairs", () -> new StrippableLogStairsBlock(Blocks.JUNGLE_WOOD, () -> STRIPPED_JUNGLE_WOOD_STAIRS.get()));
		JUNGLE_BRANCH = BLOCKS.register("jungle_branch", () -> new StrippableBranchBlock(Blocks.JUNGLE_WOOD, () -> STRIPPED_JUNGLE_BRANCH.get()));
		STRIPPED_JUNGLE_LOG_SLAB = BLOCKS.register("stripped_jungle_log_slab", () -> new LogSlabBlock(Blocks.STRIPPED_JUNGLE_LOG));
		STRIPPED_JUNGLE_WOOD_SLAB = BLOCKS.register("stripped_jungle_wood_slab", () -> new LogSlabBlock(Blocks.STRIPPED_JUNGLE_WOOD));
		STRIPPED_JUNGLE_WOOD_STAIRS = BLOCKS.register("stripped_jungle_wood_stairs", () -> new LogStairsBlock(Blocks.STRIPPED_JUNGLE_WOOD));
		STRIPPED_JUNGLE_BRANCH = BLOCKS.register("stripped_jungle_branch", () -> new BranchBlock(Blocks.STRIPPED_JUNGLE_WOOD));
		JUNGLE_BEAM_SLAB = BLOCKS.register("jungle_beam_slab", () -> new LogSlabBlock(JUNGLE_BEAM));
		ACACIA_LOG_SLAB = BLOCKS.register("acacia_log_slab", () -> new StrippableLogSlabBlock(Blocks.ACACIA_LOG, () -> STRIPPED_ACACIA_LOG_SLAB.get()));
		ACACIA_WOOD_SLAB = BLOCKS.register("acacia_wood_slab", () -> new StrippableLogSlabBlock(Blocks.ACACIA_WOOD, () -> STRIPPED_ACACIA_WOOD_SLAB.get()));
		ACACIA_WOOD_STAIRS = BLOCKS.register("acacia_wood_stairs", () -> new StrippableLogStairsBlock(Blocks.ACACIA_WOOD, () -> STRIPPED_ACACIA_WOOD_STAIRS.get()));
		ACACIA_BRANCH = BLOCKS.register("acacia_branch", () -> new StrippableBranchBlock(Blocks.ACACIA_WOOD, () -> STRIPPED_ACACIA_BRANCH.get()));
		STRIPPED_ACACIA_LOG_SLAB = BLOCKS.register("stripped_acacia_log_slab", () -> new LogSlabBlock(Blocks.STRIPPED_ACACIA_LOG));
		STRIPPED_ACACIA_WOOD_SLAB = BLOCKS.register("stripped_acacia_wood_slab", () -> new LogSlabBlock(Blocks.STRIPPED_ACACIA_WOOD));
		STRIPPED_ACACIA_WOOD_STAIRS = BLOCKS.register("stripped_acacia_wood_stairs", () -> new LogStairsBlock(Blocks.STRIPPED_ACACIA_WOOD));
		STRIPPED_ACACIA_BRANCH = BLOCKS.register("stripped_acacia_branch", () -> new BranchBlock(Blocks.STRIPPED_ACACIA_WOOD));
		ACACIA_BEAM_SLAB = BLOCKS.register("acacia_beam_slab", () -> new LogSlabBlock(ACACIA_BEAM));
		DARK_OAK_LOG_SLAB = BLOCKS.register("dark_oak_log_slab", () -> new StrippableLogSlabBlock(Blocks.DARK_OAK_LOG, () -> STRIPPED_DARK_OAK_LOG_SLAB.get()));
		DARK_OAK_WOOD_SLAB = BLOCKS.register("dark_oak_wood_slab", () -> new StrippableLogSlabBlock(Blocks.DARK_OAK_WOOD, () -> STRIPPED_DARK_OAK_WOOD_SLAB.get()));
		DARK_OAK_WOOD_STAIRS = BLOCKS.register("dark_oak_wood_stairs", () -> new StrippableLogStairsBlock(Blocks.DARK_OAK_WOOD, () -> STRIPPED_DARK_OAK_WOOD_STAIRS.get()));
		DARK_OAK_BRANCH = BLOCKS.register("dark_oak_branch", () -> new StrippableBranchBlock(Blocks.DARK_OAK_WOOD, () -> STRIPPED_DARK_OAK_BRANCH.get()));
		STRIPPED_DARK_OAK_LOG_SLAB = BLOCKS.register("stripped_dark_oak_log_slab", () -> new LogSlabBlock(Blocks.STRIPPED_DARK_OAK_LOG));
		STRIPPED_DARK_OAK_WOOD_SLAB = BLOCKS.register("stripped_dark_oak_wood_slab", () -> new LogSlabBlock(Blocks.STRIPPED_DARK_OAK_WOOD));
		STRIPPED_DARK_OAK_WOOD_STAIRS = BLOCKS.register("stripped_dark_oak_wood_stairs", () -> new LogStairsBlock(Blocks.STRIPPED_DARK_OAK_WOOD));
		STRIPPED_DARK_OAK_BRANCH = BLOCKS.register("stripped_dark_oak_branch", () -> new BranchBlock(Blocks.STRIPPED_DARK_OAK_WOOD));
		DARK_OAK_BEAM_SLAB = BLOCKS.register("dark_oak_beam_slab", () -> new LogSlabBlock(DARK_OAK_BEAM));
		PINE_LOG_SLAB = BLOCKS.register("pine_log_slab", () -> new StrippableLogSlabBlock(PINE_LOG, () -> STRIPPED_PINE_LOG_SLAB.get()));
		PINE_WOOD_SLAB = BLOCKS.register("pine_wood_slab", () -> new StrippableLogSlabBlock(PINE_WOOD, () -> STRIPPED_PINE_WOOD_SLAB.get()));
		PINE_WOOD_STAIRS = BLOCKS.register("pine_wood_stairs", () -> new StrippableLogStairsBlock(PINE_WOOD, () -> STRIPPED_PINE_WOOD_STAIRS.get()));
		PINE_BRANCH = BLOCKS.register("pine_branch", () -> new StrippableBranchBlock(PINE_WOOD, () -> STRIPPED_PINE_BRANCH.get()));
		STRIPPED_PINE_LOG_SLAB = BLOCKS.register("stripped_pine_log_slab", () -> new LogSlabBlock(STRIPPED_PINE_LOG));
		STRIPPED_PINE_WOOD_SLAB = BLOCKS.register("stripped_pine_wood_slab", () -> new LogSlabBlock(STRIPPED_PINE_WOOD));
		STRIPPED_PINE_WOOD_STAIRS = BLOCKS.register("stripped_pine_wood_stairs", () -> new LogStairsBlock(STRIPPED_PINE_WOOD));
		STRIPPED_PINE_BRANCH = BLOCKS.register("stripped_pine_branch", () -> new BranchBlock(STRIPPED_PINE_WOOD));
		PINE_BEAM_SLAB = BLOCKS.register("pine_beam_slab", () -> new LogSlabBlock(PINE_BEAM));
		MALLORN_LOG_SLAB = BLOCKS.register("mallorn_log_slab", () -> new StrippableLogSlabBlock(MALLORN_LOG, () -> STRIPPED_MALLORN_LOG_SLAB.get()));
		MALLORN_WOOD_SLAB = BLOCKS.register("mallorn_wood_slab", () -> new StrippableLogSlabBlock(MALLORN_WOOD, () -> STRIPPED_MALLORN_WOOD_SLAB.get()));
		MALLORN_WOOD_STAIRS = BLOCKS.register("mallorn_wood_stairs", () -> new StrippableLogStairsBlock(MALLORN_WOOD, () -> STRIPPED_MALLORN_WOOD_STAIRS.get()));
		MALLORN_BRANCH = BLOCKS.register("mallorn_branch", () -> new StrippableBranchBlock(MALLORN_WOOD, () -> STRIPPED_MALLORN_BRANCH.get()));
		STRIPPED_MALLORN_LOG_SLAB = BLOCKS.register("stripped_mallorn_log_slab", () -> new LogSlabBlock(STRIPPED_MALLORN_LOG));
		STRIPPED_MALLORN_WOOD_SLAB = BLOCKS.register("stripped_mallorn_wood_slab", () -> new LogSlabBlock(STRIPPED_MALLORN_WOOD));
		STRIPPED_MALLORN_WOOD_STAIRS = BLOCKS.register("stripped_mallorn_wood_stairs", () -> new LogStairsBlock(STRIPPED_MALLORN_WOOD));
		STRIPPED_MALLORN_BRANCH = BLOCKS.register("stripped_mallorn_branch", () -> new BranchBlock(STRIPPED_MALLORN_WOOD));
		MALLORN_BEAM_SLAB = BLOCKS.register("mallorn_beam_slab", () -> new LogSlabBlock(MALLORN_BEAM));
		MIRK_OAK_LOG_SLAB = BLOCKS.register("mirk_oak_log_slab", () -> new StrippableLogSlabBlock(MIRK_OAK_LOG, () -> STRIPPED_MIRK_OAK_LOG_SLAB.get()));
		MIRK_OAK_WOOD_SLAB = BLOCKS.register("mirk_oak_wood_slab", () -> new StrippableLogSlabBlock(MIRK_OAK_WOOD, () -> STRIPPED_MIRK_OAK_WOOD_SLAB.get()));
		MIRK_OAK_WOOD_STAIRS = BLOCKS.register("mirk_oak_wood_stairs", () -> new StrippableLogStairsBlock(MIRK_OAK_WOOD, () -> STRIPPED_MIRK_OAK_WOOD_STAIRS.get()));
		MIRK_OAK_BRANCH = BLOCKS.register("mirk_oak_branch", () -> new StrippableBranchBlock(MIRK_OAK_WOOD, () -> STRIPPED_MIRK_OAK_BRANCH.get()));
		STRIPPED_MIRK_OAK_LOG_SLAB = BLOCKS.register("stripped_mirk_oak_log_slab", () -> new LogSlabBlock(STRIPPED_MIRK_OAK_LOG));
		STRIPPED_MIRK_OAK_WOOD_SLAB = BLOCKS.register("stripped_mirk_oak_wood_slab", () -> new LogSlabBlock(STRIPPED_MIRK_OAK_WOOD));
		STRIPPED_MIRK_OAK_WOOD_STAIRS = BLOCKS.register("stripped_mirk_oak_wood_stairs", () -> new LogStairsBlock(STRIPPED_MIRK_OAK_WOOD));
		STRIPPED_MIRK_OAK_BRANCH = BLOCKS.register("stripped_mirk_oak_branch", () -> new BranchBlock(STRIPPED_MIRK_OAK_WOOD));
		MIRK_OAK_BEAM_SLAB = BLOCKS.register("mirk_oak_beam_slab", () -> new LogSlabBlock(MIRK_OAK_BEAM));
		CHARRED_LOG_SLAB = BLOCKS.register("charred_log_slab", () -> new StrippableLogSlabBlock(CHARRED_LOG, () -> STRIPPED_CHARRED_LOG_SLAB.get()));
		CHARRED_WOOD_SLAB = BLOCKS.register("charred_wood_slab", () -> new StrippableLogSlabBlock(CHARRED_WOOD, () -> STRIPPED_CHARRED_WOOD_SLAB.get()));
		CHARRED_WOOD_STAIRS = BLOCKS.register("charred_wood_stairs", () -> new StrippableLogStairsBlock(CHARRED_WOOD, () -> STRIPPED_CHARRED_WOOD_STAIRS.get()));
		CHARRED_BRANCH = BLOCKS.register("charred_branch", () -> new StrippableBranchBlock(CHARRED_WOOD, () -> STRIPPED_CHARRED_BRANCH.get()));
		STRIPPED_CHARRED_LOG_SLAB = BLOCKS.register("stripped_charred_log_slab", () -> new LogSlabBlock(STRIPPED_CHARRED_LOG));
		STRIPPED_CHARRED_WOOD_SLAB = BLOCKS.register("stripped_charred_wood_slab", () -> new LogSlabBlock(STRIPPED_CHARRED_WOOD));
		STRIPPED_CHARRED_WOOD_STAIRS = BLOCKS.register("stripped_charred_wood_stairs", () -> new LogStairsBlock(STRIPPED_CHARRED_WOOD));
		STRIPPED_CHARRED_BRANCH = BLOCKS.register("stripped_charred_branch", () -> new BranchBlock(STRIPPED_CHARRED_WOOD));
		CHARRED_BEAM_SLAB = BLOCKS.register("charred_beam_slab", () -> new LogSlabBlock(CHARRED_BEAM));
		APPLE_LOG_SLAB = BLOCKS.register("apple_log_slab", () -> new StrippableLogSlabBlock(APPLE_LOG, () -> STRIPPED_APPLE_LOG_SLAB.get()));
		APPLE_WOOD_SLAB = BLOCKS.register("apple_wood_slab", () -> new StrippableLogSlabBlock(APPLE_WOOD, () -> STRIPPED_APPLE_WOOD_SLAB.get()));
		APPLE_WOOD_STAIRS = BLOCKS.register("apple_wood_stairs", () -> new StrippableLogStairsBlock(APPLE_WOOD, () -> STRIPPED_APPLE_WOOD_STAIRS.get()));
		APPLE_BRANCH = BLOCKS.register("apple_branch", () -> new StrippableBranchBlock(APPLE_WOOD, () -> STRIPPED_APPLE_BRANCH.get()));
		STRIPPED_APPLE_LOG_SLAB = BLOCKS.register("stripped_apple_log_slab", () -> new LogSlabBlock(STRIPPED_APPLE_LOG));
		STRIPPED_APPLE_WOOD_SLAB = BLOCKS.register("stripped_apple_wood_slab", () -> new LogSlabBlock(STRIPPED_APPLE_WOOD));
		STRIPPED_APPLE_WOOD_STAIRS = BLOCKS.register("stripped_apple_wood_stairs", () -> new LogStairsBlock(STRIPPED_APPLE_WOOD));
		STRIPPED_APPLE_BRANCH = BLOCKS.register("stripped_apple_branch", () -> new BranchBlock(STRIPPED_APPLE_WOOD));
		APPLE_BEAM_SLAB = BLOCKS.register("apple_beam_slab", () -> new LogSlabBlock(APPLE_BEAM));
		PEAR_LOG_SLAB = BLOCKS.register("pear_log_slab", () -> new StrippableLogSlabBlock(PEAR_LOG, () -> STRIPPED_PEAR_LOG_SLAB.get()));
		PEAR_WOOD_SLAB = BLOCKS.register("pear_wood_slab", () -> new StrippableLogSlabBlock(PEAR_WOOD, () -> STRIPPED_PEAR_WOOD_SLAB.get()));
		PEAR_WOOD_STAIRS = BLOCKS.register("pear_wood_stairs", () -> new StrippableLogStairsBlock(PEAR_WOOD, () -> STRIPPED_PEAR_WOOD_STAIRS.get()));
		PEAR_BRANCH = BLOCKS.register("pear_branch", () -> new StrippableBranchBlock(PEAR_WOOD, () -> STRIPPED_PEAR_BRANCH.get()));
		STRIPPED_PEAR_LOG_SLAB = BLOCKS.register("stripped_pear_log_slab", () -> new LogSlabBlock(STRIPPED_PEAR_LOG));
		STRIPPED_PEAR_WOOD_SLAB = BLOCKS.register("stripped_pear_wood_slab", () -> new LogSlabBlock(STRIPPED_PEAR_WOOD));
		STRIPPED_PEAR_WOOD_STAIRS = BLOCKS.register("stripped_pear_wood_stairs", () -> new LogStairsBlock(STRIPPED_PEAR_WOOD));
		STRIPPED_PEAR_BRANCH = BLOCKS.register("stripped_pear_branch", () -> new BranchBlock(STRIPPED_PEAR_WOOD));
		PEAR_BEAM_SLAB = BLOCKS.register("pear_beam_slab", () -> new LogSlabBlock(PEAR_BEAM));
		CHERRY_LOG_SLAB = BLOCKS.register("cherry_log_slab", () -> new StrippableLogSlabBlock(CHERRY_LOG, () -> STRIPPED_CHERRY_LOG_SLAB.get()));
		CHERRY_WOOD_SLAB = BLOCKS.register("cherry_wood_slab", () -> new StrippableLogSlabBlock(CHERRY_WOOD, () -> STRIPPED_CHERRY_WOOD_SLAB.get()));
		CHERRY_WOOD_STAIRS = BLOCKS.register("cherry_wood_stairs", () -> new StrippableLogStairsBlock(CHERRY_WOOD, () -> STRIPPED_CHERRY_WOOD_STAIRS.get()));
		CHERRY_BRANCH = BLOCKS.register("cherry_branch", () -> new StrippableBranchBlock(CHERRY_WOOD, () -> STRIPPED_CHERRY_BRANCH.get()));
		STRIPPED_CHERRY_LOG_SLAB = BLOCKS.register("stripped_cherry_log_slab", () -> new LogSlabBlock(STRIPPED_CHERRY_LOG));
		STRIPPED_CHERRY_WOOD_SLAB = BLOCKS.register("stripped_cherry_wood_slab", () -> new LogSlabBlock(STRIPPED_CHERRY_WOOD));
		STRIPPED_CHERRY_WOOD_STAIRS = BLOCKS.register("stripped_cherry_wood_stairs", () -> new LogStairsBlock(STRIPPED_CHERRY_WOOD));
		STRIPPED_CHERRY_BRANCH = BLOCKS.register("stripped_cherry_branch", () -> new BranchBlock(STRIPPED_CHERRY_WOOD));
		CHERRY_BEAM_SLAB = BLOCKS.register("cherry_beam_slab", () -> new LogSlabBlock(CHERRY_BEAM));
		LEBETHRON_LOG_SLAB = BLOCKS.register("lebethron_log_slab", () -> new StrippableLogSlabBlock(LEBETHRON_LOG, () -> STRIPPED_LEBETHRON_LOG_SLAB.get()));
		LEBETHRON_WOOD_SLAB = BLOCKS.register("lebethron_wood_slab", () -> new StrippableLogSlabBlock(LEBETHRON_WOOD, () -> STRIPPED_LEBETHRON_WOOD_SLAB.get()));
		LEBETHRON_WOOD_STAIRS = BLOCKS.register("lebethron_wood_stairs", () -> new StrippableLogStairsBlock(LEBETHRON_WOOD, () -> STRIPPED_LEBETHRON_WOOD_STAIRS.get()));
		LEBETHRON_BRANCH = BLOCKS.register("lebethron_branch", () -> new StrippableBranchBlock(LEBETHRON_WOOD, () -> STRIPPED_LEBETHRON_BRANCH.get()));
		STRIPPED_LEBETHRON_LOG_SLAB = BLOCKS.register("stripped_lebethron_log_slab", () -> new LogSlabBlock(STRIPPED_LEBETHRON_LOG));
		STRIPPED_LEBETHRON_WOOD_SLAB = BLOCKS.register("stripped_lebethron_wood_slab", () -> new LogSlabBlock(STRIPPED_LEBETHRON_WOOD));
		STRIPPED_LEBETHRON_WOOD_STAIRS = BLOCKS.register("stripped_lebethron_wood_stairs", () -> new LogStairsBlock(STRIPPED_LEBETHRON_WOOD));
		STRIPPED_LEBETHRON_BRANCH = BLOCKS.register("stripped_lebethron_branch", () -> new BranchBlock(STRIPPED_LEBETHRON_WOOD));
		LEBETHRON_BEAM_SLAB = BLOCKS.register("lebethron_beam_slab", () -> new LogSlabBlock(LEBETHRON_BEAM));
		BEECH_LOG_SLAB = BLOCKS.register("beech_log_slab", () -> new StrippableLogSlabBlock(BEECH_LOG, () -> STRIPPED_BEECH_LOG_SLAB.get()));
		BEECH_WOOD_SLAB = BLOCKS.register("beech_wood_slab", () -> new StrippableLogSlabBlock(BEECH_WOOD, () -> STRIPPED_BEECH_WOOD_SLAB.get()));
		BEECH_WOOD_STAIRS = BLOCKS.register("beech_wood_stairs", () -> new StrippableLogStairsBlock(BEECH_WOOD, () -> STRIPPED_BEECH_WOOD_STAIRS.get()));
		BEECH_BRANCH = BLOCKS.register("beech_branch", () -> new StrippableBranchBlock(BEECH_WOOD, () -> STRIPPED_BEECH_BRANCH.get()));
		STRIPPED_BEECH_LOG_SLAB = BLOCKS.register("stripped_beech_log_slab", () -> new LogSlabBlock(STRIPPED_BEECH_LOG));
		STRIPPED_BEECH_WOOD_SLAB = BLOCKS.register("stripped_beech_wood_slab", () -> new LogSlabBlock(STRIPPED_BEECH_WOOD));
		STRIPPED_BEECH_WOOD_STAIRS = BLOCKS.register("stripped_beech_wood_stairs", () -> new LogStairsBlock(STRIPPED_BEECH_WOOD));
		STRIPPED_BEECH_BRANCH = BLOCKS.register("stripped_beech_branch", () -> new BranchBlock(STRIPPED_BEECH_WOOD));
		BEECH_BEAM_SLAB = BLOCKS.register("beech_beam_slab", () -> new LogSlabBlock(BEECH_BEAM));
		MAPLE_LOG_SLAB = BLOCKS.register("maple_log_slab", () -> new StrippableLogSlabBlock(MAPLE_LOG, () -> STRIPPED_MAPLE_LOG_SLAB.get()));
		MAPLE_WOOD_SLAB = BLOCKS.register("maple_wood_slab", () -> new StrippableLogSlabBlock(MAPLE_WOOD, () -> STRIPPED_MAPLE_WOOD_SLAB.get()));
		MAPLE_WOOD_STAIRS = BLOCKS.register("maple_wood_stairs", () -> new StrippableLogStairsBlock(MAPLE_WOOD, () -> STRIPPED_MAPLE_WOOD_STAIRS.get()));
		MAPLE_BRANCH = BLOCKS.register("maple_branch", () -> new StrippableBranchBlock(MAPLE_WOOD, () -> STRIPPED_MAPLE_BRANCH.get()));
		STRIPPED_MAPLE_LOG_SLAB = BLOCKS.register("stripped_maple_log_slab", () -> new LogSlabBlock(STRIPPED_MAPLE_LOG));
		STRIPPED_MAPLE_WOOD_SLAB = BLOCKS.register("stripped_maple_wood_slab", () -> new LogSlabBlock(STRIPPED_MAPLE_WOOD));
		STRIPPED_MAPLE_WOOD_STAIRS = BLOCKS.register("stripped_maple_wood_stairs", () -> new LogStairsBlock(STRIPPED_MAPLE_WOOD));
		STRIPPED_MAPLE_BRANCH = BLOCKS.register("stripped_maple_branch", () -> new BranchBlock(STRIPPED_MAPLE_WOOD));
		MAPLE_BEAM_SLAB = BLOCKS.register("maple_beam_slab", () -> new LogSlabBlock(MAPLE_BEAM));
		ASPEN_LOG_SLAB = BLOCKS.register("aspen_log_slab", () -> new StrippableLogSlabBlock(ASPEN_LOG, () -> STRIPPED_ASPEN_LOG_SLAB.get()));
		ASPEN_WOOD_SLAB = BLOCKS.register("aspen_wood_slab", () -> new StrippableLogSlabBlock(ASPEN_WOOD, () -> STRIPPED_ASPEN_WOOD_SLAB.get()));
		ASPEN_WOOD_STAIRS = BLOCKS.register("aspen_wood_stairs", () -> new StrippableLogStairsBlock(ASPEN_WOOD, () -> STRIPPED_ASPEN_WOOD_STAIRS.get()));
		ASPEN_BRANCH = BLOCKS.register("aspen_branch", () -> new StrippableBranchBlock(ASPEN_WOOD, () -> STRIPPED_ASPEN_BRANCH.get()));
		STRIPPED_ASPEN_LOG_SLAB = BLOCKS.register("stripped_aspen_log_slab", () -> new LogSlabBlock(STRIPPED_ASPEN_LOG));
		STRIPPED_ASPEN_WOOD_SLAB = BLOCKS.register("stripped_aspen_wood_slab", () -> new LogSlabBlock(STRIPPED_ASPEN_WOOD));
		STRIPPED_ASPEN_WOOD_STAIRS = BLOCKS.register("stripped_aspen_wood_stairs", () -> new LogStairsBlock(STRIPPED_ASPEN_WOOD));
		STRIPPED_ASPEN_BRANCH = BLOCKS.register("stripped_aspen_branch", () -> new BranchBlock(STRIPPED_ASPEN_WOOD));
		ASPEN_BEAM_SLAB = BLOCKS.register("aspen_beam_slab", () -> new LogSlabBlock(ASPEN_BEAM));
		LAIRELOSSE_LOG_SLAB = BLOCKS.register("lairelosse_log_slab", () -> new StrippableLogSlabBlock(LAIRELOSSE_LOG, () -> STRIPPED_LAIRELOSSE_LOG_SLAB.get()));
		LAIRELOSSE_WOOD_SLAB = BLOCKS.register("lairelosse_wood_slab", () -> new StrippableLogSlabBlock(LAIRELOSSE_WOOD, () -> STRIPPED_LAIRELOSSE_WOOD_SLAB.get()));
		LAIRELOSSE_WOOD_STAIRS = BLOCKS.register("lairelosse_wood_stairs", () -> new StrippableLogStairsBlock(LAIRELOSSE_WOOD, () -> STRIPPED_LAIRELOSSE_WOOD_STAIRS.get()));
		LAIRELOSSE_BRANCH = BLOCKS.register("lairelosse_branch", () -> new StrippableBranchBlock(LAIRELOSSE_WOOD, () -> STRIPPED_LAIRELOSSE_BRANCH.get()));
		STRIPPED_LAIRELOSSE_LOG_SLAB = BLOCKS.register("stripped_lairelosse_log_slab", () -> new LogSlabBlock(STRIPPED_LAIRELOSSE_LOG));
		STRIPPED_LAIRELOSSE_WOOD_SLAB = BLOCKS.register("stripped_lairelosse_wood_slab", () -> new LogSlabBlock(STRIPPED_LAIRELOSSE_WOOD));
		STRIPPED_LAIRELOSSE_WOOD_STAIRS = BLOCKS.register("stripped_lairelosse_wood_stairs", () -> new LogStairsBlock(STRIPPED_LAIRELOSSE_WOOD));
		STRIPPED_LAIRELOSSE_BRANCH = BLOCKS.register("stripped_lairelosse_branch", () -> new BranchBlock(STRIPPED_LAIRELOSSE_WOOD));
		LAIRELOSSE_BEAM_SLAB = BLOCKS.register("lairelosse_beam_slab", () -> new LogSlabBlock(LAIRELOSSE_BEAM));
		CEDAR_LOG_SLAB = BLOCKS.register("cedar_log_slab", () -> new StrippableLogSlabBlock(CEDAR_LOG, () -> STRIPPED_CEDAR_LOG_SLAB.get()));
		CEDAR_WOOD_SLAB = BLOCKS.register("cedar_wood_slab", () -> new StrippableLogSlabBlock(CEDAR_WOOD, () -> STRIPPED_CEDAR_WOOD_SLAB.get()));
		CEDAR_WOOD_STAIRS = BLOCKS.register("cedar_wood_stairs", () -> new StrippableLogStairsBlock(CEDAR_WOOD, () -> STRIPPED_CEDAR_WOOD_STAIRS.get()));
		CEDAR_BRANCH = BLOCKS.register("cedar_branch", () -> new StrippableBranchBlock(CEDAR_WOOD, () -> STRIPPED_CEDAR_BRANCH.get()));
		STRIPPED_CEDAR_LOG_SLAB = BLOCKS.register("stripped_cedar_log_slab", () -> new LogSlabBlock(STRIPPED_CEDAR_LOG));
		STRIPPED_CEDAR_WOOD_SLAB = BLOCKS.register("stripped_cedar_wood_slab", () -> new LogSlabBlock(STRIPPED_CEDAR_WOOD));
		STRIPPED_CEDAR_WOOD_STAIRS = BLOCKS.register("stripped_cedar_wood_stairs", () -> new LogStairsBlock(STRIPPED_CEDAR_WOOD));
		STRIPPED_CEDAR_BRANCH = BLOCKS.register("stripped_cedar_branch", () -> new BranchBlock(STRIPPED_CEDAR_WOOD));
		CEDAR_BEAM_SLAB = BLOCKS.register("cedar_beam_slab", () -> new LogSlabBlock(CEDAR_BEAM));
		FIR_LOG_SLAB = BLOCKS.register("fir_log_slab", () -> new StrippableLogSlabBlock(FIR_LOG, () -> STRIPPED_FIR_LOG_SLAB.get()));
		FIR_WOOD_SLAB = BLOCKS.register("fir_wood_slab", () -> new StrippableLogSlabBlock(FIR_WOOD, () -> STRIPPED_FIR_WOOD_SLAB.get()));
		FIR_WOOD_STAIRS = BLOCKS.register("fir_wood_stairs", () -> new StrippableLogStairsBlock(FIR_WOOD, () -> STRIPPED_FIR_WOOD_STAIRS.get()));
		FIR_BRANCH = BLOCKS.register("fir_branch", () -> new StrippableBranchBlock(FIR_WOOD, () -> STRIPPED_FIR_BRANCH.get()));
		STRIPPED_FIR_LOG_SLAB = BLOCKS.register("stripped_fir_log_slab", () -> new LogSlabBlock(STRIPPED_FIR_LOG));
		STRIPPED_FIR_WOOD_SLAB = BLOCKS.register("stripped_fir_wood_slab", () -> new LogSlabBlock(STRIPPED_FIR_WOOD));
		STRIPPED_FIR_WOOD_STAIRS = BLOCKS.register("stripped_fir_wood_stairs", () -> new LogStairsBlock(STRIPPED_FIR_WOOD));
		STRIPPED_FIR_BRANCH = BLOCKS.register("stripped_fir_branch", () -> new BranchBlock(STRIPPED_FIR_WOOD));
		FIR_BEAM_SLAB = BLOCKS.register("fir_beam_slab", () -> new LogSlabBlock(FIR_BEAM));
		LARCH_LOG_SLAB = BLOCKS.register("larch_log_slab", () -> new StrippableLogSlabBlock(LARCH_LOG, () -> STRIPPED_LARCH_LOG_SLAB.get()));
		LARCH_WOOD_SLAB = BLOCKS.register("larch_wood_slab", () -> new StrippableLogSlabBlock(LARCH_WOOD, () -> STRIPPED_LARCH_WOOD_SLAB.get()));
		LARCH_WOOD_STAIRS = BLOCKS.register("larch_wood_stairs", () -> new StrippableLogStairsBlock(LARCH_WOOD, () -> STRIPPED_LARCH_WOOD_STAIRS.get()));
		LARCH_BRANCH = BLOCKS.register("larch_branch", () -> new StrippableBranchBlock(LARCH_WOOD, () -> STRIPPED_LARCH_BRANCH.get()));
		STRIPPED_LARCH_LOG_SLAB = BLOCKS.register("stripped_larch_log_slab", () -> new LogSlabBlock(STRIPPED_LARCH_LOG));
		STRIPPED_LARCH_WOOD_SLAB = BLOCKS.register("stripped_larch_wood_slab", () -> new LogSlabBlock(STRIPPED_LARCH_WOOD));
		STRIPPED_LARCH_WOOD_STAIRS = BLOCKS.register("stripped_larch_wood_stairs", () -> new LogStairsBlock(STRIPPED_LARCH_WOOD));
		STRIPPED_LARCH_BRANCH = BLOCKS.register("stripped_larch_branch", () -> new BranchBlock(STRIPPED_LARCH_WOOD));
		LARCH_BEAM_SLAB = BLOCKS.register("larch_beam_slab", () -> new LogSlabBlock(LARCH_BEAM));
		HOLLY_LOG_SLAB = BLOCKS.register("holly_log_slab", () -> new StrippableLogSlabBlock(HOLLY_LOG, () -> STRIPPED_HOLLY_LOG_SLAB.get()));
		HOLLY_WOOD_SLAB = BLOCKS.register("holly_wood_slab", () -> new StrippableLogSlabBlock(HOLLY_WOOD, () -> STRIPPED_HOLLY_WOOD_SLAB.get()));
		HOLLY_WOOD_STAIRS = BLOCKS.register("holly_wood_stairs", () -> new StrippableLogStairsBlock(HOLLY_WOOD, () -> STRIPPED_HOLLY_WOOD_STAIRS.get()));
		HOLLY_BRANCH = BLOCKS.register("holly_branch", () -> new StrippableBranchBlock(HOLLY_WOOD, () -> STRIPPED_HOLLY_BRANCH.get()));
		STRIPPED_HOLLY_LOG_SLAB = BLOCKS.register("stripped_holly_log_slab", () -> new LogSlabBlock(STRIPPED_HOLLY_LOG));
		STRIPPED_HOLLY_WOOD_SLAB = BLOCKS.register("stripped_holly_wood_slab", () -> new LogSlabBlock(STRIPPED_HOLLY_WOOD));
		STRIPPED_HOLLY_WOOD_STAIRS = BLOCKS.register("stripped_holly_wood_stairs", () -> new LogStairsBlock(STRIPPED_HOLLY_WOOD));
		STRIPPED_HOLLY_BRANCH = BLOCKS.register("stripped_holly_branch", () -> new BranchBlock(STRIPPED_HOLLY_WOOD));
		HOLLY_BEAM_SLAB = BLOCKS.register("holly_beam_slab", () -> new LogSlabBlock(HOLLY_BEAM));
		GREEN_OAK_LOG_SLAB = BLOCKS.register("green_oak_log_slab", () -> new StrippableLogSlabBlock(GREEN_OAK_LOG, () -> STRIPPED_GREEN_OAK_LOG_SLAB.get()));
		GREEN_OAK_WOOD_SLAB = BLOCKS.register("green_oak_wood_slab", () -> new StrippableLogSlabBlock(GREEN_OAK_WOOD, () -> STRIPPED_GREEN_OAK_WOOD_SLAB.get()));
		GREEN_OAK_WOOD_STAIRS = BLOCKS.register("green_oak_wood_stairs", () -> new StrippableLogStairsBlock(GREEN_OAK_WOOD, () -> STRIPPED_GREEN_OAK_WOOD_STAIRS.get()));
		GREEN_OAK_BRANCH = BLOCKS.register("green_oak_branch", () -> new StrippableBranchBlock(GREEN_OAK_WOOD, () -> STRIPPED_GREEN_OAK_BRANCH.get()));
		STRIPPED_GREEN_OAK_LOG_SLAB = BLOCKS.register("stripped_green_oak_log_slab", () -> new LogSlabBlock(STRIPPED_GREEN_OAK_LOG));
		STRIPPED_GREEN_OAK_WOOD_SLAB = BLOCKS.register("stripped_green_oak_wood_slab", () -> new LogSlabBlock(STRIPPED_GREEN_OAK_WOOD));
		STRIPPED_GREEN_OAK_WOOD_STAIRS = BLOCKS.register("stripped_green_oak_wood_stairs", () -> new LogStairsBlock(STRIPPED_GREEN_OAK_WOOD));
		STRIPPED_GREEN_OAK_BRANCH = BLOCKS.register("stripped_green_oak_branch", () -> new BranchBlock(STRIPPED_GREEN_OAK_WOOD));
		GREEN_OAK_BEAM_SLAB = BLOCKS.register("green_oak_beam_slab", () -> new LogSlabBlock(GREEN_OAK_BEAM));
		CYPRESS_LOG_SLAB = BLOCKS.register("cypress_log_slab", () -> new StrippableLogSlabBlock(CYPRESS_LOG, () -> STRIPPED_CYPRESS_LOG_SLAB.get()));
		CYPRESS_WOOD_SLAB = BLOCKS.register("cypress_wood_slab", () -> new StrippableLogSlabBlock(CYPRESS_WOOD, () -> STRIPPED_CYPRESS_WOOD_SLAB.get()));
		CYPRESS_WOOD_STAIRS = BLOCKS.register("cypress_wood_stairs", () -> new StrippableLogStairsBlock(CYPRESS_WOOD, () -> STRIPPED_CYPRESS_WOOD_STAIRS.get()));
		CYPRESS_BRANCH = BLOCKS.register("cypress_branch", () -> new StrippableBranchBlock(CYPRESS_WOOD, () -> STRIPPED_CYPRESS_BRANCH.get()));
		STRIPPED_CYPRESS_LOG_SLAB = BLOCKS.register("stripped_cypress_log_slab", () -> new LogSlabBlock(STRIPPED_CYPRESS_LOG));
		STRIPPED_CYPRESS_WOOD_SLAB = BLOCKS.register("stripped_cypress_wood_slab", () -> new LogSlabBlock(STRIPPED_CYPRESS_WOOD));
		STRIPPED_CYPRESS_WOOD_STAIRS = BLOCKS.register("stripped_cypress_wood_stairs", () -> new LogStairsBlock(STRIPPED_CYPRESS_WOOD));
		STRIPPED_CYPRESS_BRANCH = BLOCKS.register("stripped_cypress_branch", () -> new BranchBlock(STRIPPED_CYPRESS_WOOD));
		CYPRESS_BEAM_SLAB = BLOCKS.register("cypress_beam_slab", () -> new LogSlabBlock(CYPRESS_BEAM));
		ROTTEN_LOG_SLAB = BLOCKS.register("rotten_log_slab", () -> new StrippableRottenLogSlabBlock(ROTTEN_LOG, () -> STRIPPED_ROTTEN_LOG_SLAB.get()));
		ROTTEN_WOOD_SLAB = BLOCKS.register("rotten_wood_slab", () -> new StrippableLogSlabBlock(ROTTEN_WOOD, () -> STRIPPED_ROTTEN_WOOD_SLAB.get()));
		ROTTEN_WOOD_STAIRS = BLOCKS.register("rotten_wood_stairs", () -> new StrippableLogStairsBlock(ROTTEN_WOOD, () -> STRIPPED_ROTTEN_WOOD_STAIRS.get()));
		ROTTEN_BRANCH = BLOCKS.register("rotten_branch", () -> new StrippableBranchBlock(ROTTEN_WOOD, () -> STRIPPED_ROTTEN_BRANCH.get()));
		STRIPPED_ROTTEN_LOG_SLAB = BLOCKS.register("stripped_rotten_log_slab", () -> new RottenLogSlabBlock(STRIPPED_ROTTEN_LOG));
		STRIPPED_ROTTEN_WOOD_SLAB = BLOCKS.register("stripped_rotten_wood_slab", () -> new LogSlabBlock(STRIPPED_ROTTEN_WOOD));
		STRIPPED_ROTTEN_WOOD_STAIRS = BLOCKS.register("stripped_rotten_wood_stairs", () -> new LogStairsBlock(STRIPPED_ROTTEN_WOOD));
		STRIPPED_ROTTEN_BRANCH = BLOCKS.register("stripped_rotten_branch", () -> new BranchBlock(STRIPPED_ROTTEN_WOOD));
		ROTTEN_BEAM_SLAB = BLOCKS.register("rotten_beam_slab", () -> new RottenWoodBeamSlabBlock(ROTTEN_BEAM));
		LAPIS_TRIMMED_BLUE_BRICK = BLOCKS.register("lapis_trimmed_blue_brick", () -> new LOTRStoneBlock(BLUE_BRICK));
		DWARVEN_TORCH = BLOCKS.register("dwarven_torch", () -> new LOTRTorchBlock(14));
		DWARVEN_WALL_TORCH = BLOCKS.register("dwarven_wall_torch", () -> new LOTRWallTorchBlock(DWARVEN_TORCH));
		SNOW_BRICK = BLOCKS.register("snow_brick", SnowBrickBlock::new);
		SNOW_BRICK_SLAB = BLOCKS.register("snow_brick_slab", () -> new AxialSlabBlock(SNOW_BRICK));
		SNOW_BRICK_STAIRS = BLOCKS.register("snow_brick_stairs", () -> new LOTRStairsBlock(SNOW_BRICK));
		SNOW_BRICK_WALL = BLOCKS.register("snow_brick_wall", () -> new LOTRWallBlock(SNOW_BRICK));
		LOSSOTH_CRAFTING_TABLE = BLOCKS.register("lossoth_crafting_table", () -> new FactionCraftingTableBlock.Lossoth(FIR_PLANKS));
		ICE_BRICK = BLOCKS.register("ice_brick", IceBrickBlock::new);
		ICE_BRICK_SLAB = BLOCKS.register("ice_brick_slab", () -> new AxialSlabBlock(ICE_BRICK));
		ICE_BRICK_STAIRS = BLOCKS.register("ice_brick_stairs", () -> new LOTRStairsBlock(ICE_BRICK));
		ICE_BRICK_WALL = BLOCKS.register("ice_brick_wall", () -> new LOTRWallBlock(ICE_BRICK));
		SNOW_PATH = BLOCKS.register("snow_path", SnowPathBlock::new);
		FUR_BUNDLE = BLOCKS.register("fur_bundle", () -> new BundleBlock(MaterialColor.COLOR_BROWN));
		LEATHER_BUNDLE = BLOCKS.register("leather_bundle", () -> new BundleBlock(MaterialColor.COLOR_ORANGE));
		BLUBBER_TORCH = BLOCKS.register("blubber_torch", () -> new LOTRTorchBlock(12));
		BLUBBER_WALL_TORCH = BLOCKS.register("blubber_wall_torch", () -> new LOTRWallTorchBlock(BLUBBER_TORCH));
		CUSTOM_WAYPOINT_MARKER = BLOCKS.register("custom_waypoint_marker", CustomWaypointMarkerBlock::new);
		DUNLENDING_CRAFTING_TABLE = BLOCKS.register("dunlending_crafting_table", () -> new FactionCraftingTableBlock.Dunlending(() -> Blocks.COBBLESTONE));
		CARVED_CHALK_BRICK = BLOCKS.register("carved_chalk_brick", () -> new LOTRStoneBlock(CHALK_BRICK));
		GONDOR_BEACON = BLOCKS.register("gondor_beacon", GondorBeaconBlock::new);
		FALLEN_OAK_LEAVES = BLOCKS.register("fallen_oak_leaves", () -> new FallenLeavesBlock(Blocks.OAK_LEAVES));
		FALLEN_SPRUCE_LEAVES = BLOCKS.register("fallen_spruce_leaves", () -> new FallenLeavesBlock(Blocks.SPRUCE_LEAVES));
		FALLEN_BIRCH_LEAVES = BLOCKS.register("fallen_birch_leaves", () -> new FallenLeavesBlock(Blocks.BIRCH_LEAVES));
		FALLEN_JUNGLE_LEAVES = BLOCKS.register("fallen_jungle_leaves", () -> new FallenLeavesBlock(Blocks.JUNGLE_LEAVES));
		FALLEN_ACACIA_LEAVES = BLOCKS.register("fallen_acacia_leaves", () -> new FallenLeavesBlock(Blocks.ACACIA_LEAVES));
		FALLEN_DARK_OAK_LEAVES = BLOCKS.register("fallen_dark_oak_leaves", () -> new FallenLeavesBlock(Blocks.DARK_OAK_LEAVES));
		FALLEN_PINE_LEAVES = BLOCKS.register("fallen_pine_leaves", () -> new FallenLeavesBlock(PINE_LEAVES));
		FALLEN_MALLORN_LEAVES = BLOCKS.register("fallen_mallorn_leaves", () -> new FallenLeavesBlock(MALLORN_LEAVES));
		FALLEN_MIRK_OAK_LEAVES = BLOCKS.register("fallen_mirk_oak_leaves", () -> new FallenLeavesBlock(MIRK_OAK_LEAVES));
		FALLEN_APPLE_LEAVES = BLOCKS.register("fallen_apple_leaves", () -> new FallenLeavesBlock(APPLE_LEAVES));
		FALLEN_PEAR_LEAVES = BLOCKS.register("fallen_pear_leaves", () -> new FallenLeavesBlock(PEAR_LEAVES));
		FALLEN_CHERRY_LEAVES = BLOCKS.register("fallen_cherry_leaves", () -> new FallenLeavesBlock(CHERRY_LEAVES));
		FALLEN_LEBETHRON_LEAVES = BLOCKS.register("fallen_lebethron_leaves", () -> new FallenLeavesBlock(LEBETHRON_LEAVES));
		FALLEN_BEECH_LEAVES = BLOCKS.register("fallen_beech_leaves", () -> new FallenLeavesBlock(BEECH_LEAVES));
		FALLEN_MAPLE_LEAVES = BLOCKS.register("fallen_maple_leaves", () -> new FallenLeavesBlock(MAPLE_LEAVES));
		FALLEN_ASPEN_LEAVES = BLOCKS.register("fallen_aspen_leaves", () -> new FallenLeavesBlock(ASPEN_LEAVES));
		FALLEN_LAIRELOSSE_LEAVES = BLOCKS.register("fallen_lairelosse_leaves", () -> new FallenLeavesBlock(LAIRELOSSE_LEAVES));
		FALLEN_CEDAR_LEAVES = BLOCKS.register("fallen_cedar_leaves", () -> new FallenLeavesBlock(CEDAR_LEAVES));
		FALLEN_FIR_LEAVES = BLOCKS.register("fallen_fir_leaves", () -> new FallenLeavesBlock(FIR_LEAVES));
		FALLEN_LARCH_LEAVES = BLOCKS.register("fallen_larch_leaves", () -> new FallenLeavesBlock(LARCH_LEAVES));
		FALLEN_HOLLY_LEAVES = BLOCKS.register("fallen_holly_leaves", () -> new FallenLeavesBlock(HOLLY_LEAVES));
		FALLEN_GREEN_OAK_LEAVES = BLOCKS.register("fallen_green_oak_leaves", () -> new FallenLeavesBlock(GREEN_OAK_LEAVES));
		FALLEN_RED_OAK_LEAVES = BLOCKS.register("fallen_red_oak_leaves", () -> new FallenLeavesBlock(RED_OAK_LEAVES));
		FALLEN_CYPRESS_LEAVES = BLOCKS.register("fallen_cypress_leaves", () -> new FallenLeavesBlock(CYPRESS_LEAVES));
		THATCH_FLOORING = BLOCKS.register("thatch_flooring", ThatchFloorBlock::new);
		WOODEN_MUG = BLOCKS.register("wooden_mug", VesselDrinkBlock::makeWoodenMug);
		CERAMIC_MUG = BLOCKS.register("ceramic_mug", VesselDrinkBlock::makeCeramicMug);
		GOLDEN_GOBLET = BLOCKS.register("golden_goblet", VesselDrinkBlock::makeMetalGoblet);
		SILVER_GOBLET = BLOCKS.register("silver_goblet", VesselDrinkBlock::makeMetalGoblet);
		COPPER_GOBLET = BLOCKS.register("copper_goblet", VesselDrinkBlock::makeMetalGoblet);
		WOODEN_CUP = BLOCKS.register("wooden_cup", VesselDrinkBlock::makeWoodenGoblet);
		ALE_HORN = BLOCKS.register("ale_horn", VesselDrinkBlock::makeAleHorn);
		GOLDEN_ALE_HORN = BLOCKS.register("golden_ale_horn", VesselDrinkBlock::makeAleHorn);
		MORDOR_BASALT_BRICK = BLOCKS.register("mordor_basalt_brick", () -> new LOTRStoneBlock(() -> Blocks.BASALT));
		MORDOR_BASALT_BRICK_SLAB = BLOCKS.register("mordor_basalt_brick_slab", () -> new AxialSlabBlock(MORDOR_BASALT_BRICK));
		MORDOR_BASALT_BRICK_STAIRS = BLOCKS.register("mordor_basalt_brick_stairs", () -> new LOTRStairsBlock(MORDOR_BASALT_BRICK));
		MORDOR_BASALT_BRICK_WALL = BLOCKS.register("mordor_basalt_brick_wall", () -> new LOTRWallBlock(MORDOR_BASALT_BRICK));
		CARVED_MORDOR_BASALT_BRICK = BLOCKS.register("carved_mordor_basalt_brick", () -> new LOTRStoneBlock(MORDOR_BASALT_BRICK));
		SOUL_FIRE_HEARTH_BLOCK = BLOCKS.register("soul_fire_hearth_block", SoulFireHearthBlock::new);
		WOODEN_GATE = BLOCKS.register("wooden_gate", GateBlock::makeWooden);
		WOODEN_PORTCULLIS = BLOCKS.register("wooden_portcullis", GateBlock::makeWoodenCutout);
		IRON_PORTCULLIS = BLOCKS.register("iron_portcullis", GateBlock::makeMetalCutout);
		BRONZE_PORTCULLIS = BLOCKS.register("bronze_portcullis", GateBlock::makeMetalCutout);
		SILVER_GATE = BLOCKS.register("silver_gate", GateBlock::makeMetal);
		GOLDEN_GATE = BLOCKS.register("golden_gate", GateBlock::makeMetal);
		MITHRIL_GATE = BLOCKS.register("mithril_gate", GateBlock::makeMetal);
		DWARVEN_GATE = BLOCKS.register("dwarven_gate", GateBlock::makeStone);
		ORC_GATE = BLOCKS.register("orc_gate", GateBlock::makeMetal);
		GONDOR_GATE = BLOCKS.register("gondor_gate", GateBlock::makeWooden);
		DOL_AMROTH_GATE = BLOCKS.register("dol_amroth_gate", GateBlock::makeWooden);
		ROHAN_GATE = BLOCKS.register("rohan_gate", GateBlock::makeWooden);
		HIGH_ELVEN_GATE = BLOCKS.register("high_elven_gate", GateBlock::makeWooden);
		GALADHRIM_GATE = BLOCKS.register("galadhrim_gate", GateBlock::makeWooden);
		WOOD_ELVEN_GATE = BLOCKS.register("wood_elven_gate", GateBlock::makeWooden);
		HARAD_GATE = BLOCKS.register("harad_gate", GateBlock::makeWooden);
		URUK_GATE = BLOCKS.register("uruk_gate", GateBlock::makeMetal);
		WICKER_FENCE = BLOCKS.register("wicker_fence", WickerFenceBlock::new);
		RED_HOBBIT_GATE = BLOCKS.register("red_hobbit_gate", GateBlock::makeWooden);
		YELLOW_HOBBIT_GATE = BLOCKS.register("yellow_hobbit_gate", GateBlock::makeWooden);
		GREEN_HOBBIT_GATE = BLOCKS.register("green_hobbit_gate", GateBlock::makeWooden);
		BLUE_HOBBIT_GATE = BLOCKS.register("blue_hobbit_gate", GateBlock::makeWooden);
		MORGUL_FLOWER = BLOCKS.register("morgul_flower", MorgulFlowerBlock::new);
		POTTED_MORGUL_FLOWER = BLOCKS.register("potted_morgul_flower", () -> new LOTRPottedPlantBlock(MORGUL_FLOWER));
		REED_BALE = BLOCKS.register("reed_bale", () -> new DirectionalBaleBlock(MaterialColor.TERRACOTTA_GREEN));
		FLAX_BALE = BLOCKS.register("flax_bale", () -> new DirectionalBaleBlock(MaterialColor.TERRACOTTA_LIGHT_GREEN));
		WICKER_BARS = BLOCKS.register("wicker_bars", WickerBarsBlock::new);
		WICKER_FENCE_GATE = BLOCKS.register("wicker_fence_gate", WickerFenceGateBlock::new);
		CULUMALDA_LOG = BLOCKS.register("culumalda_log", () -> new StrippableLogBlock(MaterialColor.PODZOL, MaterialColor.COLOR_BROWN, () -> STRIPPED_CULUMALDA_LOG.get()));
		CULUMALDA_WOOD = BLOCKS.register("culumalda_wood", () -> new StrippableWoodBlock(CULUMALDA_LOG, () -> STRIPPED_CULUMALDA_WOOD.get()));
		CULUMALDA_PLANKS = BLOCKS.register("culumalda_planks", () -> new LOTRPlanksBlock(MaterialColor.PODZOL));
		CULUMALDA_LEAVES = BLOCKS.register("culumalda_leaves", () -> new LOTRLeavesBlock().setFallingParticle(LOTRParticles.CULUMALDA_POLLEN, 60));
		CULUMALDA_SAPLING = BLOCKS.register("culumalda_sapling", () -> new LOTRSaplingBlock(new CulumaldaTree()));
		POTTED_CULUMALDA_SAPLING = BLOCKS.register("potted_culumalda_sapling", () -> new LOTRPottedPlantBlock(CULUMALDA_SAPLING));
		CULUMALDA_SLAB = BLOCKS.register("culumalda_slab", () -> new AxialSlabBlock(CULUMALDA_PLANKS));
		CULUMALDA_STAIRS = BLOCKS.register("culumalda_stairs", () -> new LOTRStairsBlock(CULUMALDA_PLANKS));
		CULUMALDA_FENCE = BLOCKS.register("culumalda_fence", () -> new LOTRFenceBlock(CULUMALDA_PLANKS));
		CULUMALDA_FENCE_GATE = BLOCKS.register("culumalda_fence_gate", () -> new LOTRFenceGateBlock(CULUMALDA_PLANKS));
		CULUMALDA_DOOR = BLOCKS.register("culumalda_door", () -> new LOTRDoorBlock(CULUMALDA_PLANKS));
		CULUMALDA_TRAPDOOR = BLOCKS.register("culumalda_trapdoor", () -> new LOTRTrapdoorBlock(CULUMALDA_PLANKS));
		CULUMALDA_PRESSURE_PLATE = BLOCKS.register("culumalda_pressure_plate", () -> new LOTRWoodPressurePlateBlock(CULUMALDA_PLANKS));
		CULUMALDA_BUTTON = BLOCKS.register("culumalda_button", LOTRWoodButtonBlock::new);
		STRIPPED_CULUMALDA_LOG = BLOCKS.register("stripped_culumalda_log", () -> new LOTRStrippedLogBlock(CULUMALDA_LOG));
		STRIPPED_CULUMALDA_WOOD = BLOCKS.register("stripped_culumalda_wood", () -> new LOTRStrippedWoodBlock(STRIPPED_CULUMALDA_LOG));
		CULUMALDA_BEAM = BLOCKS.register("culumalda_beam", () -> new WoodBeamBlock(CULUMALDA_LOG));
		CULUMALDA_SIGN = BLOCKS.register("culumalda_sign", () -> new LOTRStandingSignBlock(CULUMALDA_PLANKS, LOTRSignTypes.CULUMALDA));
		CULUMALDA_WALL_SIGN = BLOCKS.register("culumalda_wall_sign", () -> new LOTRWallSignBlock(CULUMALDA_SIGN));
		CULUMALDA_LOG_SLAB = BLOCKS.register("culumalda_log_slab", () -> new StrippableLogSlabBlock(CULUMALDA_LOG, () -> STRIPPED_CULUMALDA_LOG_SLAB.get()));
		CULUMALDA_WOOD_SLAB = BLOCKS.register("culumalda_wood_slab", () -> new StrippableLogSlabBlock(CULUMALDA_WOOD, () -> STRIPPED_CULUMALDA_WOOD_SLAB.get()));
		CULUMALDA_WOOD_STAIRS = BLOCKS.register("culumalda_wood_stairs", () -> new StrippableLogStairsBlock(CULUMALDA_WOOD, () -> STRIPPED_CULUMALDA_WOOD_STAIRS.get()));
		CULUMALDA_BRANCH = BLOCKS.register("culumalda_branch", () -> new StrippableBranchBlock(CULUMALDA_WOOD, () -> STRIPPED_CULUMALDA_BRANCH.get()));
		STRIPPED_CULUMALDA_LOG_SLAB = BLOCKS.register("stripped_culumalda_log_slab", () -> new LogSlabBlock(STRIPPED_CULUMALDA_LOG));
		STRIPPED_CULUMALDA_WOOD_SLAB = BLOCKS.register("stripped_culumalda_wood_slab", () -> new LogSlabBlock(STRIPPED_CULUMALDA_WOOD));
		STRIPPED_CULUMALDA_WOOD_STAIRS = BLOCKS.register("stripped_culumalda_wood_stairs", () -> new LogStairsBlock(STRIPPED_CULUMALDA_WOOD));
		STRIPPED_CULUMALDA_BRANCH = BLOCKS.register("stripped_culumalda_branch", () -> new BranchBlock(STRIPPED_CULUMALDA_WOOD));
		CULUMALDA_BEAM_SLAB = BLOCKS.register("culumalda_beam_slab", () -> new LogSlabBlock(CULUMALDA_BEAM));
		FALLEN_CULUMALDA_LEAVES = BLOCKS.register("fallen_culumalda_leaves", () -> new FallenLeavesBlock(CULUMALDA_LEAVES));
		BREE_CRAFTING_TABLE = BLOCKS.register("bree_crafting_table", () -> new FactionCraftingTableBlock.Bree(BEECH_PLANKS));
		PALANTIR = BLOCKS.register("palantir", PalantirBlock::new);
		MORDOR_DIRT_PATH = BLOCKS.register("mordor_dirt_path", () -> new MordorDirtPathBlock(MaterialColor.TERRACOTTA_BROWN));
		CHALK_PATH = BLOCKS.register("chalk_path", () -> new ChalkPathBlock(MaterialColor.QUARTZ, 0.5F, 0.5F));
		OAK_VERTICAL_SLAB = makeVerticalVanillaSlab("oak", Blocks.OAK_SLAB);
		SPRUCE_VERTICAL_SLAB = makeVerticalVanillaSlab("spruce", Blocks.SPRUCE_SLAB);
		BIRCH_VERTICAL_SLAB = makeVerticalVanillaSlab("birch", Blocks.BIRCH_SLAB);
		JUNGLE_VERTICAL_SLAB = makeVerticalVanillaSlab("jungle", Blocks.JUNGLE_SLAB);
		ACACIA_VERTICAL_SLAB = makeVerticalVanillaSlab("acacia", Blocks.ACACIA_SLAB);
		DARK_OAK_VERTICAL_SLAB = makeVerticalVanillaSlab("dark_oak", Blocks.DARK_OAK_SLAB);
		STONE_VERTICAL_SLAB = makeVerticalVanillaSlab("stone", Blocks.STONE_SLAB);
		SMOOTH_STONE_VERTICAL_SLAB = makeVerticalVanillaSlab("smooth_stone", Blocks.SMOOTH_STONE_SLAB);
		SANDSTONE_VERTICAL_SLAB = makeVerticalVanillaSlab("sandstone", Blocks.SANDSTONE_SLAB);
		CUT_SANDSTONE_VERTICAL_SLAB = makeVerticalVanillaSlab("cut_sandstone", Blocks.CUT_SANDSTONE_SLAB);
		PETRIFIED_OAK_VERTICAL_SLAB = makeVerticalVanillaSlab("petrified_oak", Blocks.PETRIFIED_OAK_SLAB);
		COBBLESTONE_VERTICAL_SLAB = makeVerticalVanillaSlab("cobblestone", Blocks.COBBLESTONE_SLAB);
		BRICK_VERTICAL_SLAB = makeVerticalVanillaSlab("brick", Blocks.BRICK_SLAB);
		STONE_BRICK_VERTICAL_SLAB = makeVerticalVanillaSlab("stone_brick", Blocks.STONE_BRICK_SLAB);
		NETHER_BRICK_VERTICAL_SLAB = makeVerticalVanillaSlab("nether_brick", Blocks.NETHER_BRICK_SLAB);
		QUARTZ_VERTICAL_SLAB = makeVerticalVanillaSlab("quartz", Blocks.QUARTZ_SLAB);
		RED_SANDSTONE_VERTICAL_SLAB = makeVerticalVanillaSlab("red_sandstone", Blocks.RED_SANDSTONE_SLAB);
		CUT_RED_SANDSTONE_SLAB = makeVerticalVanillaSlab("cut_red_sandstone", Blocks.CUT_RED_SANDSTONE_SLAB);
		PRISMARINE_VERTICAL_SLAB = makeVerticalVanillaSlab("prismarine", Blocks.PRISMARINE_SLAB);
		PRISMARINE_BRICK_VERTICAL_SLAB = makeVerticalVanillaSlab("prismarine_brick", Blocks.PRISMARINE_BRICK_SLAB);
		DARK_PRISMARINE_VERTICAL_SLAB = makeVerticalVanillaSlab("dark_prismarine", Blocks.DARK_PRISMARINE_SLAB);
		PURPUR_VERTICAL_SLAB = makeVerticalVanillaSlab("purpur", Blocks.PURPUR_SLAB);
		POLISHED_GRANITE_VERTICAL_SLAB = makeVerticalVanillaSlab("polished_granite", Blocks.POLISHED_GRANITE_SLAB);
		SMOOTH_RED_SANDSTONE_VERTICAL_SLAB = makeVerticalVanillaSlab("smooth_red_sandstone", Blocks.SMOOTH_RED_SANDSTONE_SLAB);
		MOSSY_STONE_BRICK_VERTICAL_SLAB = makeVerticalVanillaSlab("mossy_stone_brick", Blocks.MOSSY_STONE_BRICK_SLAB);
		POLISHED_DIORITE_VERTICAL_SLAB = makeVerticalVanillaSlab("polished_diorite", Blocks.POLISHED_DIORITE_SLAB);
		MOSSY_COBBLESTONE_VERTICAL_SLAB = makeVerticalVanillaSlab("mossy_cobblestone", Blocks.MOSSY_COBBLESTONE_SLAB);
		END_STONE_BRICK_VERTICAL_SLAB = makeVerticalVanillaSlab("end_stone_brick", Blocks.END_STONE_BRICK_SLAB);
		SMOOTH_SANDSTONE_VERTICAL_SLAB = makeVerticalVanillaSlab("smooth_sandstone", Blocks.SMOOTH_SANDSTONE_SLAB);
		SMOOTH_QUARTZ_VERTICAL_SLAB = makeVerticalVanillaSlab("smooth_quartz", Blocks.SMOOTH_QUARTZ_SLAB);
		GRANITE_VERTICAL_SLAB = makeVerticalVanillaSlab("granite", Blocks.GRANITE_SLAB);
		ANDESITE_VERTICAL_SLAB = makeVerticalVanillaSlab("andesite", Blocks.ANDESITE_SLAB);
		RED_NETHER_BRICK_VERTICAL_SLAB = makeVerticalVanillaSlab("red_nether_brick", Blocks.RED_NETHER_BRICK_SLAB);
		POLISHED_ANDESITE_VERTICAL_SLAB = makeVerticalVanillaSlab("polished_andesite", Blocks.POLISHED_ANDESITE_SLAB);
		DIORITE_VERTICAL_SLAB = makeVerticalVanillaSlab("diorite", Blocks.DIORITE_SLAB);
		CRIMSON_VERTICAL_SLAB = makeVerticalVanillaSlab("crimson", Blocks.CRIMSON_SLAB);
		WARPED_VERTICAL_SLAB = makeVerticalVanillaSlab("warped", Blocks.WARPED_SLAB);
		BLACKSTONE_VERTICAL_SLAB = makeVerticalVanillaSlab("blackstone", Blocks.BLACKSTONE_SLAB);
		POLISHED_BLACKSTONE_BRICK_VERTICAL_SLAB = makeVerticalVanillaSlab("polished_blackstone_brick", Blocks.POLISHED_BLACKSTONE_BRICK_SLAB);
		POLISHED_BLACKSTONE_VERTICAL_SLAB = makeVerticalVanillaSlab("polished_blackstone", Blocks.POLISHED_BLACKSTONE_SLAB);
	}

	public static boolean allowSpawn(BlockState state, IBlockReader reader, BlockPos pos, EntityType<?> entityType) {
		return true;
	}

	public static boolean allowSpawnOnLeaves(BlockState state, IBlockReader reader, BlockPos pos, EntityType<?> entityType) {
		return entityType == EntityType.OCELOT || entityType == EntityType.PARROT;
	}

	public static ToIntFunction<BlockState> constantLight(int light) {
		return state -> light;
	}

	private static RegistryObject<Block> makeVerticalVanillaSlab(String name, Block slabBlock) {
		String fullName = String.format("%s_vertical_slab", name);
		return BLOCKS.register(fullName, () -> new VerticalOnlySlabBlock(slabBlock));
	}

	public static boolean notAllowSpawn(BlockState state, IBlockReader reader, BlockPos pos, EntityType<?> entityType) {
		return false;
	}

	public static boolean posPredicateFalse(BlockState state, IBlockReader reader, BlockPos pos) {
		return false;
	}

	public static boolean posPredicateTrue(BlockState state, IBlockReader reader, BlockPos pos) {
		return true;
	}

	public static void register() {
		IEventBus bus = FMLJavaModLoadingContext.get().getModEventBus();
		BLOCKS.register(bus);
		bus.addGenericListener(Block.class, SignSetupHelper::register);
		bus.addGenericListener(Block.class, LOTRBiomeFeatures::setup);
	}
}
